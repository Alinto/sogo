{"version":3,"sources":["Administration/Administration.app.js","Administration/AdministrationAclController.js","Administration/AdministrationController.js"],"names":["configure","$stateProvider","$urlRouterProvider","state","abstract","views","administration","templateUrl","controller","controllerAs","url","module","acl","resolve","stateUser","stateFolder","otherwise","$q","$stateParams","User","user","_","find","$users","uid","userId","angular","isUndefined","$filter","then","users","reject","$folders","$state","decodeUriFilter","AddressBook","Calendar","folder","o","folderId","$$folders","name","type","id","split","pop","owner","displayName","selectedFolder","runBlock","$log","$rootScope","$on","event","toState","toParams","fromState","fromParams","error","go","current","previous","rejection","config","run","$inject","AdministrationAclController","$timeout","$mdMedia","$mdToast","getTemplate","isDefined","$cards","selectAllRights","$acl","$selectAllRights","selectUser","$event","target","parentNode","classList","contains","vm","selectedUid","selectedUser","$rights","showRights","rights","userFilter","$query","dry","removeUser","$removeUser","addUser","data","$addUser","userToAdd","searchText","close","save","$saveUsersRights","show","simple","content","l","position","hideDelay","this","folderType","AdministrationController","$mdSidenav","sgConstant","Dialog","encodeUriFilter","filter","i","selectFolder","service"],"mappings":"CAGA,WACE,YAUA,SAASA,GAAUC,EAAgBC,GACjCD,EACGE,MAAM,kBACLC,UAAU,EACVC,OACEC,gBACEC,YAAa,sBACbC,WAAY,2BACZC,aAAc,UAInBN,MAAM,yBACLO,IAAK,UACLL,OACEM,QACEJ,YAAa,kBAIlBJ,MAAM,8BACLO,IAAK,0BACLL,OACEO,KACEL,YAAa,6BACbC,WAAY,8BACZC,aAAc,QAGlBI,SACEC,UAAWA,EACXC,YAAaA,KAKnBb,EAAmBc,UAAU,WAO/B,QAASF,GAAUG,EAAIC,EAAcC,GACnC,GAAIC,EAMJ,OAJAA,GAAOC,EAAEC,KAAKH,EAAKI,OAAQ,SAASH,GAClC,MAAOA,GAAKI,KAAON,EAAaO,SAG9BC,QAAQC,YAAYP,GACfD,EAAKS,QAAQV,EAAaO,QAAQI,KAAK,SAASC,GAIrD,MAHAV,GAAOC,EAAEC,KAAKH,EAAKI,OAAQ,SAASH,GAClC,MAAOA,GAAKI,KAAON,EAAaO,SAE9BC,QAAQC,YAAYP,GACfH,EAAGc,OAAO,gBAAkBb,EAAaO,OAAS,cAIlDL,EAAKY,WAAWH,KAAK,WAC1B,MAAOT,OAORA,EAOT,QAASL,GAAYkB,EAAQf,EAAcgB,EAAiBpB,EAAWqB,EAAaC,GAClF,GAAIC,GAAQC,EACRC,EAAWL,EAAgBhB,EAAaqB,SAkB5C,OAhBAF,GAAShB,EAAEC,KAAKR,EAAU0B,UAAW,SAASH,GAC5C,MAAOA,GAAOI,MAAQF,IAItBD,EADiB,eAAfD,EAAOK,KACL,GAAIN,IAAWO,GAAIN,EAAOI,KAAKG,MAAM,KAAKC,MAC3BC,MAAOT,EAAOS,MACdL,KAAMJ,EAAOU,cAE5B,GAAIZ,IAAcQ,GAAIN,EAAOI,KAAKG,MAAM,KAAKC,MAC3BC,MAAOT,EAAOS,MACdL,KAAMJ,EAAOU,cAGrCjC,EAAUkC,eAAiBV,EAAEK,GAEtBL,EAOT,QAASW,GAASC,EAAMC,EAAYlB,GAClCkB,EAAWC,IAAI,oBAAqB,SAASC,EAAOC,EAASC,EAAUC,EAAWC,EAAYC,GAC5FR,EAAKQ,MAAMA,GACXzB,EAAO0B,GAAG,2BAEZR,EAAWC,IAAI,oBAAqB,SAASC,EAAOO,EAASC,EAAUC,GACrEZ,EAAKQ,MAAML,EAAOO,EAASC,EAAUC,KApHzCpC,QAAQf,OAAO,yBAA0B,YAAa,cAAe,sBAAuB,qBAAsB,kBAAmB,qBAClIoD,OAAO/D,GACPgE,IAAIf,GAKPjD,EAAUiE,SAAW,iBAAkB,sBA2CvCnD,EAAUmD,SAAW,KAAM,eAAgB,QAgC3ClD,EAAYkD,SAAW,SAAU,eAAgB,kBAAmB,YAAa,cAAe,YA2BhGhB,EAASgB,SAAW,OAAQ,aAAc,aChH5C,WACE,YAMA,SAASC,GAA4BC,EAAUlC,EAAQmC,EAAUC,EAAUvD,EAAWC,EAAaI,GAyBjG,QAASmD,KACP,MAAI5C,SAAQ6C,UAAUxD,EAAYyD,QACzB,MAAQzD,EAAY+B,MAAQ,aAAe/B,EAAY4B,GAAK,+BAE9D,MAAQ5B,EAAY+B,MAAQ,aAAe/B,EAAY4B,GAAK,0BAGrE,QAAS8B,GAAgBrD,GACvBL,EAAY2D,KAAKC,iBAAiBvD,GAGpC,QAASwD,GAAWxD,EAAMyD,GACxB,GAAIA,GAAUA,EAAOC,OAAOC,WAAWC,UAAUC,SAAS,gBACxD,OAAO,CACLC,GAAGC,aAAe/D,EAAKI,IACzB0D,EAAGC,YAAc,MAGjBD,EAAGC,YAAc/D,EAAKI,IACtB0D,EAAGE,aAAehE,EAClB8D,EAAGE,aAAaC,WAIpB,QAASC,GAAWlE,GAClB,MAAO8D,GAAGC,aAAe/D,EAAKI,KAAOJ,EAAKmE,OAG5C,QAASC,GAAWC,GAClB,MAAOtE,GAAKS,QAAQ6D,EAAQ1E,EAAY2D,KAAK5C,OAAS4D,KAAK,EAAMlE,IAAK0D,EAAG9D,KAAKI,MAGhF,QAASmE,GAAWvE,GAClB+C,EAAS,WACPpD,EAAY2D,KAAKkB,YAAYxE,EAAKI,IAAKT,EAAY+B,QAClD,KAGL,QAAS+C,GAAQC,GACXA,GACF/E,EAAY2D,KAAKqB,SAASD,EAAM/E,EAAY+B,OAAOjB,KAAK,SAAST,GAC/D8D,EAAGc,UAAY,GACfd,EAAGe,WAAa,GAChBf,EAAGC,YAAc,KACb/D,GACFwD,EAAWxD,KAKnB,QAAS8E,KACPjE,EAAO0B,GAAG,yBAAyB9B,KAAK,iBAC/BqD,GAAG9D,KAAK4B,eACfkC,EAAG9D,KAAO,OAId,QAAS+E,KACPpF,EAAY2D,KAAK0B,iBAAiBrF,EAAY+B,OAAOjB,KAAK,WACxDwC,EAASgC,KACPhC,EAASiC,SACNC,QAAQC,EAAE,eACVC,SAAS,gBACTC,UAAU,MAGXtC,EAAS,OACX8B,MA3FN,GAAIhB,GAAKyB,IAETzB,GAAG9D,KAAON,EACVoE,EAAG7C,OAAStB,EACZmE,EAAG0B,WAAalF,QAAQ6C,UAAUxD,EAAYyD,QAAS,cAAgB,WACvEU,EAAGE,aAAe,KAClBF,EAAGC,YAAc,KACjBD,EAAGN,WAAaA,EAChBM,EAAGT,gBAAkBA,EACrBS,EAAGI,WAAaA,EAChBJ,EAAGS,WAAaA,EAChBT,EAAGZ,YAAcA,EACjBY,EAAGgB,MAAQA,EACXhB,EAAGiB,KAAOA,EAEVjB,EAAGc,UAAY,GACfd,EAAGe,WAAa,GAChBf,EAAGM,WAAaA,EAChBN,EAAGW,QAAUA,EAEb9E,EAAY2D,KAAKnD,OAAOR,EAAY+B,OAAOjB,KAAK,SAASiE,GACvDZ,EAAGpD,MAAQgE,IAvBf5B,EAA4BD,SAAW,WAAY,SAAU,WAAY,WAAY,YAAa,cAAe,QAkGjHvC,QACGf,OAAO,yBACPH,WAAW,8BAA+B0D,MC1G/C,WACE,YAMA,SAAS2C,GAAyB5E,EAAQoC,EAAUD,EAAU0C,EAAYC,EAAYC,EAAQC,EAAiB9F,GAa7G,QAASwC,GAAGhD,GACVsB,EAAO0B,GAAG,kBAAoBhD,GAEzByD,EAAS2C,EAAW,WACvBD,EAAW,QAAQZ,QAGvB,QAASgB,GAAOjB,GACd9E,EAAKS,QAAQqE,GAGf,QAASrB,GAAWuC,GACdjC,EAAGE,cAAgBF,EAAGpD,MAAMqF,GAC9BjC,EAAGE,aAAe,KAIlBF,EAAGpD,MAAMqF,GAAGnF,WAAWH,KAAK,WAC1BqD,EAAGE,aAAeF,EAAGpD,MAAMqF,KAKjC,QAASC,GAAa/E,GACpBJ,EAAO0B,GAAG,8BAA+BlC,OAAQyD,EAAGE,aAAa5D,IAAKe,SAAU0E,EAAgB5E,EAAOI,QApCzG,GAAIyC,GAAKyB,IAETzB,GAAGmC,QAAUlG,EAEb+D,EAAGE,aAAe,KAClBF,EAAGpD,MAAQX,EAAKI,OAEhB2D,EAAGvB,GAAKA,EACRuB,EAAGgC,OAASA,EACZhC,EAAGN,WAAaA,EAChBM,EAAGkC,aAAeA,EAZpBP,EAAyB5C,SAAW,SAAU,WAAY,WAAY,aAAc,aAAc,SAAU,kBAAmB,QA2C/HvC,QACGf,OAAO,yBACPH,WAAW,2BAA4BqG","file":"Administration.js","sourcesContent":["/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n/* JavaScript for SOGoAdministration */\n\n(function() {\n  'use strict';\n\n  angular.module('SOGo.AdministrationUI', ['ui.router', 'SOGo.Common', 'SOGo.Authentication', 'SOGo.PreferencesUI', 'SOGo.ContactsUI', 'SOGo.SchedulerUI'])\n    .config(configure)\n    .run(runBlock);\n\n  /**\n   * @ngInject\n   */\n  configure.$inject = ['$stateProvider', '$urlRouterProvider'];\n  function configure($stateProvider, $urlRouterProvider) {\n    $stateProvider\n      .state('administration', {\n        abstract: true,\n        views: {\n          administration: {\n            templateUrl: 'administration.html',\n            controller: 'AdministrationController',\n            controllerAs: 'app'\n          }\n        }\n      })\n      .state('administration.rights', {\n        url: '/rights',\n        views: {\n          module: {\n            templateUrl: 'rights.html'\n          }\n        }\n      })\n      .state('administration.rights.edit', {\n        url: '/:userId/:folderId/edit',\n        views: {\n          acl: {\n            templateUrl: 'UIxAdministrationAclEditor', // UI/Templates/Administration/UIxAdministrationAclEditor.wox\n            controller: 'AdministrationAclController',\n            controllerAs: 'acl'\n          }\n        },\n        resolve: {\n          stateUser: stateUser,\n          stateFolder: stateFolder\n        }\n      });\n\n    // if none of the above states are matched, use this as the fallback\n    $urlRouterProvider.otherwise('/rights');\n  }\n\n  /**\n   * @ngInject\n   */\n  stateUser.$inject = ['$q', '$stateParams', 'User'];\n  function stateUser($q, $stateParams, User) {\n    var user;\n\n    user = _.find(User.$users, function(user) {\n      return user.uid == $stateParams.userId;\n    });\n\n    if (angular.isUndefined(user)) {\n      return User.$filter($stateParams.userId).then(function(users) {\n        user = _.find(User.$users, function(user) {\n          return user.uid == $stateParams.userId;\n        });\n        if (angular.isUndefined(user)) {\n          return $q.reject('User with ID ' + $stateParams.userId + ' not found');\n        }\n        else {\n          // Resolve folders\n          return user.$folders().then(function() {\n            return user;\n          });\n        }\n        return user;\n      });\n    }\n\n    return user;\n  }\n\n  /**\n   * @ngInject\n   */\n  stateFolder.$inject = ['$state', '$stateParams', 'decodeUriFilter', 'stateUser', 'AddressBook', 'Calendar'];\n  function stateFolder($state, $stateParams, decodeUriFilter, stateUser, AddressBook, Calendar) {\n    var folder, o,\n        folderId = decodeUriFilter($stateParams.folderId);\n\n    folder = _.find(stateUser.$$folders, function(folder) {\n      return folder.name == folderId;\n    });\n    \n    if (folder.type == \"Appointment\") {\n      o = new Calendar({ id: folder.name.split('/').pop(),\n                         owner: folder.owner,\n                         name: folder.displayName });\n    } else {\n      o = new AddressBook({ id: folder.name.split('/').pop(),\n                            owner: folder.owner,\n                            name: folder.displayName });\n    }\n\n    stateUser.selectedFolder = o.id;\n\n    return o;\n  }\n\n  /**\n   * @ngInject\n   */\n  runBlock.$inject = ['$log', '$rootScope', '$state'];\n  function runBlock($log, $rootScope, $state) {\n    $rootScope.$on('$stateChangeError', function(event, toState, toParams, fromState, fromParams, error) {\n      $log.error(error);\n      $state.go('administration.rights');\n    });\n    $rootScope.$on('$routeChangeError', function(event, current, previous, rejection) {\n      $log.error(event, current, previous, rejection);\n    });\n  }\n\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n/* JavaScript for SOGoAdministration */\n\n(function() {\n  'use strict';\n  \n  /**\n   * @ngInject\n   */\n  AdministrationAclController.$inject = ['$timeout', '$state', '$mdMedia', '$mdToast', 'stateUser', 'stateFolder', 'User'];\n  function AdministrationAclController($timeout, $state, $mdMedia, $mdToast, stateUser, stateFolder, User) {\n    var vm = this;\n\n    vm.user = stateUser;\n    vm.folder = stateFolder;\n    vm.folderType = angular.isDefined(stateFolder.$cards)? 'AddressBook' : 'Calendar';\n    vm.selectedUser = null;\n    vm.selectedUid = null;\n    vm.selectUser = selectUser;\n    vm.selectAllRights = selectAllRights;\n    vm.showRights = showRights;\n    vm.removeUser = removeUser;\n    vm.getTemplate = getTemplate;\n    vm.close = close;\n    vm.save = save;\n\n    vm.userToAdd = '';\n    vm.searchText = '';\n    vm.userFilter = userFilter;\n    vm.addUser = addUser;\n\n    stateFolder.$acl.$users(stateFolder.owner).then(function(data) {\n      vm.users = data;\n    });\n\n    function getTemplate() {\n      if (angular.isDefined(stateFolder.$cards))\n        return '../' + stateFolder.owner + '/Contacts/' + stateFolder.id + '/UIxContactsUserRightsEditor';\n\n      return '../' + stateFolder.owner + '/Calendar/' + stateFolder.id + '/UIxCalUserRightsEditor';\n    }\n\n    function selectAllRights(user) {\n      stateFolder.$acl.$selectAllRights(user);\n    }\n\n    function selectUser(user, $event) {\n      if ($event && $event.target.parentNode.classList.contains('md-secondary'))\n        return false;\n      if (vm.selectedUid == user.uid) {\n        vm.selectedUid = null;\n      }\n      else {\n        vm.selectedUid = user.uid;\n        vm.selectedUser = user;\n        vm.selectedUser.$rights();\n      }\n    }\n\n    function showRights(user) {\n      return vm.selectedUid == user.uid && user.rights;\n    }\n\n    function userFilter($query) {\n      return User.$filter($query, stateFolder.$acl.users, { dry: true, uid: vm.user.uid });\n    }\n\n    function removeUser(user) {\n      $timeout(function() {\n        stateFolder.$acl.$removeUser(user.uid, stateFolder.owner);\n      }, 500); // wait for CSS transition to complete (see card.scss)\n    }\n\n    function addUser(data) {\n      if (data) {\n        stateFolder.$acl.$addUser(data, stateFolder.owner).then(function(user) {\n          vm.userToAdd = '';\n          vm.searchText = '';\n          vm.selectedUid = null;\n          if (user)\n            selectUser(user);\n        });\n      }\n    }\n\n    function close() {\n      $state.go('administration.rights').then(function() {\n        delete vm.user.selectedFolder;\n        vm.user = null;\n      });\n    }\n\n    function save() {\n      stateFolder.$acl.$saveUsersRights(stateFolder.owner).then(function() {\n        $mdToast.show(\n          $mdToast.simple()\n            .content(l('ACLs saved'))\n            .position('bottom right')\n            .hideDelay(3000)\n        );\n        // Close acls on small devices\n        if ($mdMedia('xs'))\n          close();\n      });\n    }\n  }\n\n  angular\n    .module('SOGo.AdministrationUI')\n    .controller('AdministrationAclController', AdministrationAclController);\n\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n/* JavaScript for SOGoAdministration */\n\n(function() {\n  'use strict';\n  \n  /**\n   * @ngInject\n   */\n  AdministrationController.$inject = ['$state', '$mdToast', '$mdMedia', '$mdSidenav', 'sgConstant', 'Dialog', 'encodeUriFilter', 'User'];\n  function AdministrationController($state, $mdToast, $mdMedia, $mdSidenav, sgConstant, Dialog, encodeUriFilter, User) {\n    var vm = this;\n\n    vm.service = User;\n\n    vm.selectedUser = null;\n    vm.users = User.$users;\n\n    vm.go = go;\n    vm.filter = filter;\n    vm.selectUser = selectUser;\n    vm.selectFolder = selectFolder;\n\n    function go(module) {\n      $state.go('administration.' + module);\n      // Close sidenav on small devices\n      if (!$mdMedia(sgConstant['gt-md']))\n        $mdSidenav('left').close();\n    }\n\n    function filter(searchText) {\n      User.$filter(searchText);\n    }\n\n    function selectUser(i) {\n      if (vm.selectedUser == vm.users[i]) {\n        vm.selectedUser = null;\n      }\n      else {\n        // Fetch folders of specific type for selected user\n        vm.users[i].$folders().then(function() {\n          vm.selectedUser = vm.users[i];\n        });\n      }\n    }\n\n    function selectFolder(folder) {\n      $state.go('administration.rights.edit', {userId: vm.selectedUser.uid, folderId: encodeUriFilter(folder.name)});\n    }\n\n  }\n\n  angular\n    .module('SOGo.AdministrationUI')\n    .controller('AdministrationController', AdministrationController);\n\n})();\n"]}