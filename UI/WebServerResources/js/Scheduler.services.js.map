{"version":3,"sources":["Scheduler/Calendar.service.js","Scheduler/Component.service.js","Scheduler/CalendarController.js","Scheduler/CalendarListController.js","Scheduler/CalendarsController.js","Scheduler/ComponentController.js","Scheduler/sgCalendarDay.directive.js","Scheduler/sgCalendarDayBlock.directive.js","Scheduler/sgCalendarDayTable.directive.js","Scheduler/sgCalendarGhost.directive.js","Scheduler/sgCalendarMonthDay.directive.js","Scheduler/sgCalendarMonthEvent.directive.js","Scheduler/sgCalendarScrollView.directive.js","Scheduler/sgCategoryStylesheet.directive.js","Scheduler/sgDraggableCalendarBlock.directive.js","Scheduler/sgNowLine.directive.js"],"names":["Calendar","futureCalendarData","this","init","name","id","newCalendarData","$$resource","create","$unwrap","$factory","$q","$timeout","$log","Settings","Resource","Preferences","Component","Acl","angular","extend","activeUser","$Preferences","$Component","$$Acl","$view","module","e","value","EventDragDayLength","EventDragHorizontalOffset","ConflictHTTPErrorCode","factory","$defaultCalendar","calendar","defaultCalendar","defaults","SOGoDefaultCalendar","_","find","$findAll","active","$add","list","sibling","isWebCalendar","$webcalendars","isSubscription","$subscriptions","$calendars","findIndex","o","i","localeCompare","push","splice","ready","then","settings","FoldersOrder","saveFoldersOrder","flatMap","$reloadAll","data","writable","_this","forEach","isUndefined","fetch","calendars","union","filter","isOwned","acls","objectCreator","calendarData","group","owner","login","$get","$getIndex","indexOf","map","$subscribe","uid","path","userResource","$addWebCalendar","url","d","defer","urls","webCalendarURL","reject","post","isEditable","isRemote","debug","JSON","stringify","undefined","resolve","response","status","promise","reloadWebCalendars","promises","$error","l","statusText","all","$deleteComponents","components","component","isDefined","pid","uids","saveFoldersActivation","ids","request","folders","prototype","color","$acl","isSuperUser","$shadowData","$omit","$id","when","$futureCalendarData","getClassName","base","$rename","$save","$delete","remove","$reset","key","save","error","setCredentials","username","password","export","options","type","filename","download","$setActivation","$getComponent","componentId","recurrenceId","$find","isError","isObject","futureComponentData","newComponentData","newguid","isNew","$rootScope","Component_STATUS","Card","Gravatar","STATUS","$Card","$gravatar","timeFormat","$query","search","$queryEvents","sort","asc","filterpopup","$queryTasks","$refreshTimeout","$ghost","EventsFilterState","TasksFilterState","EventsSortingState","parseInt","TasksSortingState","show_completed","ShowCompletedTasks","$categories","SOGoCalendarCategoriesColors","SOGoTimeFormat","constant","NOT_LOADED","DELAYED_LOADING","LOADING","LOADED","DELAYED_MS","$selectedCount","count","$events","event","selected","length","$tasks","task","$startRefreshTimeout","cancel","refreshViewCheck","SOGoRefreshViewCheck","f","bind","$emit","timeInterval","$isLoading","$loaded","$filter","now","Date","day","getDate","month","getMonth","year","getFullYear","queryKey","capitalize","params","otherType","dirty","keys","$unwrapCollection","calendarId","occurrenceId","join","filterCategories","query","re","RegExp","category","saveSelectedList","componentType","$eventsBlocksForView","view","date","firstDayOfWeek","viewAction","startDate","endDate","SOGoFirstDayOfWeek","beginOfWeek","setTime","getTime","addDays","setDate","setMonth","endOfWeek","$eventsBlocks","j","dayDates","dayNumbers","deferred","toLowerCase","sd","getDayString","ed","views","reduceComponent","associateComponent","objects","eventData","componentData","zipObject","eventsFields","start","c_startdate","hour","getHourString","blocks","block","nbr","isFirst","$views","viewIndex","viewData","allDayBlocks","reduce","events","flatten","days","dayIndex","dayNumber","calendarName","fields","invokeMap","$resetGhost","pointerHandler","startHour","endHour","$parseDate","dateString","time","substring","split","no_time","categories","repeat","alarm","action","quantity","unit","reference","relation","delta","isString","setMinutes","Math","round","getMinutes","end","minutesTo","setDelta","dueDate","due","completedDate","completed","c_category","$isRecurrent","byDayMask","occurrence","frequency","byday","toString","interval","monthdays","months","until","$hasCustomRepeat","hasCustomRepeat","classification","units","M","H","D","W","match","exec","SOGoCalendarDefaultReminder","$hasAlarm","sendAppointmentNotifications","SOGoAppointmentSendEMailNotifications","destinationCalendar","attendees","attendee","image","email","updateFreeBusy","isReadOnly","isEditableOccurrence","isInvitation","userHasRSVP","isInvitationOccurrence","enablePercentComplete","coversFreeBusy","quarter","freebusy","updateFreeBusyCoverage","roundedStart","roundedEnd","startQuarter","endQuarter","daysUpTo","index","hourKey","currentDay","dayKey","getHours","beginOfDay","addMinutes","updateFreeBusyAttendee","resource","domain","sday","eday","isMSExchange","c_folder","addAttendee","card","$isList","expandable","container","c_name","listId","refs","ref","c_cn","$preferredEmail","role","partstat","c_uid","$avatarIcon","c_domain","ismsexchange","hasAttendee","emails","deleteAttendee","currentAttendee","canRemindAttendeesByEmail","addAttachUrl","attachUrl","attachUrls","deleteAttachUrl","$addDueDate","toISOString","$deleteDueDate","$addStartDate","$deleteStartDate","$reply","reply","delegatedTo","$adjust","every","values","v","extraAttributes","dlp","$mdDateLocaleProvider","format","startTime","endTime","dueTime","stringWithSeparator","organizer","occurrenceOnly","$futureComponentData","copy","repeatDescription","localizedString","toUpperCase","alarmDescription","copyTo","destination","moveTo","CalendarController","$scope","$state","$stateParams","sgHotkeys","stateEventsBlocks","_goToPeriod","$event","direction","vm","selectedDate","changeDate","_formatDate","setHours","$dateFormat","replace","toggleAllDays","expandedAllDays","updateView","asDate","newDate","element","currentTarget","attr","go","changeView","deregisterCalendarsList","hotkeys","createHotkey","description","callback","args","registerHotkey","$on","deregisterHotkey","$inject","controller","CalendarListController","$mdDialog","focus","Dialog","CalendarSettings","Alarm","selectComponentType","reload","unselectComponents","mode","multiple","selectAll","toggleComponentSelection","preventDefault","stopPropagation","searchMode","confirmDeleteSelectedComponents","confirm","ok","openEvent","openComponent","openTask","viewable","templateUrl","show","parent","document","body","targetEvent","clickOutsideToClose","escapeToClose","controllerAs","locals","stateComponent","newComponent","baseComponent","updateComponentFromGhost","RecurrentComponentDialogController","updateThisOccurrence","hide","onComponentAdjustError","updateAllOccurrences","message","AttendeeConflictDialogController","conflictError","ignoreConflicts","coordinates","calendarNumber","activeCalendars","currentEventCoordinates","summary","isAllDay","duration","finally","getDelta","originalEventCoordinates","originalCalendar","isException","getAlarms","template","filteredBy","field","sortedBy","cancelSearch","selectedList","SelectedList","CalendarsController","$window","$mdToast","FileUploader","User","stateCalendars","_sortableAccept","sourceItemHandleScope","destSortableScope","destItemScope","sortableScope","_sortableEnd","toggleSortableMode","sortableMode","resetSort","newCalendar","ev","prompt","UserLogin","addWebCalendar","WebCalendarAuthDialogController","scope","parts","hostname","title","formatted","authenticate","form","$valid","required","reason","$setValidity","inputType","confirmDelete","folder","catch","alert","importCalendar","CalendarImportDialogController","filterByExtension","item","isTextFile","test","position","hideDelay","uploader","ApplicationBaseURL","autoUpload","queueLimit","filters","fn","onSuccessItem","headers","msg","imported","simple","content","onErrorItem","close","showOnly","showAll","showLinks","LinksDialogController","showProperties","PropertiesDialogController","srcCalendar","saveProperties","$watch","editFolder","editMode","revertEditing","renameFolder","share","$users","usersWithACL","users","subscribeToFolder","service","sortableCalendars","scrollableContainer","containment","orderChanged","accept","SOGoCalendarCategories","asCSSIdentifier","pick","newList","oldList","commonList","intersectionBy","oldObject","isEqual","ComponentController","AddressBook","Account","cardFilter","$filterAll","newMessageWithAllRecipients","_newMessage","newMessageWithRecipient","recipients","accounts","account","$getMailboxes","mailboxes","$newMessage","editable","to","subject","stateAccount","stateMessage","edit","editAllOccurrences","replyAllOccurrences","deleteOccurrence","deleteAllOccurrences","toggleRawSource","ComponentRawSourceDialogController","copySelectedComponent","moveSelectedComponent","calendarService","ComponentEditorController","toggleRecurrenceEditor","showRecurrenceEditor","toggleAttendeesEditor","showAttendeesEditor","recurrenceMonthDaysAreRequired","$cards","automaticallyExapand","isValidEmail","searchText","removeAttendee","$setDirty","priorityLevel","priority","attendeeConflictError","reset","$setPristine","getDays","addStartDate","oldStartDate","addDueDate","oldDueDate","adjustStartTime","valueOf","oldEndDate","adjustEndTime","adjustDueTime","attendeesEditor","hours","sgCalendarDay","restrict","dayString","sgCalendarDayController","directive","sgCalendarDayBlock","tElem","tAttrs","p","has","link","iElement","attrs","pc","left","right","siblings","css","c_isallday","addClass","userState","c_isopaque","c_status","clickBlock","sgCalendarDayTable","sgCalendarGhost","ctrls","initGhost","calendarDayCtrl","originalCalendarNumber","hideGhost","forEachRight","domElement","classList","c","removeClass","updateGhost","showGhost","isRelative","durationLeft","maxDuration","scrollViewCtrl","getStartTime","quarterHeight","topOffset","getEndTime","quartersToHM","quarters","minutes","mins","floor","deregisterDragStart","deregisterDrag","deregisterDragEnd","require","sgCalendarMonthDay","sgCalendarMonthEvent","sgCalendarScrollView","$document","$mdGesture","sgCalendarScrollViewController","initView","sgScrollView","hourCell","quartersOffset","SOGoDayStartTime","getElementById","scrollTop","offsetTop","$element","getQuarterHeight","scrollStep","getDayNumbers","maxX","getMaxColumns","onDragStart","deregisterDragStop","onDragEnd","bindedUpdateCoordinates","updateCoordinates","bindedUpdateFromPointerHandler","updateFromPointerHandler","on","isMultiColumn","$destroy","off","hour0","hour23","height","getDayDimensions","viewLeft","width","leftOffset","nodes","domRect","tileHeader","getElementsByClassName","getBoundingClientRect","clientHeight","offset","top","getElementsByTagName","el","attributes","mdGridList","max","dayDimensions","x","y","dayHeight","dayWidth","daysOffset","pointerCoordinates","scrollY","minY","getContainerBasedCoordinates","lastScroll","sgCategoryStylesheet","ngModel","sgDraggableCalendarBlock","onDragDetect","dragMode","hasVerticalScrollbar","rect","scrollableZone","target","scrollHeight","pageX","className","SOGoEventDragPointerHandler","initFromEvent","one","onDrag","dragStart","eventType","isHourCell","isMonthly","newData","hasClass","parentNode","tagName","parseDate","b","dragging","prepareWithEventType","initFromBlock","initFromCalendar","updateFromEvent","pointer","dragHasStarted","SOGoCoordinates","SOGoEventDragEventCoordinates","setEventType","blockIndex","isFirstBlock","isLastBlock","dragGrip","leftGrip","rightGrip","topGrip","bottomGrip","append","clone","otherCoordinates","getDistance","sqrt","weekDay","prevDayNumber","sumBy","currentDayNumber","_quartersToHM","originalCoordinates","currentCoordinates","originalViewCoordinates","currentViewCoordinates","getEventViewCoordinates","pageY","newEventCoordinates","setTimeFromQuarters","updateEventCoordinates","distance","newDuration","deltaQuarters","deltaDays","ceil","clientWidth","methods","multiday","getEventMultiDayViewCoordinates","multiday-allday","getEventMultiDayAllDayViewCoordinates","monthly","getEventMonthlyViewCoordinates","unknown","method","pxCoordinates","maxY","minX","daysY","sgNowLine","iAttr","sgCalendarScrollViewCtrl","_getDays","_getView","_unwatchView","_unwatchDays","updateLine","sgNowLineController","_updateLine","force","nowDay","hourHeight","minuteHeight","lineElement","_addLine","updater","$lineElement","dayElement","eq"],"mappings":"CAEA,WACE,YAOA,SAASA,GAASC,GAGhB,GADAC,KAAKC,KAAKF,GACNC,KAAKE,OAASF,KAAKG,GAAI,CAEzB,GAAIC,GAAkBN,EAASO,WAAWC,OAAO,eAAgBN,KAAKE,KACtEF,MAAKO,QAAQH,IASjBN,EAASU,UAAY,KAAM,WAAY,OAAQ,aAAc,WAAY,cAAe,YAAa,MAAO,SAASC,EAAIC,EAAUC,EAAMC,EAAUC,EAAUC,EAAaC,EAAWC,GAanL,MAZAC,SAAQC,OAAOpB,GACbW,GAAIA,EACJC,SAAUA,EACVC,KAAMA,EACNN,WAAY,GAAIQ,GAASD,EAASO,WAAW,aAAe,WAAYP,EAASO,cACjFC,aAAcN,EACdO,WAAYN,EACZO,MAAON,EACPG,WAAYP,EAASO,aACrBI,MAAO,OAGFzB,GAOT,KACEmB,QAAQO,OAAO,oBAEjB,MAAMC,GACJR,QAAQO,OAAO,oBAAqB,gBAEtCP,QAAQO,OAAO,oBACZE,MAAM,oBACLC,mBAA6B,GAC7BC,0BAA6B,EAC7BC,sBAA6B,MAE9BC,QAAQ,WAAYhC,EAASU,UAOhCV,EAASiC,iBAAmB,WAC1B,GACIC,GADAC,EAAkBnC,EAASsB,aAAac,SAASC,mBAGrD,OAAuB,SAAnBF,IACFD,EAAWI,EAAEC,KAAKvC,EAASwC,SAAS,MAAM,GAAO,SAASN,GACxD,MAAOA,GAASO,UAGTP,EAAS7B,GAGb,YAQTL,EAAS0C,KAAO,SAASR,GAEvB,GAAIS,GAAMC,CAGRD,GADET,EAASW,cACJ3C,KAAK4C,cACLZ,EAASa,eACT7C,KAAK8C,eAEL9C,KAAK+C,WAEdL,EAAUN,EAAEY,UAAUP,EAAM,SAASQ,EAAGC,GACtC,MAAuB,YAAflB,EAAS7B,IACA,YAAR8C,EAAE9C,IAAoB8C,EAAE/C,KAAKiD,cAAcnB,EAAS9B,MAAQ,IAEnEwC,EAAU,EACZD,EAAKW,KAAKpB,GAEVS,EAAKY,OAAOX,EAAS,EAAGV,GAE1BhC,KAAKoB,aAAakC,QAAQC,KAAK,WACzBzD,EAASsB,aAAaoC,SAAS1D,SAAS2D,cAE1C3D,EAAS4D,iBAAiBtB,EAAEuB,QAAQ7D,EAASwC,WAAY,SAG7DxC,EAAS8D,cAUX9D,EAASwC,SAAW,SAASuB,EAAMC,GACjC,GAAIC,GAAQ/D,IACZ,IAAI6D,EACF7D,KAAK+C,cACL/C,KAAK8C,kBACL9C,KAAK4C,iBAEL3B,QAAQ+C,QAAQH,EAAM,SAASZ,EAAGC,GAChC,GAAIlB,GAAW,GAAIlC,GAASmD,EACxBjB,GAASW,cACXoB,EAAMnB,cAAcQ,KAAKpB,GAClBA,EAASa,eAChBkB,EAAMjB,eAAeM,KAAKpB,GAE1B+B,EAAMhB,WAAWK,KAAKpB,SAGvB,IAAIf,QAAQgD,YAAYjE,KAAK+C,YAIhC,MAHA/C,MAAK+C,cACL/C,KAAK8C,kBACL9C,KAAK4C,iBACE9C,EAASO,WAAW6D,MAAM,iBAAiBX,KAAK,SAASM,GAC9D,MAAO/D,GAASwC,SAASuB,EAAKM,UAAWL,IAI7C,OAAIA,GACK1B,EAAEgC,MAAMpE,KAAK+C,WAAYX,EAAEiC,OAAOrE,KAAK8C,eAAgB,SAASd,GACrE,MAAOA,GAASsC,SAAWtC,EAASuC,KAAKC,iBAItCpC,EAAEgC,MAAMpE,KAAK+C,WAAY/C,KAAK8C,eAAgB9C,KAAK4C,gBAO5D9C,EAAS8D,WAAa,WACpB,GAAIG,GAAQ/D,IAEZF,GAASO,WAAW6D,MAAM,iBAAiBX,KAAK,SAASM,GACvDzB,EAAE4B,QAAQH,EAAKM,UAAW,SAASM,GACjC,GAAIC,GAAO1C,CAGT0C,GADED,EAAa9B,cACPoB,EAAMnB,cACP6B,EAAaE,OAAS7E,EAASqB,WAAWyD,MACzCb,EAAMjB,eAENiB,EAAMhB,YAEhBf,EAAWI,EAAEC,KAAKqC,EAAO,SAASzB,GAAK,MAAOA,GAAE9C,IAAMsE,EAAatE,OAEjE6B,EAAS/B,KAAKwE,QAWtB3E,EAAS+E,KAAO,SAAS1E,GACvB,GAAI6B,EAQJ,OANAA,GAAWI,EAAEC,KAAKvC,EAASiD,WAAY,SAASE,GAAK,MAAOA,GAAE9C,IAAMA,IAC/D6B,IACHA,EAAWI,EAAEC,KAAKvC,EAASgD,eAAgB,SAASG,GAAK,MAAOA,GAAE9C,IAAMA,KACrE6B,IACHA,EAAWI,EAAEC,KAAKvC,EAAS8C,cAAe,SAASK,GAAK,MAAOA,GAAE9C,IAAMA,KAElE6B,GASTlC,EAASgF,UAAY,SAAS3E,GAC5B,GAAI+C,EAQJ,OANAA,GAAId,EAAE2C,QAAQ3C,EAAE4C,IAAIlF,EAASiD,WAAY,MAAO5C,GAC5C+C,EAAI,IACNA,EAAId,EAAE2C,QAAQ3C,EAAE4C,IAAIlF,EAASgD,eAAgB,MAAO3C,IAClD+C,EAAI,IACNA,EAAId,EAAE2C,QAAQ3C,EAAE4C,IAAIlF,EAAS8C,cAAe,MAAOzC,IAE9C+C,GAUTpD,EAASmF,WAAa,SAASC,EAAKC,GAClC,GAAIpB,GAAQ/D,IACZ,OAAOF,GAASO,WAAW+E,aAAaF,GAAKhB,MAAMiB,EAAM,aAAa5B,KAAK,SAASkB,GAClF,GAAIzC,GAAW,GAAIlC,GAASmB,QAAQC,QAASqB,OAAQ,GAAKkC,GAM1D,OALKrC,GAAEC,KAAK0B,EAAMjB,eAAgB,SAASG,GACzC,MAAOA,GAAE9C,IAAMsE,EAAatE,MAE5BL,EAAS0C,KAAKR,GAETA,KAUXlC,EAASuF,gBAAkB,SAASC,GAClC,GAAIvB,GAAQ/D,KACRuF,EAAIzF,EAASW,GAAG+E,OAmCpB,OAjCIpD,GAAEC,KAAK0B,EAAMnB,cAAe,SAASK,GACrC,MAAOA,GAAEwC,KAAKC,gBAAkBJ,IAGlCC,EAAEI,SAGF7F,EAASO,WAAWuF,KAAK,KAAM,kBAAoBN,IAAKA,IAAO/B,KAAK,SAASkB,GAC3ExD,QAAQC,OAAOuD,GACb9B,eAAe,EACfkD,YAAY,EACZC,UAAU,EACVnB,MAAO7E,EAASqB,WAAWyD,MAC3Ba,MAAQC,eAAgBJ,IAE1B,IAAItD,GAAW,GAAIlC,GAAS2E,EAC5B3E,GAASO,WAAW6D,MAAMlC,EAAS7B,GAAI,UAAUoD,KAAK,SAASM,GAE7D/D,EAASa,KAAKoF,MAAMC,KAAKC,UAAUpC,MAAMqC,GAAW,IACpDpG,EAAS0C,KAAKR,GACduD,EAAEY,WACD,SAASC,GACa,KAAnBA,EAASC,OAEXd,EAAEY,QAAQnE,GAGVuD,EAAEI,YAGLJ,EAAEI,QAGAJ,EAAEe,SASXxG,EAASyG,mBAAqB,WAC5B,GAAIC,KAYJ,OAVApE,GAAE4B,QAAQhE,KAAK4C,cAAe,SAASZ,GACrC,GAAIsE,GAAUxG,EAASO,WAAW6D,MAAMlC,EAAS7B,GAAI,SACrDmG,GAAQ/C,KAAK,SAASM,GACpB7B,EAASyE,QAAS,GACjB,SAASL,GACVpE,EAASyE,OAASC,EAAEN,EAASO,cAE/BH,EAASpD,KAAKkD,KAGTxG,EAASW,GAAGmG,IAAIJ,IASzB1G,EAAS+G,kBAAoB,SAASC,GACpC,GAAkB3C,MAAgBqC,IAYlC,OAVApE,GAAE4B,QAAQ8C,EAAY,SAASC,GACxB9F,QAAQ+F,UAAU7C,EAAU4C,EAAUE,QACzC9C,EAAU4C,EAAUE,SACtB9C,EAAU4C,EAAUE,KAAK7D,KAAK2D,EAAU5G,MAG1CiC,EAAE4B,QAAQG,EAAW,SAAS+C,EAAMD,GAClCT,EAASpD,KAAKtD,EAASO,WAAWuF,KAAKqB,EAAK,eAAgBC,KAAMA,OAG7DpH,EAASW,GAAGmG,IAAIJ,IAUzB1G,EAASqH,sBAAwB,SAASC,GACxC,GAAIC,KAOJ,OALAjF,GAAE4B,QAAQoD,EAAK,SAASjH,GACtB,GAAI6B,GAAWlC,EAAS+E,KAAK1E,EAC7BkH,GAAQrF,EAAS7B,IAAM6B,EAASO,SAG3BzC,EAASO,WAAWuF,KAAK,KAAM,wBAAyByB,IASjEvH,EAAS4D,iBAAmB,SAAS4D,GACnC,MAAOtH,MAAKK,WAAWuF,KAAK,KAAM,oBAAsB0B,QAASA,IAAW/D,KAAK,WAE/E,GADAzD,EAASsB,aAAaoC,SAAS1D,SAAS2D,aAAe6D,GAClDA,EAEH,MAAOxH,GAASO,WAAW6D,MAAM,iBAAiBX,KAAK,SAASM,GAC9D,MAAO/D,GAASwC,SAASuB,EAAKM,gBAWtCrE,EAASyH,UAAUtH,KAAO,SAAS4D,GACjC7D,KAAKwH,MAAQxH,KAAKwH,OAAS,UAC3BxH,KAAKuC,OAAS,EACdtB,QAAQC,OAAOlB,KAAM6D,GACjB7D,KAAKG,KACPH,KAAKyH,KAAO,GAAI3H,GAASwB,MAAM,YAActB,KAAKG,KAGpDH,KAAKsE,QAAUxE,EAASqB,WAAWuG,aAAe1H,KAAK2E,OAAS7E,EAASqB,WAAWyD,MACpF5E,KAAK6C,gBAAkB7C,KAAK8F,UAAY9F,KAAK2E,OAAS7E,EAASqB,WAAWyD,MACtE3D,QAAQgD,YAAYjE,KAAK2H,eAE3B3H,KAAK2H,YAAc3H,KAAK4H,UAU5B9H,EAASyH,UAAUM,IAAM,WACvB,MAAI7H,MAAKG,GAEAL,EAASW,GAAGqH,KAAK9H,KAAKG,IAItBH,KAAK+H,oBAAoBxE,KAAK,SAASvB,GAC5C,MAAOA,GAAS7B,MAWtBL,EAASyH,UAAUS,aAAe,SAASC,GAGzC,MAFIhH,SAAQgD,YAAYgE,KACtBA,EAAO,MACFA,EAAO,UAAYjI,KAAKG,IAUjCL,EAASyH,UAAUW,QAAU,WAC3B,GACIhF,GACAiB,EAFAJ,EAAQ/D,IAIZ,OAAIA,MAAKE,MAAQF,KAAK2H,YAAYzH,KAEzBJ,EAASW,GAAGqH,QAInB3D,EADEnE,KAAK2C,cACK7C,EAAS8C,cACd5C,KAAK6C,eACA/C,EAASgD,eAEThD,EAASiD,WAEvBG,EAAId,EAAE2C,QAAQ3C,EAAE4C,IAAIb,EAAW,MAAOnE,KAAKG,IACvC+C,GAAK,EACAlD,KAAKmI,QAAQ5E,KAAK,WACvBY,EAAUd,OAAOH,EAAG,GACpBpD,EAAS0C,KAAKuB,KAITjE,EAASW,GAAGkF,WAUvB7F,EAASyH,UAAUa,QAAU,WAC3B,GACI3F,GACA6D,EAFAvC,EAAQ/D,IAgBZ,OAZIA,MAAK6C,gBACPyD,EAAUxG,EAASO,WAAW6D,MAAMlE,KAAKG,GAAI,eAC7CsC,EAAO3C,EAASgD,iBAGhBwD,EAAUxG,EAASO,WAAWgI,OAAOrI,KAAKG,IAExCsC,EADEzC,KAAK2C,cACA7C,EAAS8C,cAET9C,EAASiD,YAGbuD,EAAQ/C,KAAK,WAClB,GAAIL,GAAId,EAAE2C,QAAQ3C,EAAE4C,IAAIvC,EAAM,MAAOsB,EAAM5D,GAC3CsC,GAAKY,OAAOH,EAAG,MASnBpD,EAASyH,UAAUe,OAAS,WAC1B,GAAIvE,GAAQ/D,IACZiB,SAAQ+C,QAAQhE,KAAM,SAAS0B,EAAO6G,GACzB,eAAPA,GAAkC,KAAVA,EAAI,UACvBxE,GAAMwE,KAGjBtH,QAAQC,OAAOlB,KAAMA,KAAK2H,aAC1B3H,KAAK2H,YAAc3H,KAAK4H,SAS1B9H,EAASyH,UAAUY,MAAQ,WACzB,GAAIpE,GAAQ/D,IAEZ,OAAOF,GAASO,WAAWmI,KAAKxI,KAAKG,GAAIH,KAAK4H,SAASrE,KAAK,SAASM,GAGnE,MADAE,GAAM4D,YAAc5D,EAAM6D,QACnB/D,GACN,SAASA,GAIV,MAHA/D,GAASa,KAAK8H,MAAMzC,KAAKC,UAAUpC,MAAMqC,GAAW,IAEpDnC,EAAMuE,SACCzE,KAUX/D,EAASyH,UAAUmB,eAAiB,SAASC,EAAUC,GACrD,GAAI7E,GAAQ/D,KACRuF,EAAIzF,EAASW,GAAG+E,OAiBpB,OAfA1F,GAASO,WAAWuF,KAAK5F,KAAKG,GAAI,mBAAqBwI,SAAUA,EAAUC,SAAUA,IAAYrF,KAAK,WACpGzD,EAASO,WAAW6D,MAAMH,EAAM5D,GAAI,UAAUoD,KAAK,SAASM,GAC1D/D,EAAS0C,KAAKuB,GACdwB,EAAEY,WACD,SAASC,GACa,KAAnBA,EAASC,OAEXd,EAAEI,OAAOe,EAAE,+BAGXnB,EAAEI,OAAOS,EAASO,eAGrBpB,EAAEI,QAEEJ,EAAEe,SASXxG,EAASyH,UAAUsB,OAAS,WAC1B,GAAIC,EAOJ,OALAA,IACEC,KAAM,2BACNC,SAAUhJ,KAAKE,KAAO,QAGjBJ,EAASO,WAAW4I,SAASjJ,KAAKG,GAAK,OAAQ,SAAU,KAAM2I,IASxEhJ,EAASyH,UAAU2B,eAAiB,WAClC,MAAOpJ,GAASO,WAAW6D,MAAMlE,KAAKG,IAAKH,KAAKuC,OAAO,GAAG,MAAQ,mBASpEzC,EAASyH,UAAU4B,cAAgB,SAASC,EAAaC,GACvD,MAAOvJ,GAASuB,WAAWiI,MAAMtJ,KAAKG,GAAIiJ,EAAaC,IASzDvJ,EAASyH,UAAUhH,QAAU,SAASR,GACpC,GAAIgE,GAAQ/D,IAGZA,MAAK+H,oBAAsBhI,EAAmBwD,KAAK,SAASM,GAC1D,MAAO/D,GAASY,SAAS,WAGvB,MADAqD,GAAM9D,KAAK4D,GACJE,KAER,SAASF,GACVE,EAAMwF,SAAU,EACZtI,QAAQuI,SAAS3F,IACnB/D,EAASY,SAAS,WAChBO,QAAQC,OAAO6C,EAAOF,QAY9B/D,EAASyH,UAAUK,MAAQ,WACzB,GAAI5F,KAOJ,OANAf,SAAQ+C,QAAQhE,KAAM,SAAS0B,EAAO6G,GACzB,eAAPA,GACU,KAAVA,EAAI,KACNvG,EAASuG,GAAO7G,KAGbM,MC3mBX,WACE,YAOA,SAASjB,GAAU0I,GAEjB,GAAwC,kBAA7BA,GAAoBlG,MAE7B,GADAvD,KAAKC,KAAKwJ,GACNzJ,KAAKiH,MAAQjH,KAAKG,GAAI,CAGxB,GAAIuJ,GAAmB3I,EAAUV,WAAWsJ,QAAQ3J,KAAKiH,IACzDjH,MAAKO,QAAQmJ,GACb1J,KAAK4J,OAAQ,OAKf5J,MAAKO,QAAQkJ,GASjB1I,EAAUP,UAAY,KAAM,WAAY,OAAQ,aAAc,aAAc,qBAAsB,cAAe,OAAQ,WAAY,WAAY,SAASC,EAAIC,EAAUC,EAAMkJ,EAAYjJ,EAAUkJ,EAAkBhJ,EAAaiJ,EAAMC,EAAUnJ,GA4CjP,MA3CAI,SAAQC,OAAOH,GACbkJ,OAAQH,EACRrJ,GAAIA,EACJC,SAAUA,EACVC,KAAMA,EACNkJ,WAAYA,EACZzI,aAAcN,EACdoJ,MAAOH,EACPI,UAAWH,EACX3J,WAAY,GAAIQ,GAASD,EAASO,WAAW,aAAe,WAAYP,EAASO,cACjFiJ,WAAY,QAEZC,QAAU3I,MAAO,GAAI4I,OAAQ,2BAE7BC,cAAgBC,KAAM,QAASC,IAAK,EAAGC,YAAa,cAEpDC,aAAeH,KAAM,SAAUC,IAAK,EAAGC,YAAa,mBACpDE,gBAAiB,KACjBC,YAEF/J,EAAYwC,QAAQC,KAAK,WAEnBzC,EAAY0C,SAAS1D,SAASgL,oBAChC/J,EAAUwJ,aAAaG,YAAc5J,EAAY0C,SAAS1D,SAASgL,mBACjEhK,EAAY0C,SAAS1D,SAASiL,mBAChChK,EAAU4J,YAAYD,YAAc5J,EAAY0C,SAAS1D,SAASiL,kBAChEjK,EAAY0C,SAAS1D,SAASkL,qBAChCjK,EAAUwJ,aAAaC,KAAO1J,EAAY0C,SAAS1D,SAASkL,mBAAmB,GAC/EjK,EAAUwJ,aAAaE,IAAMQ,SAASnK,EAAY0C,SAAS1D,SAASkL,mBAAmB,KAErFlK,EAAY0C,SAAS1D,SAASoL,oBAChCnK,EAAU4J,YAAYH,KAAO1J,EAAY0C,SAAS1D,SAASoL,kBAAkB,GAC7EnK,EAAU4J,YAAYF,IAAMQ,SAASnK,EAAY0C,SAAS1D,SAASoL,kBAAkB,KAEvFnK,EAAU4J,YAAYQ,eAAiBF,SAASnK,EAAY0C,SAAS4H,oBAErErK,EAAUsK,YAAcvK,EAAYoB,SAASoJ,6BAEzCxK,EAAYoB,SAASqJ,iBACvBxK,EAAUqJ,WAAatJ,EAAYoB,SAASqJ,kBAIzCxK,GAOT,KACEE,QAAQO,OAAO,oBAEjB,MAAMC,GACJR,QAAQO,OAAO,oBAAqB,gBAEtCP,QAAQO,OAAO,oBACZgK,SAAS,sBACRC,WAAiB,EACjBC,gBAAiB,EACjBC,QAAiB,EACjBC,OAAiB,EACjBC,WAAiB,MAElB/J,QAAQ,YAAaf,EAAUP,UAQlCO,EAAU+K,eAAiB,WACzB,GAAIC,EASJ,OAPAA,GAAQ,EACJhL,EAAUiL,UACZD,GAAU3J,EAAEiC,OAAOtD,EAAUiL,QAAS,SAASC,GAAS,MAAOA,GAAMC,WAAcC,QAEjFpL,EAAUqL,SACZL,GAAU3J,EAAEiC,OAAOtD,EAAUqL,OAAQ,SAASC,GAAQ,MAAOA,GAAKH,WAAcC,QAE3EJ,GASThL,EAAUuL,qBAAuB,SAASvD,GAGpChI,EAAU6J,iBACZ7J,EAAUL,SAAS6L,OAAOxL,EAAU6J,iBAEtC7J,EAAUK,aAAakC,QAAQC,KAAK,WAElC,GAAIiJ,GAAmBzL,EAAUK,aAAac,SAASuK,oBACvD,IAAID,GAAwC,YAApBA,EAAgC,CACtD,GAAIE,GAAIzL,QAAQ0L,KAAK5L,EAAU8I,WAAY9I,EAAU8I,WAAW+C,MAAO,iBACvE7L,GAAU6J,gBAAkB7J,EAAUL,SAASgM,EAAmC,IAAhCF,EAAiBK,oBAWzE9L,EAAU+L,WAAa,WACrB,MAAO/L,GAAUgM,SAAWhM,EAAUkJ,OAAO0B,SAW/C5K,EAAUiM,QAAU,SAASjE,EAAMD,GACjC,GAAI/E,GAAQ/D,KACRiN,EAAM,GAAIC,MACVC,EAAMF,EAAIG,UACVC,EAAQJ,EAAIK,WAAa,EACzBC,EAAON,EAAIO,cACXC,EAAW,SAAW1E,EAAK2E,aAC3BC,GACER,IAAUI,GAAQF,EAAQ,GAAG,IAAI,IAAMA,GAASF,EAAM,GAAG,IAAI,IAAMA,EAKzE,OAFApM,GAAUuL,qBAAqBvD,GAExB/I,KAAKoB,aAAakC,QAAQC,KAAK,WACpC,GAAIkG,GAEAmE,EADAC,GAAQ,CA8BZ,OA3BA5M,SAAQC,OAAO6C,EAAMsG,OAAQsD,GAEzB7E,GACF1G,EAAE4B,QAAQ5B,EAAE0L,KAAKhF,GAAU,SAASP,GAElCsF,GAAU9J,EAAMsG,OAAO9B,IAAQO,EAAQP,IAAQxH,EAAUsJ,OAAO9B,GACrD,UAAPA,GAAmBO,EAAQP,GAC7BsF,GAAQ,EAED5M,QAAQ+F,UAAUjD,EAAMsG,OAAO9B,IACtCxE,EAAMsG,OAAO9B,GAAOO,EAAQP,GAE5BxE,EAAM0J,GAAUlF,GAAOO,EAAQP,KAKrCkB,EAAsB1F,EAAM1D,WAAW6D,MAAM,KAAM6E,EAAO,OACb9H,QAAQC,OAAO6C,EAAM0J,GAAW1J,EAAMsG,SAG/EwD,IACFD,EAAqB,SAAR7E,EAAkB,UAAY,eACpChI,GAAU6M,GACjB7M,EAAUJ,KAAKoF,MAAM,mBAAqB6H,IAGrC7J,EAAMgK,kBAAkBhF,EAAMU,MAYzC1I,EAAUuI,MAAQ,SAAS0E,EAAY5E,EAAa6E,GAClD,GAAIxE,GAAqBtE,GAAQ6I,EAAY5E,EAO7C,OALI6E,IACF9I,EAAK/B,KAAK6K,GAEZxE,EAAsBzJ,KAAKK,WAAW6D,MAAMiB,EAAK+I,KAAK,KAAM,QAErD,GAAInN,GAAU0I,IASvB1I,EAAUoN,iBAAmB,SAASC,GACpC,GAAIC,GAAK,GAAIC,QAAOF,EAAO,IAC3B,OAAOhM,GAAEiC,OAAOjC,EAAE0L,KAAK/M,EAAUsK,aAAc,SAASkD,GACtD,OAA+B,GAAxBA,EAASjE,OAAO+D,MAU3BtN,EAAUyN,iBAAmB,SAASC,GACpC,MAAOzO,MAAKK,WAAWuF,KAAK,KAAM,oBAAsBnD,KAAMgM,EAAgB,cAUhF1N,EAAU2N,qBAAuB,SAASC,EAAMC,GAC9C,GAAI7K,GAAQ/D,IAEZ,OAAOe,GAAUK,aAAakC,QAAQC,KAAK,SAASM,GAClD,GAAIgL,GAAgBC,EAAYC,EAAWC,CA6B3C,OA5BAH,GAAiB9N,EAAUK,aAAac,SAAS+M,mBAErC,OAARN,GACFG,EAAa,UACbC,EAAYC,EAAUJ,GAEP,kBAARD,GACPG,EAAa,qBACbC,EAAYC,EAAUJ,GAEP,QAARD,GACPG,EAAa,WACbC,EAAYH,EAAKM,YAAYL,GAC7BG,EAAU,GAAI9B,MACd8B,EAAQG,QAAQJ,EAAUK,WAC1BJ,EAAQK,QAAQ,IAED,SAARV,IACPG,EAAa,YACbC,EAAYH,EACZG,EAAUO,QAAQ,GAClBP,EAAYA,EAAUG,YAAYL,GAClCG,EAAU,GAAI9B,MACd8B,EAAQG,QAAQP,EAAKQ,WACrBJ,EAAQO,SAASP,EAAQ1B,WAAa,GACtC0B,EAAQK,SAAS,GACjBL,EAAUA,EAAQQ,UAAUX,IAEvB9K,EAAM0L,cAAcX,EAAYC,EAAWC,MAYtDjO,EAAU0O,cAAgB,SAASd,EAAMI,EAAWC,GAClD,GAAIrB,GAAQlE,EAAqBvG,EAAGwM,EAAGC,KAAeC,KAClDC,EAAW9O,EAAUN,GAAG+E,OAmG5B,OAjGAmI,IAAWgB,KAAMA,EAAKmB,cAAeC,GAAIhB,EAAUiB,eAAgBC,GAAIjB,EAAQgB,gBAC/EvG,EAAsBzJ,KAAKK,WAAW6D,MAAM,KAAM,eAAgByJ,GAClElE,EAAoBlG,KAAK,SAAS2M,GAChC,GAAIC,GAAiBC,CAErBD,GAAkB,SAASE,EAASC,EAAWpN,GAC7C,GAEI6D,GAFAwJ,EAAgBnO,EAAEoO,UAAUxQ,KAAKyQ,aAAcH,GAC/CI,EAAQ,GAAIxD,MAAiC,IAA5BqD,EAAcI,YAMnC,OAJAJ,GAAcK,KAAOF,EAAMG,gBAC3BN,EAAcO,UACd/J,EAAY,GAAIhG,GAAUwP,GAC1BF,EAAQjN,KAAK2D,GACNsJ,GAGTD,EAAqB,SAASW,GAC5B/Q,KAAK+Q,EAAMC,KAAKF,OAAO1N,KAAK2N,GAC5BA,EAAMhK,UAAY/G,KAAK+Q,EAAMC,KAC7BD,EAAME,QAA4C,GAAjCjR,KAAK+Q,EAAMC,KAAKF,OAAO3E,QAG1CpL,EAAUmQ,UACVnQ,EAAUL,SAAS,WACjB0B,EAAE4B,QAAQkM,EAAO,SAASrM,EAAMsN,GAC9B,GAAqDC,GAAjDtK,KAAiBgK,KAAaO,IAwBlC,KArBAxN,EAAK4M,aAAapN,OAAOjB,EAAE2C,QAAQlB,EAAK4M,aAAc,YAAoB,EAAG,OAC7E5M,EAAK4M,aAAapN,OAAOjB,EAAE2C,QAAQlB,EAAK4M,aAAc,UAAoB,EAAG,MAC7E5M,EAAK4M,aAAapN,OAAOjB,EAAE2C,QAAQlB,EAAK4M,aAAc,mBAAoB,EAAG,gBAC7E5M,EAAK4M,aAAapN,OAAOjB,EAAE2C,QAAQlB,EAAK4M,aAAc,WAAoB,EAAG,WAG7ErO,EAAEkP,OAAOzN,EAAK0N,OAAQnP,EAAEuK,KAAKwD,EAAiBtM,GAAOiD,GAGrD1E,EAAE4B,QAAQ5B,EAAEoP,QAAQ3N,EAAKiN,QAAS1O,EAAEuK,KAAKyD,EAAoBtJ,IAG7D1E,EAAE4B,QAAQ5B,EAAEoP,QAAQ3N,EAAKwN,cAAejP,EAAEuK,KAAKyD,EAAoBtJ,IAG3C,IAApB6I,EAASxD,SACXwD,EAAWvN,EAAEuB,QAAQE,EAAK4N,KAAM,QAChC7B,EAAaxN,EAAEuB,QAAQE,EAAK4N,KAAM,WAI/BvO,EAAI,EAAGA,EAAIW,EAAKiN,OAAO3E,OAAQjJ,IAAK,CACvC,IAAKwM,EAAI,EAAGA,EAAI7L,EAAKiN,OAAO5N,GAAGiJ,OAAQuD,IACrC7L,EAAKiN,OAAO5N,GAAGwM,GAAGgC,SAAWxO,EAAKiO,EAAYtN,EAAKiN,OAAO3E,OAC1DtI,EAAKiN,OAAO5N,GAAGwM,GAAGiC,UAAY/B,EAAW1M,EAE3C4N,GAAOnB,EAASzM,IAAMW,EAAKiN,OAAO5N,GAIpC,IAAKA,EAAI,EAAGA,EAAIW,EAAKwN,aAAalF,OAAQjJ,IAAK,CAC7C,IAAKwM,EAAI,EAAGA,EAAI7L,EAAKwN,aAAanO,GAAGiJ,OAAQuD,IAC3C7L,EAAKwN,aAAanO,GAAGwM,GAAGgC,SAAWxO,EAAKiO,EAAYtN,EAAKwN,aAAalF,OACtEtI,EAAKwN,aAAanO,GAAGwM,GAAGiC,UAAY/B,EAAW1M,EAEjDmO,GAAa1B,EAASzM,IAAMW,EAAKwN,aAAanO,GAiBhDnC,EAAUJ,KAAKoF,MAAM,iBAAmB3D,EAAEoP,QAAQ3N,EAAKiN,QAAQ3E,OAAS,KACxEpL,EAAUJ,KAAKoF,MAAM,yBAA2B3D,EAAEoP,QAAQ3N,EAAKwN,cAAclF,OAAS,KAGtFiF,GAAaN,OAAQA,EAAQO,aAAcA,GACvCxN,EAAK1D,IAAM0D,EAAK+N,eAElBR,EAASjR,GAAK0D,EAAK1D,GACnBiR,EAASQ,aAAe/N,EAAK+N,cAE/B7Q,EAAUmQ,OAAO9N,KAAKgO,KAGxBvB,EAAS1J,QAAQpF,EAAUmQ,WAE5BrB,EAASlK,QAELkK,EAASvJ,SAUlBvF,EAAUgN,kBAAoB,SAAShF,EAAMU,GAC3C,GACI3C,KASJ,OANA/F,GAAUgM,QAAUhM,EAAUkJ,OAAOyB,gBACrC3K,EAAUL,SAAS,WACbK,EAAUgM,SAAWhM,EAAUkJ,OAAO2B,SACxC7K,EAAUgM,QAAUhM,EAAUkJ,OAAO0B,UACtC5K,EAAUkJ,OAAO4B,YAEbpC,EAAoBlG,KAAK,SAASM,GACvC,MAAO9C,GAAUL,SAAS,WACxB,GAAImR,GAASzP,EAAE0P,UAAUjO,EAAKgO,OAAQ,cAoBtC,OAnBEA,GAAOxO,OAAOjB,EAAE2C,QAAQ8M,EAAQ,YAAa,EAAG,OAChDA,EAAOxO,OAAOjB,EAAE2C,QAAQ8M,EAAQ,UAAW,EAAG,MAC9CA,EAAOxO,OAAOjB,EAAE2C,QAAQ8M,EAAQ,mBAAoB,EAAG,gBAGzDzP,EAAEkP,OAAOzN,EAAKkF,GAAO,SAASjC,EAAYyJ,EAAerN,GACvD,GAA+C6D,GAA3ClD,EAAOzB,EAAEoO,UAAUqB,EAAQtB,EAG/B,OAFAxJ,GAAY,GAAIhG,GAAU8C,GAC1BiD,EAAW1D,KAAK2D,GACTD,GACNA,GAEH/F,EAAUJ,KAAKoF,MAAM,WAAagD,EAAO,WAAajC,EAAWqF,OAAS,KAG1EpL,EAAU,IAAMgI,GAAQjC,EAExB/F,EAAUgM,QAAUhM,EAAUkJ,OAAO2B,OAE9B9E,OASb/F,EAAUgR,YAAc,WACtB/R,KAAK6K,OAAOmH,eAAiB,KAC7BhS,KAAK6K,OAAO9D,UAAY,KACxB/G,KAAK6K,OAAOoH,UAAY,KACxBjS,KAAK6K,OAAOqH,QAAU,MAUxBnR,EAAUoR,WAAa,SAASC,EAAYtJ,GAC1C,GAAI8F,GAAMyD,CAIV,OAFAzD,GAAOwD,EAAWE,UAAU,EAAE,IAAIC,MAAM,KAEpCzJ,GAAWA,EAAQ0J,QACd,GAAItF,MAAKjC,SAAS2D,EAAK,IAAK3D,SAAS2D,EAAK,IAAM,EAAG3D,SAAS2D,EAAK,MAE1EyD,EAAOD,EAAWE,UAAU,GAAG,IAAIC,MAAM,KAElC,GAAIrF,MAAKjC,SAAS2D,EAAK,IAAK3D,SAAS2D,EAAK,IAAM,EAAG3D,SAAS2D,EAAK,IACxD3D,SAASoH,EAAK,IAAKpH,SAASoH,EAAK,IAAK,EAAG,KAS3DtR,EAAUwG,UAAUtH,KAAO,SAAS4D,GAClC,GAAIE,GAAQ/D,IAuDZ,IArDAA,KAAKyS,cACLzS,KAAK0S,UACL1S,KAAK2S,OAAUC,OAAQ,UAAWC,SAAU,EAAGC,KAAM,UAAWC,UAAW,SAAUC,SAAU,SAC/FhT,KAAKqG,OAAS,gBACdrG,KAAKiT,MAAQ,GACbhS,QAAQC,OAAOlB,KAAM6D,GAEC,UAAlB7D,KAAK+G,UACP/G,KAAK+I,KAAO,cACa,SAAlB/I,KAAK+G,YACZ/G,KAAK+I,KAAO,QAEV/I,KAAK+O,UACH9N,QAAQiS,SAASlT,KAAK+O,WAExB/O,KAAK0Q,MAAQ3P,EAAUoR,WAAWnS,KAAK+O,WAGvC/O,KAAK0Q,MAAQ1Q,KAAK+O,UAEA,eAAb/O,KAAK+I,OACZ/I,KAAK0Q,MAAQ,GAAIxD,MACjBlN,KAAK0Q,MAAMyC,WAAkD,GAAvCC,KAAKC,MAAMrT,KAAK0Q,MAAM4C,aAAa,MAGvDtT,KAAKgP,SACPhP,KAAKuT,IAAMxS,EAAUoR,WAAWnS,KAAKgP,SACrChP,KAAKiT,MAAQjT,KAAK0Q,MAAM8C,UAAUxT,KAAKuT,MAEnB,eAAbvT,KAAK+I,MACZ/I,KAAKyT,SAASzT,KAAKiT,OAGjBjT,KAAK0T,UACP1T,KAAK2T,IAAM5S,EAAUoR,WAAWnS,KAAK0T,UAEnC1T,KAAK4T,cACP5T,KAAK6T,UAAY9S,EAAUoR,WAAWnS,KAAK4T,eACvB,QAAb5T,KAAK+I,OACZ/I,KAAK6T,UAAY,GAAI3G,OAEnBlN,KAAK8T,YAEP/S,EAAUK,aAAakC,QAAQC,KAAK,WAElCQ,EAAM0O,WAAarQ,EAAE0P,UAAU1P,EAAEiC,OAAON,EAAM+P,WAAY,SAAS5T,GACjE,MAAOa,GAAUK,aAAac,SAASoJ,6BAA6BpL,KAClE,qBAKRF,KAAK+T,aAAe9S,QAAQ+F,UAAUnD,EAAK6O,QACvC1S,KAAK0S,OAAOjB,KAAM,CACpB,GAAIuC,GAAY5R,EAAEC,KAAKrC,KAAK0S,OAAOjB,KAAM,SAASxO,GAChD,MAAOhC,SAAQ+F,UAAU/D,EAAEgR,aAEzBD,KAC2B,UAAzBhU,KAAK0S,OAAOwB,YACdlU,KAAK0S,OAAOnF,MAAS4G,OAAO,IAC9BnU,KAAK0S,OAAOrF,OACVtE,KAAM,QACNkL,WAAYD,EAAUC,WAAWG,WACjCjH,IAAK6G,EAAU7G,UAKnBnN,MAAK0S,OAAOjB,OAEVxQ,SAAQgD,YAAYjE,KAAK0S,OAAOwB,aAClClU,KAAK0S,OAAOwB,UAAY,SACtBjT,QAAQgD,YAAYjE,KAAK0S,OAAO2B,YAClCrU,KAAK0S,OAAO2B,SAAW,GACrBpT,QAAQgD,YAAYjE,KAAK0S,OAAO4B,WAElCtU,KAAK0S,OAAO4B,aACLtU,KAAK0S,OAAO4B,UAAUnI,OAAS,IACtCnM,KAAK0S,OAAOrF,OAAUtE,KAAM,eAC1B9H,QAAQgD,YAAYjE,KAAK0S,OAAOrF,SAClCrN,KAAK0S,OAAOrF,UACVpM,QAAQgD,YAAYjE,KAAK0S,OAAOrF,MAAM4G,aACxChT,QAAQC,OAAOlB,KAAK0S,OAAOrF,OAAS4G,WAAY,IAAK9G,IAAK,OACxDlM,QAAQgD,YAAYjE,KAAK0S,OAAO6B,UAElCvU,KAAK0S,OAAO6B,WACVtT,QAAQgD,YAAYjE,KAAK0S,OAAOnF,QAClCvN,KAAK0S,OAAOnF,SACVvN,KAAK0S,OAAO3G,MACd/L,KAAK0S,OAAOa,IAAM,QACXvT,KAAK0S,OAAO8B,OACnBxU,KAAK0S,OAAOa,IAAM,QACdtS,QAAQiS,SAASlT,KAAK0S,OAAO8B,SAC/BxU,KAAK0S,OAAO8B,MAAQzT,EAAUoR,WAAWnS,KAAK0S,OAAO8B,OAAShC,SAAS,MAGzExS,KAAK0S,OAAOa,IAAM,QACpBvT,KAAKyU,iBAAmBzU,KAAK0U,kBAEzB1U,KAAK4J,MAEP7I,EAAUK,aAAakC,QAAQC,KAAK,WAClC,GAAIwF,GAAsB,eAAdhF,EAAMgF,KAAwB,SAAW,OAGrDhF,GAAM4Q,eAAiB5T,EAAUK,aAAac,SAAS,eAAiB6G,EAAO,yBAAyB+G,aAGxG,IAAI8E,IAAUC,EAAG,UAAWC,EAAG,QAASC,EAAG,OAAQC,EAAG,SAClDC,EAAQ,uBAAuBC,KAAKnU,EAAUK,aAAac,SAASiT,4BACpEF,KACFlR,EAAMqR,WAAY,EAClBrR,EAAM4O,MAAME,SAAW5H,SAASgK,EAAM,IACtClR,EAAM4O,MAAMG,KAAO8B,EAAMK,EAAM,KAIjClR,EAAMsR,6BAA+BtU,EAAUK,aAAac,SAASoT,wCAGhErU,QAAQgD,YAAYJ,EAAKuR,aAChCpV,KAAKoV,UAAYnU,QAAQ+F,UAAUnD,EAAK8O,QAI1C3S,KAAKuV,oBAAsBvV,KAAKiH,IAM5BjH,KAAKwV,WACPpT,EAAE4B,QAAQhE,KAAKwV,UAAW,SAASC,GACjCA,EAASC,MAAQ3U,EAAUoJ,UAAUsL,EAASE,MAAO,MAKzD3V,KAAK4V,iBAEL5V,KAAKkM,UAAW,GASlBnL,EAAUwG,UAAUmN,gBAAkB,WAOpC,MANQzT,SAAQ+F,UAAUhH,KAAK0S,UAC1B1S,KAAK0S,OAAO2B,SAAW,GACvBpT,QAAQ+F,UAAUhH,KAAK0S,OAAOjB,OAASzR,KAAK0S,OAAOjB,KAAKtF,OAAS,GACjElL,QAAQ+F,UAAUhH,KAAK0S,OAAO4B,YAActU,KAAK0S,OAAO4B,UAAUnI,OAAS,GAC3ElL,QAAQ+F,UAAUhH,KAAK0S,OAAO6B,SAAWvU,KAAK0S,OAAO6B,OAAOpI,OAAS,GACrElL,QAAQ+F,UAAUhH,KAAK0S,OAAOrF,QAAUpM,QAAQ+F,UAAUhH,KAAK0S,OAAOrF,MAAMtE,QAUnFhI,EAAUwG,UAAU1B,WAAa,WAC/B,OAAS7F,KAAKiO,eAAiBjO,KAAK6V,YAStC9U,EAAUwG,UAAUuO,qBAAuB,WACzC,MAAQ9V,MAAKiO,eAAiBjO,KAAK6V,YASrC9U,EAAUwG,UAAUwO,aAAe,WACjC,OAAS/V,KAAKiO,cAAgBjO,KAAKgW,aASrCjV,EAAUwG,UAAU0O,uBAAyB,WAC3C,MAAQjW,MAAKiO,cAAgBjO,KAAKgW,aASpCjV,EAAUwG,UAAUsO,WAAa,WAC/B,MAAQ7V,MAAK6V,aAAe7V,KAAKgW,aAUnCjV,EAAUwG,UAAU2O,sBAAwB,WAC1C,MAAqB,QAAblW,KAAK+I,MACU,iBAAf/I,KAAKqG,QACU,aAAfrG,KAAKqG,QASftF,EAAUwG,UAAU4O,eAAiB,SAAShJ,EAAKyD,EAAMwF,GAIvD,MAHSnV,SAAQ+F,UAAUhH,KAAKqW,SAASlJ,KAChClM,QAAQ+F,UAAUhH,KAAKqW,SAASlJ,GAAKyD,KACA,GAArC5Q,KAAKqW,SAASlJ,GAAKyD,GAAMwF,IAUpCrV,EAAUwG,UAAU+O,uBAAyB,WAC3C,GAAIvS,GAAQ/D,KAAMqW,IAElB,IAAIrW,KAAK0Q,OAAS1Q,KAAKuT,IAAK,CAC1B,GAAIgD,GAAe,GAAIrJ,MAAKlN,KAAK0Q,MAAMtB,WACnCoH,EAAa,GAAItJ,MAAKlN,KAAKuT,IAAInE,WAC/BqH,EAAexL,SAASsL,EAAajD,aAAa,GAAK,IACvDoD,EAAazL,SAASuL,EAAWlD,aAAa,GAAK,GA8BvD,OA7BAiD,GAAapD,WAAW,GAAGsD,GAC3BD,EAAWrD,WAAW,GAAGuD,GAEzBtU,EAAE4B,QAAQuS,EAAaI,SAASH,GAAa,SAAS5H,EAAMgI,GAC1D,GAEIC,GAFAC,EAAalI,EAAKxB,UAClB2J,EAASnI,EAAKoB,cAElB,IAAI+G,GAAUhT,EAAM2M,MAAMV,eAIxB,IAHA6G,EAAUjI,EAAKoI,WAAW5C,WAC1BiC,EAASU,MACTV,EAASU,GAAQF,MACVJ,EAAe,GACpBJ,EAASU,GAAQF,GAASzT,KAAK,GAC/BqT,QAIF7H,GAAOA,EAAKqI,aACZZ,EAASU,KAEX,MAAOnI,EAAKQ,UAAYrL,EAAMwP,IAAInE,WAC3BR,EAAKxB,WAAa0J,GACvBD,EAAUjI,EAAKoI,WAAW5C,WACtBnT,QAAQgD,YAAYoS,EAASU,GAAQF,MACvCR,EAASU,GAAQF,OACnBR,EAASU,GAAQF,GAASzT,KAAK,GAC/BwL,EAAKsI,WAAW,MAGbb,IASXtV,EAAUwG,UAAUqO,eAAiB,WACnC,GAAI7R,GAAQ/D,IAEZA,MAAKqW,SAAWrW,KAAKsW,yBAEjBtW,KAAKwV,WACPpT,EAAE4B,QAAQhE,KAAKwV,UAAW,SAASC,GACjC1R,EAAMoT,uBAAuB1B,MAWnC1U,EAAUwG,UAAUkM,SAAW,SAASR,GACtCjT,KAAKiT,MAAQA,EACbjT,KAAKuT,IAAM,GAAIrG,MAAKlN,KAAK0Q,MAAMtB,WAC/BpP,KAAKuT,IAAIJ,WAAgD,GAArCC,KAAKC,MAAMrT,KAAKuT,IAAID,aAAa,KACrDtT,KAAKuT,IAAI2D,WAAWlX,KAAKiT,QAS3BlS,EAAUwG,UAAU4P,uBAAyB,SAAS1B,GACpD,GAAI2B,GAAUlS,EAAKyI,EAAQ8D,CAEvBgE,GAASvQ,MACXA,EAAMuQ,EAASvQ,IACXuQ,EAAS4B,SACXnS,GAAO,IAAMuQ,EAAS4B,QACxB1J,GAEI2J,KAAMtX,KAAK0Q,MAAMV,eACjBuH,KAAMvX,KAAKuT,IAAIvD,gBAGfyF,EAAS+B,cAGXJ,EAAWrW,EAAUV,WAAW+E,eAChCuI,EAAOzI,IAAMA,GAKbkS,EAAWrW,EAAUV,WAAW+E,aAAaF,GAG/CuM,EAAOrP,EAAE4C,IAAIhF,KAAK0Q,MAAMiG,SAAS3W,KAAKuT,KAAM,SAASpG,GAAO,MAAOA,GAAI6C,iBAEnE/O,QAAQgD,YAAYwR,EAASY,YAC/BZ,EAASY,aAGXe,EAASlT,MAAM,eAAgB,WAAYyJ,GAAQpK,KAAK,SAASM,GAC/DzB,EAAE4B,QAAQyN,EAAM,SAAStE,GACvB,GAAIyD,EAEA3P,SAAQgD,YAAYwR,EAASY,SAASlJ,MACxCsI,EAASY,SAASlJ,OAEhBlM,QAAQgD,YAAYJ,EAAKsJ,MAC3BtJ,EAAKsJ,MAEP,KAAK,GAAIjK,GAAI,EAAGA,GAAK,GAAIA,IACvB0N,EAAO1N,EAAEkR,WACLvQ,EAAKsJ,GAAKyD,GACZ6E,EAASY,SAASlJ,GAAKyD,IACrB/M,EAAKsJ,GAAKyD,GAAM,GAChB/M,EAAKsJ,GAAKyD,GAAM,IAChB/M,EAAKsJ,GAAKyD,GAAM,IAChB/M,EAAKsJ,GAAKyD,GAAM,KAGlB6E,EAASY,SAASlJ,GAAKyD,IAAS,EAAG,EAAG,EAAG,SAcrD7P,EAAUwG,UAAUS,aAAe,SAASC,GAG1C,MAFIhH,SAAQgD,YAAYgE,KACtBA,EAAO,MACFA,EAAO,WAAajI,KAAKuV,qBAAuBvV,KAAKyX,UAAYzX,KAAKiH,MAS/ElG,EAAUwG,UAAUmQ,YAAc,SAASC,GACzC,GAAkBlC,GAAUhT,EAAxBsB,EAAQ/D,IACR2X,KACEA,EAAKC,SAASC,YAAY,KAE5BpV,EAAO1B,EAAUmJ,MAAMZ,MAAMqO,EAAKG,UAAWH,EAAKI,QAClDtV,EAAKoF,MAAMtE,KAAK,SAASyU,GACvB5V,EAAE4B,QAAQvB,EAAKwV,KAAM,SAASC,GAC5BzC,GACEvV,KAAMgY,EAAIC,KACVxC,MAAOuC,EAAIE,kBACXC,KAAM,kBACNC,SAAU,eACVpT,IAAKgT,EAAIK,MACTC,YAAa,UAEVpW,EAAEC,KAAK0B,EAAMyR,UAAW,SAASvS,GACpC,MAAOA,GAAE0S,OAASF,EAASE,UAG3BF,EAASC,MAAQ3U,EAAUoJ,UAAUsL,EAASE,MAAO,IACjD5R,EAAMyR,UACRzR,EAAMyR,UAAUpS,KAAKqS,GAErB1R,EAAMyR,WAAaC,GACrB1R,EAAMoT,uBAAuB1B,UAOnCA,GACEvQ,IAAKyS,EAAKY,MACVlB,OAAQM,EAAKc,SACbjB,aAAcG,EAAKe,aACnBxY,KAAMyX,EAAKQ,KACXxC,MAAOgC,EAAKS,kBACZC,KAAM,kBACNC,SAAU,eACVE,YAAab,EAAKa,aAEfpW,EAAEC,KAAKrC,KAAKwV,UAAW,SAASvS,GACnC,MAAOA,GAAE0S,OAASF,EAASE,UAE3BF,EAASC,MAAQ3U,EAAUoJ,UAAUsL,EAASE,MAAO,IACjD3V,KAAKwV,UACPxV,KAAKwV,UAAUpS,KAAKqS,GAEpBzV,KAAKwV,WAAaC,GACpBzV,KAAKmX,uBAAuB1B,OAapC1U,EAAUwG,UAAUoR,YAAc,SAAShB,GACzC,GAAIlC,GAAWrT,EAAEC,KAAKrC,KAAKwV,UAAW,SAASC,GAC7C,MAAOrT,GAAEC,KAAKsV,EAAKiB,OAAQ,SAASjD,GAClC,MAAOA,GAAMjU,OAAS+T,EAASE,SAGnC,OAAO1U,SAAQ+F,UAAUyO,IAS3B1U,EAAUwG,UAAUsR,eAAiB,SAASpD,GAC5C,GAAImB,GAAQxU,EAAEY,UAAUhD,KAAKwV,UAAW,SAASsD,GAC/C,MAAOA,GAAgBnD,OAASF,EAASE,OAE3C3V,MAAKwV,UAAUnS,OAAOuT,EAAO,IAS/B7V,EAAUwG,UAAUwR,0BAA4B,WAC9C,MAA4B,SAArB/Y,KAAK2S,MAAMC,SACf5S,KAAK6V,YACN7V,KAAKwV,WAAaxV,KAAKwV,UAAUrJ,OAAS,GAU9CpL,EAAUwG,UAAUyR,aAAe,SAASC,GAC1C,GAAIhY,QAAQgD,YAAYjE,KAAKkZ,YAC3BlZ,KAAKkZ,aAAexX,MAAOuX,QAExB,CACH,IAAK,GAAI/V,GAAI,EAAGA,EAAIlD,KAAKkZ,WAAW/M,QAC9BnM,KAAKkZ,WAAWhW,GAAGxB,OAASuX,EADU/V,KAKxCA,GAAKlD,KAAKkZ,WAAW/M,QACvBnM,KAAKkZ,WAAW9V,MAAM1B,MAAOuX,IAEjC,MAAOjZ,MAAKkZ,WAAW/M,OAAS,GASlCpL,EAAUwG,UAAU4R,gBAAkB,SAASvC,GACzCA,GAAS,GAAK5W,KAAKkZ,WAAW/M,OAASyK,GACzC5W,KAAKkZ,WAAW7V,OAAOuT,EAAO,IASlC7V,EAAUwG,UAAU6R,YAAc,WAChCpZ,KAAK2T,IAAM,GAAIzG,MACflN,KAAK2T,IAAIR,WAAgD,GAArCC,KAAKC,MAAMrT,KAAK2T,IAAIL,aAAa,KACrDtT,KAAK0T,QAAU1T,KAAK2T,IAAI0F,eAQ1BtY,EAAUwG,UAAU+R,eAAiB,iBAC5BtZ,MAAK2T,UACL3T,MAAK0T,SAQd3S,EAAUwG,UAAUgS,cAAgB,WAClCvZ,KAAK0Q,MAAQ,GAAIxD,MACjBlN,KAAK0Q,MAAMyC,WAAkD,GAAvCC,KAAKC,MAAMrT,KAAK0Q,MAAM4C,aAAa,MAQ3DvS,EAAUwG,UAAUiS,iBAAmB,iBAC9BxZ,MAAK0Q,YACL1Q,MAAK+O,WAQdhO,EAAUwG,UAAUe,OAAS,WAC3B,GAAIvE,GAAQ/D,IACZiB,SAAQ+C,QAAQhE,KAAM,SAAS0B,EAAO6G,GACzB,eAAPA,GAAkC,KAAVA,EAAI,UACvBxE,GAAMwE,KAGjBvI,KAAKC,KAAKD,KAAK2H,aACf3H,KAAK2H,YAAc3H,KAAK4H,SAS1B7G,EAAUwG,UAAUkS,OAAS,WAC3B,GAAkB5V,GAAdE,EAAQ/D,KAAYmF,GAAQnF,KAAKiH,IAAKjH,KAAKG,GAW/C,OATIH,MAAKiO,cACP9I,EAAK/B,KAAKpD,KAAKiO,cAEjBpK,GACE6V,MAAO1Z,KAAK0Z,MACZC,YAAa3Z,KAAK2Z,YAClBhH,MAAO3S,KAAKoV,UAAWpV,KAAK2S,UAGvB5R,EAAUV,WAAWmI,KAAKrD,EAAK+I,KAAK,KAAMrK,GAAQ+O,OAAQ,oBAC9DrP,KAAK,SAASM,GAGb,MADAE,GAAM4D,YAAc5D,EAAM6D,QACnB/D,KAUb9C,EAAUwG,UAAUqS,QAAU,SAASjM,GACrC,GAAIxI,IAAQnF,KAAKiH,IAAKjH,KAAKG,GAE3B,OAAIiC,GAAEyX,MAAMzX,EAAE0X,OAAOnM,GAAS,SAASoM,GAAK,MAAa,KAANA,IAE1ChZ,EAAUN,GAAGqH,QAElB9H,KAAKiO,cACP9I,EAAK/B,KAAKpD,KAAKiO,cAEjBlN,EAAUJ,KAAKoF,MAAM,UAAYZ,EAAK+I,KAAK,KAAO,IAAMlI,KAAKC,UAAU0H,IAEhE5M,EAAUV,WAAWmI,KAAKrD,EAAK+I,KAAK,KAAMP,GAAUiF,OAAQ,aASrE7R,EAAUwG,UAAUY,MAAQ,SAAS6R,GACnC,GAAkBlR,GAAS3D,EAAM4B,EAAiBkT,EAA9ClW,EAAQ/D,IA2EZ,OAzEA+G,GAAY/G,KAAK4H,QACjBqS,EAAMlZ,EAAUK,aAAa8Y,sBAG7BnT,EAAUgI,UAAYhI,EAAU2J,MAAQ3J,EAAU2J,MAAMyJ,OAAOF,EAAK,YAAc,GAClFlT,EAAUqT,UAAYrT,EAAU2J,MAAQ3J,EAAU2J,MAAMyJ,OAAOF,EAAK,SAAW,GAC/ElT,EAAUiI,QAAUjI,EAAUwM,IAAMxM,EAAUwM,IAAI4G,OAAOF,EAAK,YAAc,GAC5ElT,EAAUsT,QAAUtT,EAAUwM,IAAMxM,EAAUwM,IAAI4G,OAAOF,EAAK,SAAW,GACzElT,EAAU2M,QAAU3M,EAAU4M,IAAM5M,EAAU4M,IAAIwG,OAAOF,EAAK,YAAc,GAC5ElT,EAAUuT,QAAUvT,EAAU4M,IAAM5M,EAAU4M,IAAIwG,OAAOF,EAAK,SAAW,GACzElT,EAAU6M,cAAgB7M,EAAU8M,UAAY9M,EAAU8M,UAAUsG,OAAOF,EAAK,YAAc,GAG1Fja,KAAK0U,kBACsB,WAAzB1U,KAAK0S,OAAOwB,WAA0BlU,KAAK0S,OAAOrF,MAAMtE,MAAkC,SAA1B/I,KAAK0S,OAAOrF,MAAMtE,MACzD,UAAzB/I,KAAK0S,OAAOwB,WAAyBlU,KAAK0S,OAAOnF,KAAK4G,aAEjDpN,GAAU2L,OAAO4B,UACxBvN,EAAU2L,OAAOjB,OAAUtE,IAAKnN,KAAK0S,OAAOrF,MAAMF,IAAK8G,WAAYjU,KAAK0S,OAAOrF,MAAM4G,WAAWG,cAE/D,WAAzBpU,KAAK0S,OAAOwB,WAAmD,UAAzBlU,KAAK0S,OAAOwB,YACnDlU,KAAK0S,OAAOrF,MAAMtE,YAElBhC,GAAU2L,OAAOjB,KAGnBzR,KAAK0S,OAAOwB,WAAsC,SAAzBlU,KAAK0S,OAAOwB,YAC5CnN,EAAU2L,QAAWwB,UAAWlU,KAAK0S,OAAOwB,YAE1CnN,EAAUgI,WAAa/O,KAAK0S,OAAOwB,WAAsC,SAAzBlU,KAAK0S,OAAOwB,UACvC,SAAnBlU,KAAK0S,OAAOa,KAAkBvT,KAAK0S,OAAO8B,MAC5CzN,EAAU2L,OAAO8B,MAAQxU,KAAK0S,OAAO8B,MAAM+F,oBAAoB,KACrC,SAAnBva,KAAK0S,OAAOa,KAAkBvT,KAAK0S,OAAO3G,MACjDhF,EAAU2L,OAAO3G,MAAQ/L,KAAK0S,OAAO3G,aAE9BhF,GAAU2L,OAAO8B,YACjBzN,GAAU2L,OAAO3G,aAInBhF,GAAU2L,OAIA,iBAAf1S,KAAKqG,aACAU,GAAUV,OACK,aAAfrG,KAAKqG,cACLU,GAAU6M,cAGf7M,EAAUgI,WAAa/O,KAAKoV,WAC1BpV,KAAK2S,MAAMC,QAA+B,SAArB5S,KAAK2S,MAAMC,QAC9B5S,KAAKwV,WAAaxV,KAAKwV,UAAUrJ,OAAS,IAE9CpF,EAAU4L,MAAM6C,UAAY,EAC5BzO,EAAU4L,MAAM6H,UAAY,GAI9BzT,EAAU4L,SAIZxN,GAAQnF,KAAKiH,IAAKjH,KAAKG,IAEnBH,KAAK4J,QACPd,GAAY8J,OAAQ,SAAW5S,KAAK+I,KAAK2E,eAEvC1N,KAAKiO,cACP9I,EAAK/B,KAAKpD,KAAKiO,cAEjBhN,QAAQC,OAAO6F,EAAWiT,GAEnBjZ,EAAUV,WAAWmI,KAAKrD,EAAK+I,KAAK,KAAMnH,EAAW+B,GACzDvF,KAAK,SAASM,GAGb,MADAE,GAAM4D,YAAc5D,EAAM6D,QACnB/D,KAUb9C,EAAUwG,UAAUc,OAAS,SAASoS,GACpC,GAAkBtV,IAAQnF,KAAKiH,IAAKjH,KAAKG,GAKzC,OAHIsa,IAAkBza,KAAKiO,cACzB9I,EAAK/B,KAAKpD,KAAKiO,cAEVlN,EAAUV,WAAWgI,OAAOlD,EAAK+I,KAAK,OAS/CnN,EAAUwG,UAAUhH,QAAU,SAASkJ,GACrC,GAAI1F,GAAQ/D,IAGZA,MAAK0a,qBAAuBjR,EAG5BzJ,KAAK0a,qBAAqBnX,KAAK,SAASM,GACtCE,EAAM9D,KAAK4D,GAEXE,EAAM4D,YAAc5D,EAAM6D,SACzB,SAAS/D,GACV5C,QAAQC,OAAO6C,EAAOF,GACtBE,EAAMwF,SAAU,EAChBxI,EAAUJ,KAAK8H,MAAM1E,EAAM0E,UAU/B1H,EAAUwG,UAAUK,MAAQ,WAC1B,GAAIb,KASJ,OARA9F,SAAQ+C,QAAQhE,KAAM,SAAS0B,EAAO6G,GACzB,eAAPA,GACQ,aAAPA,GAAgC,KAAVA,EAAI,IACpB,UAAPA,IACFxB,EAAUwB,GAAOtH,QAAQ0Z,KAAKjZ,MAI3BqF,GASThG,EAAUwG,UAAUqT,kBAAoB,WACtC,GAAIC,GAAkB,IAItB,OAHI7a,MAAK0S,SACPmI,EAAkBnU,EAAE,UAAY1G,KAAK0S,OAAOwB,UAAU4G,gBAEjDD,GAST9Z,EAAUwG,UAAUwT,iBAAmB,WACrC,GAAIxS,GAAKsS,EAAkB,IAW3B,OAVI7a,MAAK2S,QACPpK,GAAO,WAAavI,KAAK2S,MAAME,SAAU7S,KAAK2S,MAAMG,KAAM9S,KAAK2S,MAAMI,WAAW7E,KAAK,KACrF2M,EAAkBnU,EAAE6B,GAChBA,IAAQsS,IAEVA,GAAmB7a,KAAK2S,MAAME,SACXnM,EAAE,YAAc1G,KAAK2S,MAAMG,MAC3BpM,EAAE,YAAc1G,KAAK2S,MAAMI,YAAY7E,KAAK,OAG5D2M,GAUT9Z,EAAUwG,UAAUyT,OAAS,SAAShZ,GACpC,MAAOjB,GAAUV,WAAWuF,KAAK5F,KAAKiH,IAAM,IAAMjH,KAAKG,GAAI,QAAS8a,YAAajZ,KAUnFjB,EAAUwG,UAAU2T,OAAS,SAASlZ,GACpC,MAAOjB,GAAUV,WAAWuF,KAAK5F,KAAKiH,IAAM,IAAMjH,KAAKG,GAAI,QAAS8a,YAAajZ,KAGnFjB,EAAUwG,UAAU6M,SAAW,WAC7B,MAAO,cAAgBpU,KAAKG,GAAK,QC/yCrC,WAEE,YAMA,SAASgb,GAAmBC,EAAQvR,EAAYwR,EAAQC,EAAcC,EAAWzb,EAAUiB,EAAWD,EAAa0a,GAqFjH,QAASC,GAAYC,EAAQC,GAC3B,GAAI/M,EAEqB,SAArB0M,EAAa3M,KACfC,EAAOgN,EAAGC,aAAa3M,YAAYpO,EAAYoB,SAAS+M,oBAAoBI,QAAQ,EAAIsM,GAE5D,SAArBL,EAAa3M,MACpBC,EAAOgN,EAAGC,aACVjN,EAAKU,QAAQ,GACbV,EAAKW,SAASX,EAAKtB,WAAaqO,IAGhC/M,EAAOgN,EAAGC,aAAaxM,QAAQsM,GAGjCG,EAAWJ,EAAQ9M,GASrB,QAASmN,GAAYnN,GACM,SAArB0M,EAAa3M,MACfC,EAAKU,QAAQ,GACbV,EAAKoN,SAAS,IACdpN,EAAKqN,YAAc,SAES,QAArBX,EAAa3M,MACpBC,EAAKO,QAAQP,EAAKM,YAAYpO,EAAYoB,SAAS+M,oBAAoBG,WACvER,EAAKqN,YAAcvV,EAAE,WAAWwV,QAAQ,KAAM,OAG9CtN,EAAKqN,YAAc,KAKvB,QAASE,KACPhB,EAAmBiB,iBAAmBjB,EAAmBiB,gBACzDR,EAAGQ,gBAAkBjB,EAAmBiB,gBAG1C,QAASC,KAGPtb,EAAU2N,qBAAqB4M,EAAa3M,KAAM2M,EAAanO,IAAImP,UAAU/Y,KAAK,SAASM,GACzF,GAAIX,GAAGwM,EAAGf,CACV,KAAKzL,EAAI,EAAGA,EAAIW,EAAKsI,OAAQjJ,IAC3ByL,EAAO9K,EAAKX,GACR0Y,EAAG1L,MAAMhN,IACXd,EAAE4B,QAAQ2K,EAAK0C,aAAc,SAASP,EAAQ3D,GAC5CyO,EAAG1L,MAAMhN,GAAGmO,aAAalE,GAAO2D,IAElC1O,EAAE4B,QAAQ2K,EAAKmC,OAAQ,SAASA,EAAQ3D,GACtCyO,EAAG1L,MAAMhN,GAAG4N,OAAO3D,GAAO2D,KAI5B8K,EAAG1L,MAAMhN,GAAKyL,EAEZA,EAAKxO,KAGPyb,EAAG1L,MAAMhN,GAAGlB,SAAW,GAAIlC,IAAWK,GAAIwO,EAAKxO,GAAID,KAAMyO,EAAKiD,eAIlE,KAAKlC,EAAIkM,EAAG1L,MAAM/D,OAAQuD,GAAKxM,EAAGwM,IAChCkM,EAAG1L,MAAM7M,OAAOqM,EAAG,KAKzB,QAASoM,GAAWJ,EAAQa,GAC1B,GAAI3N,GAAO2N,EAASA,EAAQvM,eAAiB/O,QAAQub,QAAQd,EAAOe,eAAeC,KAAK,OACpFH,IACFR,EAAYQ,GACdlB,EAAOsB,GAAG,kBAAoBxP,IAAKyB,IAIrC,QAASgO,GAAWlB,EAAQ/M,GAC1B0M,EAAOsB,GAAG,kBAAoBhO,KAAMA,IAzKtC,GAAekO,GAAXjB,EAAK5b,KAA+B8c,IAGpC7b,SAAQgD,YAAYkX,EAAmBiB,mBACzCjB,EAAmBiB,iBAAkB,GAEvCR,EAAGC,aAAeP,EAAanO,IAAImP,SACnCV,EAAGQ,gBAAkBjB,EAAmBiB,gBACxCR,EAAGO,cAAgBA,EACnBP,EAAG1L,MAAQsL,EACXI,EAAGE,WAAaA,EAChBF,EAAGgB,WAAaA,EAsBhB,SAA0B9O,GACxBA,EAAK1K,KAAKmY,EAAUwB,cAClBxU,IAAK7B,EAAE,gBACPsW,YAAatW,EAAE,SACfuW,SAAUnB,EACVoB,KAAM,GAAIhQ,SAEZY,EAAK1K,KAAKmY,EAAUwB,cAClBxU,IAAK7B,EAAE,kBACPsW,YAAatW,EAAE,OACfuW,SAAUL,EACVM,KAAM,SAERpP,EAAK1K,KAAKmY,EAAUwB,cAClBxU,IAAK7B,EAAE,mBACPsW,YAAatW,EAAE,QACfuW,SAAUL,EACVM,KAAM,UAERpP,EAAK1K,KAAKmY,EAAUwB,cAClBxU,IAAK7B,EAAE,oBACPsW,YAAatW,EAAE,SACfuW,SAAUL,EACVM,KAAM,WAERpP,EAAK1K,KAAKmY,EAAUwB,cAClBxU,IAAK7B,EAAE,6BACPsW,YAAatW,EAAE,wBACfuW,SAAUL,EACVM,KAAM,oBAERpP,EAAK1K,KAAKmY,EAAUwB,cAClBxU,IAAK,OACLyU,YAAatW,EAAE,iBACfuW,SAAUxB,EACVyB,MAAO,KAETpP,EAAK1K,KAAKmY,EAAUwB,cAClBxU,IAAK,QACLyU,YAAatW,EAAE,gBACfuW,SAAUxB,EACVyB,KAAM,KAIR9a,EAAE4B,QAAQ8J,EAAM,SAASvF,GACvBgT,EAAU4B,eAAe5U,MAjEZuU,GAEjBhc,EAAYwC,QAAQC,KAAK,WACvBwY,EAAYH,EAAGC,gBAIjBgB,EAA0BhT,EAAWuT,IAAI,iBAAkBf,GAE3DjB,EAAOgC,IAAI,WAAY,WAErBP,IAEAza,EAAE4B,QAAQ8Y,EAAS,SAASvU,GAC1BgT,EAAU8B,iBAAiB9U,OA9BjC4S,EAAmBmC,SAAW,SAAU,aAAc,SAAU,eAAgB,YAAa,WAAY,YAAa,cAAe,qBA+KrIrc,QACGO,OAAO,oBACP+b,WAAW,qBAAsBpC,MCxLtC,WACE,YAMA,SAASqC,GAAuB3T,EAAYuR,EAAQ1a,EAAU2a,EAAQoC,EAAWlC,EAAWmC,EAAOC,EAAQ7c,EAAa8c,EAAkB9d,EAAUiB,EAAW8c,GA+E7J,QAASC,GAAoB/U,EAAMD,IAC7BA,GAAWA,EAAQiV,QAAUnC,EAAGnN,eAAiB1F,KAC/C9H,QAAQgD,YAAYlD,EAAU,IAAMgI,KACtChI,EAAUiM,QAAQjE,GACpB6S,EAAGoC,qBACHpC,EAAGnN,cAAgB1F,EACnBhI,EAAUyN,iBAAiBzF,IAI/B,QAASiV,KACP5b,EAAE4B,QAAQjD,EAAU,IAAM6a,EAAGnN,eAAgB,SAAS1H,GACpDA,EAAUmF,UAAW,IAEvB0P,EAAGqC,KAAKC,SAAW,EAGrB,QAASC,KACP/b,EAAE4B,QAAQjD,EAAU,IAAM6a,EAAGnN,eAAgB,SAAS1H,GACpDA,EAAUmF,UAAW,IAEvB0P,EAAGqC,KAAKC,SAAWnd,EAAU,IAAM6a,EAAGnN,eAAetC,OAGvD,QAASiS,GAAyB1C,EAAQ3U,GACxCA,EAAUmF,UAAYnF,EAAUmF,SAChC0P,EAAGqC,KAAKC,UAAYnX,EAAUmF,SAAU,GAAK,EAC7CwP,EAAO2C,iBACP3C,EAAO4C,kBAGT,QAASC,KACP3C,EAAGqC,KAAK3T,QAAS,EACjBoT,EAAM,UAGR,QAASc,KACPb,EAAOc,QAAQ/X,EAAE,WACFA,EAAE,6DACAgY,GAAIhY,EAAE,YACpBnD,KAAK,WAEJ,GAAIuD,GAAa1E,EAAEiC,OAAOtD,EAAU,IAAM6a,EAAGnN,eAAgB,SAAS1H,GACpE,MAAOA,GAAUmF,UAEnBpM,GAAS+G,kBAAkBC,GAAYvD,KAAK,WAC1CqY,EAAGqC,KAAKC,SAAW,EACnBrU,EAAW+C,MAAM,sBAKzB,QAAS+R,GAAUjD,EAAQzP,GACzB2S,EAAclD,EAAQzP,EAAO,eAG/B,QAAS4S,GAASnD,EAAQrP,GACxBuS,EAAclD,EAAQrP,EAAM,QAG9B,QAASuS,GAAclD,EAAQ3U,EAAWgC,GACxC,GAAIhC,EAAU+X,SAAU,CAGtB,GAAIC,GAAc,MAAQhW,EAAK2E,aAAe,cAC9C+P,GAAUuB,MACRC,OAAQhe,QAAQub,QAAQ0C,SAASC,MACjCC,YAAa1D,EACb2D,qBAAqB,EACrBC,eAAe,EACfP,YAAaA,EACbxB,WAAY,sBACZgC,aAAc,SACdC,QACEC,eAAgB1Y,MAMxB,QAAS2Y,GAAahE,EAAQ3S,EAAM4W,GAClC,GAAI5Y,EAEA4Y,IACF5Y,EAAY4Y,EACZ5Y,EAAU6O,kBAGV7O,EAAY,GAAIhG,IAAYkG,IAAKnH,EAASiC,mBAAoBgH,KAAMA,GAKtE,IAAIgW,GAAc,MAAQhW,EAAK2E,aAAe,gBAC9C,OAAO+P,GAAUuB,MACfC,OAAQhe,QAAQub,QAAQ0C,SAASC,MACjCC,YAAa1D,EACb2D,qBAAqB,EACrBC,eAAe,EACfP,YAAaA,EACbxB,WAAY,4BACZgC,aAAc,SACdC,QACEC,eAAgB1Y,KAMtB,QAAS6Y,GAAyBlE,GA+EhC,QAASmE,GAAmCzE,EAAQqC,EAAW1W,EAAW4G,GACxEyN,EAAO0E,qBAAuB,WAC5B/Y,EAAU6S,QAAQjM,GAAQpK,KAAKka,EAAUsC,KAAM,SAAS3Z,GACtDqX,EAAUlR,SAAShJ,KAAK,WACtByc,EAAuB5Z,EAAUW,EAAW4G,QAIlDyN,EAAO6E,qBAAuB,iBACrBlZ,GAAUkH,aACjBlH,EAAU6S,QAAQjM,GAAQpK,KAAKka,EAAUsC,KAAM,SAAS3Z,GACtDqX,EAAUlR,SAAShJ,KAAK,WACtByc,EAAuB5Z,EAAUW,EAAW4G,QAMpD,QAASqS,GAAuB5Z,EAAUW,EAAW4G,GAC/CvH,EAASC,QAAUuX,EAAiB/b,uBACpCuE,EAASvC,MAAQuC,EAASvC,KAAKqc,SAAWjf,QAAQuI,SAASpD,EAASvC,KAAKqc,UAC3EzC,EAAUuB,MACRC,OAAQhe,QAAQub,QAAQ0C,SAASC,MACjCE,qBAAqB,EACrBC,eAAe,EACfP,YAAa,4BACbxB,WAAY4C,EACZZ,aAAc,oCACdC,QACEzY,UAAWA,EACX4G,OAAQA,EACRyS,cAAeha,EAASvC,KAAKqc,WAE9B3c,KAAK,WACNsG,EAAW+C,MAAM,oBASvB,QAASuT,GAAiC/E,EAAQqC,EAAW1W,EAAW4G,EAAQyS,GAO9E,QAAS5X,KACPzB,EAAU6S,QAAQ3Y,QAAQC,QAASmf,iBAAiB,GAAQ1S,IAASpK,KAAKka,EAAUsC,MAPtF,GAAInE,GAAK5b,IAET4b,GAAGwE,cAAgBA,EACnBxE,EAAGrP,OAASkR,EAAUlR,OACtBqP,EAAGpT,KAAOA,EA9HZ,GAAIzB,GAAWiL,EAAgBsO,EAAarN,EAAOtF,EAAQ4S,EAAgBC,CAE3EzZ,GAAYhG,EAAU8J,OAAO9D,UAC7BiL,EAAiBjR,EAAU8J,OAAOmH,eAE9BjL,EAAU6C,OACZ0W,EAActO,EAAeyO,wBAC7B1Z,EAAU2Z,QAAU,GAChB3Z,EAAU4Z,WACZL,EAAYM,UAAY,IAC1B7Z,EAAU0M,SAAgC,GAAvB6M,EAAYM,UAC/BlB,EAAa,KAAM,cAAe3Y,GAAW8Z,QAAQ,WACnDngB,EAAS,WACPK,EAAUgR,oBAKdkB,EAAQjB,EAAeyO,wBAAwBK,SAAS9O,EAAe+O,0BACvEpT,GACE8D,KAAMwB,EAAMtB,UACZjB,MAAqB,GAAduC,EAAMvC,MACbkQ,SAA2B,GAAjB3N,EAAM2N,UAEd5O,EAAegP,kBAAwC,IAApB/N,EAAMtB,YAE3C4O,EAAiBvO,EAAeyO,wBAAwB9O,UACxD6O,EAAkBpe,EAAEiC,OAAOvE,EAASwC,YAAcC,OAAQ,IAC1DoL,EAAOsN,YAAcuF,EAAgBD,GAAgBpgB,GACrDwN,EAAO8D,KAAO,GAEZ1K,EAAUka,cAAgBla,EAAUkH,aAGtClH,EAAU6S,QAAQjM,GAAQpK,KAAK,WAC7BsG,EAAW+C,MAAM,kBACjBiR,EAAMqD,aACL,SAAS9a,GACV4Z,EAAuB5Z,EAAUW,EAAW4G,KAC3CkT,QAAQ,WACTngB,EAAS,WACPK,EAAUgR,kBAGPhL,EAAUkH,cACjBwP,EAAUuB,MACRK,qBAAqB,EACrBC,eAAe,EACfE,QACEzY,UAAWA,EACX4G,OAAQA,GAEVwT,UACE,kDACA,kDACA,UAAYza,EAAE,qBAAuB,OACrC,yBACA,wBACA,oDAAsDA,EAAE,6BAA+B,eACvF,oDAAsDA,EAAE,yBAA2B,eACnF,yBACA,gBACAwH,KAAK,IACPqP,WAAYsC,IACXtc,KAAK,WACNsG,EAAW+C,MAAM,oBAChBiU,QAAQ,WACTngB,EAAS,WACPK,EAAUgR,mBASlB8N,EAAmCvC,SAAW,SAAU,YAAa,YAAa,UA2ClF6C,EAAiC7C,SAAW,SAAU,YAAa,YAAa,SAAU,iBAc5F,QAAS5S,KACP,MAAO3J,GAAU,SAAW6a,EAAGnN,cAAcf,cAAchD,YAG7D,QAASrG,GAAOqG,GACd3J,EAAUiM,QAAQ4O,EAAGnN,eAAiB/D,YAAaA,IAGrD,QAAS0W,GAAW1W,GAClB,MAAO3J,GAAU,SAAW6a,EAAGnN,cAAcf,cAAchD,aAAeA,EAG5E,QAASF,GAAK6W,GACZtgB,EAAUiM,QAAQ4O,EAAGnN,eAAiBjE,KAAM6W,IAG9C,QAASC,GAASD,GAChB,MAAOtgB,GAAU,SAAW6a,EAAGnN,cAAcf,cAAclD,MAAQ6W,EAGrE,QAAStD,KACPje,EAASyG,qBAAqBsa,QAAQ,WACpChX,EAAW+C,MAAM,oBAIrB,QAAS2U,KACP3F,EAAGqC,KAAK3T,QAAS,EACjBvJ,EAAUiM,QAAQ4O,EAAGnN,eAAiB/M,MAAO,KA9V/C,GAAIka,GAAK5b,KAAM8c,IAEflB,GAAG7U,UAAYhG,EACf6a,EAAGnN,cAAgB,SACnBmN,EAAG4F,aAAe;iBAClB5F,EAAGkC,oBAAsBA,EACzBlC,EAAGoC,mBAAqBA,EACxBpC,EAAGuC,UAAYA,EACfvC,EAAG2C,WAAaA,EAChB3C,EAAGwC,yBAA2BA,EAC9BxC,EAAG4C,gCAAkCA,EACrC5C,EAAG+C,UAAYA,EACf/C,EAAGiD,SAAWA,EACdjD,EAAG8D,aAAeA,EAClB9D,EAAGlR,YAAcA,EACjBkR,EAAGvX,OAASA,EACZuX,EAAGwF,WAAaA,EAChBxF,EAAGpR,KAAOA,EACVoR,EAAG0F,SAAWA,EACd1F,EAAGmC,OAASA,EACZnC,EAAG2F,aAAeA,EAClB3F,EAAGqC,MAAS3T,QAAQ,EAAO4T,SAAU,GA+BrC,SAA0BpQ,GACxBA,EAAK1K,KAAKmY,EAAUwB,cAClBxU,IAAK7B,EAAE,iBACPsW,YAAatW,EAAE,UACfuW,SAAUsB,KAEZzQ,EAAK1K,KAAKmY,EAAUwB,cAClBxU,IAAK7B,EAAE,uBACPsW,YAAatW,EAAE,sBACfuW,SAAUyC,EACVxC,KAAM,iBAERpP,EAAK1K,KAAKmY,EAAUwB,cAClBxU,IAAK7B,EAAE,sBACPsW,YAAatW,EAAE,qBACfuW,SAAUyC,EACVxC,KAAM,UAIR9a,EAAE4B,QAAQ8J,EAAM,SAASvF,GACvBgT,EAAU4B,eAAe5U,MAjDZuU,GAGjBhc,EAAYwC,QAAQC,KAAK,WACvB,GAAIwF,GAAO,QACuC,kBAA9CjI,EAAY0C,SAAS1D,SAAS2hB,eAChC7F,EAAG4F,aAAe,EAClBzY,EAAO,SAET+U,EAAoB/U,GAAQgV,QAAQ,MAItClU,EAAWuT,IAAI,iBAAkB,WAC/Brc,EAAUiM,QAAQ4O,EAAGnN,eAAiBsP,QAAQ,MAIhDlU,EAAWuT,IAAI,mBAAoBwC,GAEnCxE,EAAOgC,IAAI,WAAY,WAErBhb,EAAE4B,QAAQ8Y,EAAS,SAASvU,GAC1BgT,EAAU8B,iBAAiB9U,OAjDjCiV,EAAuBF,SAAW,aAAc,SAAU,WAAY,SAAU,YAAa,YAAa,UAAW,SAAU,cAAe,mBAAoB,WAAY,YAAa,SAoW3Lrc,QACGO,OAAO,oBACP+b,WAAW,yBAA0BC,MC5W1C,WACE,YAMA,SAASkE,GAAoB7X,EAAYuR,EAAQuG,EAASlE,EAAW9c,EAAMihB,EAAUC,EAAcnE,EAAOC,EAAQ/c,EAAUE,EAAahB,EAAUgiB,EAAMC,GA4EvJ,QAASC,GAAgBC,EAAuBC,EAAmBC,GACjE,MAAOF,GAAsBG,cAAc5F,QAAQ,IAAM0F,EAAkB1F,QAAQ,GAGrF,QAAS6F,KACPviB,EAAS4D,iBAAiBtB,EAAEuB,QAAQ7D,EAASwC,WAAY,OAG3D,QAASggB,KACP1G,EAAG2G,cAAgB3G,EAAG2G,aACtB3G,EAAGvX,OAAOnE,KAAO,GAGnB,QAASsiB,KACP1iB,EAAS4D,mBAGX,QAAS+e,GAAYC,GACnB/E,EAAOgF,OAAOjc,EAAE,gBAAiBA,EAAE,yBAChCnD,KAAK,SAASrD,GACb,GAAI8B,GAAW,GAAIlC,IAEfI,KAAMA,EACN2F,YAAY,EACZC,UAAU,EACVnB,MAAOie,WAGX5gB,GAAS6F,MAAMtE,KAAK,WAClBzD,EAAS0C,KAAKR,OAKtB,QAAS6gB,KA0BP,QAASC,GAAgCC,EAAOtF,EAAWnY,EAAKtD,GAC9D,GAAI4Z,GAAK5b,KACLgjB,EAAQ1d,EAAIiN,MAAM,KAClB0Q,EAAWD,EAAM,EAErBpH,GAAGsH,MAAQxc,EAAE,oCAAoCyc,UAAUF,GAC3DrH,EAAGwH,aAAe,SAASC,IACrBA,EAAKC,QAAWD,EAAK5c,OAAO8c,UAC9BvhB,EAAS0G,eAAekT,EAAGjT,SAAUiT,EAAGhT,UAAUrF,KAAK,SAAS2c,GAC9DzC,EAAUsC,QACT,SAASyD,GACVH,EAAKza,SAAS6a,aAAa,eAAe,MAIhD7H,EAAGrP,OAAS,WACVkR,EAAUlR,UAzCdoR,EAAOgF,OAAOjc,EAAE,kCAAmCA,EAAE,wBAAyBgd,UAAW,QACtFngB,KAAK,SAAS+B,GACbxF,EAASuF,gBAAgBC,GAAK/B,KAAK,SAASvB,GACtCf,QAAQuI,SAASxH,IAEnByb,EAAUuB,MACRC,OAAQhe,QAAQub,QAAQ0C,SAASC,MACjCE,qBAAqB,EACrBC,eAAe,EACfP,YAAa,2BACbxB,WAAYuF,EACZvD,aAAc,mCACdC,QACEla,IAAKA,EACLtD,SAAUA,SAUtB8gB,EAAgCxF,SAAW,QAAS,YAAa,MAAO,YAsB1E,QAASqG,GAAcC,GACjBA,EAAO/gB,eAET+gB,EAAOxb,UACJyb,MAAM,SAAShgB,EAAMwC,GACpBsX,EAAOmG,MAAMpd,EAAE,uDAAwDkd,EAAO1jB,MACjEwG,EAAE7C,EAAK4E,UAIxBkV,EAAOc,QAAQ/X,EAAE,WAAYA,EAAE,uDAAwDkd,EAAO1jB,OAC7Ewe,GAAIhY,EAAE,YACpBnD,KAAK,WACJqgB,EAAOxb,UACJyb,MAAM,SAAShgB,EAAMwC,GACpBsX,EAAOmG,MAAMpd,EAAE,uDAAwDkd,EAAO1jB,MACjEwG,EAAE7C,EAAK4E,YAMhC,QAASsb,GAAerI,EAAQkI,GAkB9B,QAASI,GAA+BjB,EAAOtF,EAAWmG,GA8CxD,QAASK,GAAkBC,GACzB,GAAIC,GAA2C,IAA9BD,EAAKnb,KAAKhE,QAAQ,SAC/B,WAAWqf,KAAKF,EAAKhkB,KAgBzB,OAdKikB,IACHvC,EAAS5C,MACPmC,UACE,aACA,mCACA,gEACA,aAAeza,EAAE,oCAAsC,UACvD,WACA,eACAwH,KAAK,IACPmW,SAAU,YACVC,UAAW,MAGRH,EA/DT,GAAIvI,GAAK5b,IAET4b,GAAG2I,SAAW,GAAI1C,IAChBvc,IAAKkf,oBAAsBZ,EAAOzjB,GAAI,UAAU+N,KAAK,KACrDuW,YAAY,EACZC,WAAY,EACZC,UAAYzkB,KAAM+jB,EAAmBW,GAAIX,IACzCY,cAAe,SAASX,EAAM9d,EAAUC,EAAQye,GAC9C,GAAIC,EAEJtH,GAAUsC,OAEgB,IAAtB3Z,EAAS4e,SACXD,EAAMre,EAAE,2BAERqe,EAAMre,EAAE,wDAAyDN,EAAS4e,UAC1Enb,EAAW+C,MAAM,mBAGnBgV,EAAS5C,KACP4C,EAASqD,SACNC,QAAQH,GACRV,SAAS,aACTC,UAAU,OAEjBa,YAAa,SAASjB,EAAM9d,EAAUC,EAAQye,GAC5ClD,EAAS5C,MACPmC,UACE,aACA,mCACA,gEACA,aAAeza,EAAE,+CAAiD,UAClE,WACA,eACAwH,KAAK,IACPmW,SAAU,YACVC,UAAW,SAKjB1I,EAAGwJ,MAAQ,WACT3H,EAAUsC,QA5DdtC,EAAUuB,MACRC,OAAQhe,QAAQub,QAAQ0C,SAASC,MACjCC,YAAa1D,EACb2D,qBAAqB,EACrBC,eAAe,EACfP,YAAa,0BACbxB,WAAYyG,EACZzE,aAAc,kCACdC,QACEoE,OAAQA,KAOZI,EAA+B1G,SAAW,QAAS,YAAa,UAsElE,QAAS+H,GAASrjB,GAChBI,EAAE4B,QAAQlE,EAASwC,WAAY,SAASW,GAClCjB,EAAS7B,IAAM8C,EAAE9C,GACnB8C,EAAEV,OAAS,EAEXU,EAAEV,OAAS,IAIjB,QAAS+iB,KACPljB,EAAE4B,QAAQlE,EAASwC,WAAY,SAASW,GAAKA,EAAEV,OAAS,IAG1D,QAASgjB,GAAUvjB,GAiBjB,QAASwjB,GAAsB/H,EAAWzb,GAKxC,QAASojB,KACP3H,EAAUsC,OALZ,GAAInE,GAAK5b,IACT4b,GAAG5Z,SAAWA,EACd4Z,EAAGwJ,MAAQA,EAnBb3H,EAAUuB,MACRC,OAAQhe,QAAQub,QAAQ0C,SAASC,MACjCE,qBAAqB,EACrBC,eAAe,EACfP,YAAa/c,EAAS7B,GAAK,SAC3Bod,WAAYiI,EACZjG,aAAc,QACdC,QACExd,SAAUA,KAOdwjB,EAAsBlI,SAAW,YAAa,YAYhD,QAASmI,GAAezjB,GAoBtB,QAAS0jB,GAA2BtK,EAAQqC,EAAWkI,GAWrD,QAASC,KACPhK,EAAG5Z,SAASmG,QAEZwd,EAAY1lB,KAAK2b,EAAG5Z,SAAS4F,SAC7B6V,EAAUsC,OAGZ,QAASqF,KACP3H,EAAUlR,SAlBZ,GAAIqP,GAAK5b,IAET4b,GAAG5Z,SAAW,GAAIlC,GAAS6lB,EAAY/d,SACvCgU,EAAGgK,eAAiBA,EACpBhK,EAAGwJ,MAAQA,EAEXhK,EAAOyK,OAAO,WAAa,MAAOjK,GAAG5Z,SAASwF,OAAU,WACtDme,EAAYne,MAAQoU,EAAG5Z,SAASwF,QA3BpC,GAAIA,GAAQxF,EAASwF,KACrBiW,GAAUuB,MACRD,YAAa/c,EAAS7B,GAAK,cAC3Bod,WAAYmI,EACZnG,aAAc,aACdF,qBAAqB,EACrBC,eAAe,EACfE,QACEmG,YAAa3jB,KAEd6hB,MAAM,WAEP7hB,EAASwF,MAAQA,IAMnBke,EAA2BpI,SAAW,SAAU,YAAa,eAyB/D,QAASwI,GAAWlC,GAClBhI,EAAGhK,aAAegS,EAAO1jB,KACzB0b,EAAGmK,SAAWnC,EAAOzjB,GACrBud,EAAM,gBAAkBkG,EAAOzjB,IAGjC,QAAS6lB,GAAcpC,GACrBA,EAAOtb,SACPsT,EAAGmK,UAAW,EAGhB,QAASE,GAAarC,GACpBA,EAAO1b,UACJ3E,KAAK,SAASM,GACb+X,EAAGmK,UAAW,IAIpB,QAASG,GAAMlkB,GACbA,EAASyF,KAAK0e,SAAS5iB,KAAK,WAC1Bka,EAAUuB,MACRD,YAAa/c,EAAS7B,GAAK,gBAC3Bod,WAAY,gBACZgC,aAAc,MACdF,qBAAqB,EACrBC,eAAe,EACfE,QACE4G,aAAcpkB,EAASyF,KAAK4e,MAC5BvE,KAAMA,EACN8B,OAAQ5hB,OAOhB,QAASskB,GAAkB7hB,GACzB9D,EAAKoF,MAAM,qBAAuBtB,EAAaE,MAAQF,EAAavE,MACpEJ,EAASmF,WAAWR,EAAaE,MAAOF,EAAavE,MAAMqD,KAAK,SAASM,GACtE+d,EAAS5C,KACP4C,EAASqD,SACNC,QAAQxe,EAAE,wCACV2d,SAAS,aACTC,UAAU,QAzYpB,GAAI1I,GAAK5b,IAET4b,GAAGza,WAAaP,EAASO,WACzBya,EAAG2K,QAAUzmB,EACb8b,EAAG6G,YAAcA,EACjB7G,EAAGiH,eAAiBA,EACpBjH,EAAG+H,cAAgBA,EACnB/H,EAAGkK,WAAaA,EAChBlK,EAAGoK,cAAgBA,EACnBpK,EAAGqK,aAAeA,EAClBrK,EAAGsK,MAAQA,EACXtK,EAAGmI,eAAiBA,EACpBnI,EAAGyJ,SAAWA,EACdzJ,EAAG0J,QAAUA,EACb1J,EAAG2J,UAAYA,EACf3J,EAAG6J,eAAiBA,EACpB7J,EAAG0K,kBAAoBA,EAGvB1K,EAAGvX,QAAWnE,KAAM,IACpB0b,EAAG2G,cAAe,EAClB3G,EAAG0G,mBAAqBA,EACxB1G,EAAG4G,UAAYA,EACf5G,EAAG4K,mBACDC,oBAAqB,mBACrBC,YAAa,UACbC,aAActE,EACduE,OAAQ5E,GAGVlhB,EAAYwC,QAAQC,KAAK,WACvBqY,EAAGnJ,WAAarQ,EAAE4C,IAAIlE,EAAYoB,SAAS2kB,uBAAwB,SAAS3mB,GAC1E,OAASC,GAAID,EAAK4mB,kBACT5mB,KAAMA,EACNsH,MAAO1G,EAAYoB,SAASoJ,6BAA6BpL,QAOtEkb,EAAOyK,OACL,WACE,MAAOzjB,GAAEgC,MACPhC,EAAE4C,IAAIlF,EAASiD,WAAY,SAASE,GAAK,MAAOb,GAAE2kB,KAAK9jB,GAAI,KAAM,SAAU,YAC3Eb,EAAE4C,IAAIlF,EAASgD,eAAgB,SAASG,GAAK,MAAOb,GAAE2kB,KAAK9jB,GAAI,KAAM,SAAU,YAC/Eb,EAAE4C,IAAIlF,EAAS8C,cAAe,SAASK,GAAK,MAAOb,GAAE2kB,KAAK9jB,GAAI,KAAM,SAAU,cAGlF,SAAS+jB,EAASC,GAChB,GAAIC,GAAY9f,EAAKd,CAGrB4gB,GAAa9kB,EAAE+kB,eAAeH,EAASC,EAAS,MAChD7f,EAAMhF,EAAE4C,IAAI5C,EAAEiC,OAAO6iB,EAAY,SAASjkB,GACxC,GAAImkB,GAAYhlB,EAAEC,KAAK4kB,GAAW9mB,GAAI8C,EAAE9C,IACxC,QAAQiC,EAAEilB,QAAQpkB,EAAGmkB,KACnB,MACJ9gB,EAAUxG,EAASW,GAAGqH,OAElBV,EAAI+E,OAAS,IACfxL,EAAKoF,MAAMqB,EAAI8G,KAAK,MAAQ,YAC5B5H,EAAUxG,EAASqH,sBAAsBC,KAEvCA,EAAI+E,OAAS,GAAK+a,EAAW/a,QAAU6a,EAAQ7a,QAAU+a,EAAW/a,QAAU8a,EAAQ9a,SACxF7F,EAAQ/C,KAAK,WACXsG,EAAW+C,MAAM,sBAGvB,GAvEJ8U,EAAoBpE,SAAW,aAAc,SAAU,UAAW,YAAa,OAAQ,WAAY,eAAgB,UAAW,SAAU,aAAc,cAAe,WAAY,OAAQ,kBAyZzLrc,QACGO,OAAO,oBACP+b,WAAW,sBAAuBmE,MCjavC,WACE,YAMA,SAAS4F,GAAoBzd,EAAY4T,EAAW3d,EAAUiB,EAAWwmB,EAAa1J,EAAO2J,EAAS/H,GA6BpG,QAAS2F,KACP3H,EAAUsC,OAIZ,QAAS0H,GAAWpd,GAClB,MAAOkd,GAAYG,WAAWrd,GAGhC,QAASsd,GAA4BjM,GAInCkM,EAAYlM,EAHKtZ,EAAE4C,IAAI4W,EAAG7U,UAAUyO,UAAW,SAASC,GACtD,MAAOA,GAASvV,KAAO,KAAOuV,EAASE,MAAQ,OAKnD,QAASkS,GAAwBnM,EAAQxb,EAAMyV,GAC7CiS,EAAYlM,GAASxb,EAAO,KAAOyV,EAAQ,MAG7C,QAASiS,GAAYlM,EAAQoM,GAC3BN,EAAQllB,WAAWiB,KAAK,SAASwkB,GAC/B,GAAIC,GAAU5lB,EAAEC,KAAK0lB,EAAU,SAAS9kB,GACtC,GAAa,IAATA,EAAE9C,GACJ,MAAO8C,IAKX+kB,GAAQC,gBAAgB1kB,KAAK,SAAS2kB,GACpCF,EAAQG,cAAc5kB,KAAK,SAAS2c,GAClCjf,QAAQC,OAAOgf,EAAQkI,UAAYC,GAAIP,EAAYQ,QAAS1M,EAAG7U,UAAU2Z,UACzEjD,EAAUuB,MACRC,OAAQhe,QAAQub,QAAQ0C,SAASC,MACjCC,YAAa1D,EACb2D,qBAAqB,EACrBC,eAAe,EACfP,YAAa,wBACbxB,WAAY,0BACZgC,aAAc,SACdC,QACE+I,aAAcP,EACdQ,aAActI,WAOxBxE,EAAO2C,iBACP3C,EAAO4C,kBAGT,QAASmK,KACP,GAAI1f,GAAkC,UAA1B6S,EAAG7U,UAAUA,UAAwB,cAAc,MAC/D0W,GAAUsC,OAAOxc,KAAK,WAGpB,GAAIwb,GAAc,MAAQhW,EAAO,gBACjC0U,GAAUuB,MACRC,OAAQhe,QAAQub,QAAQ0C,SAASC,MACjCE,qBAAqB,EACrBC,eAAe,EACfP,YAAaA,EACbxB,WAAY,4BACZgC,aAAc,SACdC,QACEC,eAAgB7D,EAAG7U,eAM3B,QAAS2hB,KACP3hB,EAAYjH,EAAS+E,KAAK+W,EAAG7U,UAAUE,KAAKkC,cAAcyS,EAAG7U,UAAU5G,IACvE4G,EAAU2T,qBAAqBnX,KAAK,WAClCqY,EAAG7U,UAAYA,EACf0hB,MAIJ,QAAS/O,GAAM3S,IACLA,GAAa6U,EAAG7U,WAEtB0S,SAASlW,KAAK,WACdsG,EAAW+C,MAAM,kBACjBiR,EAAMqD,YACNzD,EAAUsC,SAId,QAAS4I,KAEP5hB,EAAYjH,EAAS+E,KAAK+W,EAAG7U,UAAUE,KAAKkC,cAAcyS,EAAG7U,UAAU5G,IACvE4G,EAAU2T,qBAAqBnX,KAAK,WAElCwD,EAAU2S,MAAQkC,EAAG7U,UAAU2S,MAC/B3S,EAAU4S,YAAciC,EAAG7U,UAAU4S,YACrC5S,EAAUqO,UAAYwG,EAAG7U,UAAUqO,UACnCrO,EAAU4L,MAAQiJ,EAAG7U,UAAU4L,MAE/B+G,EAAM3S,KAIV,QAAS6hB,KACPhN,EAAG7U,UAAUsB,QAAO,GAAM9E,KAAK,WAC7BsG,EAAW+C,MAAM,kBACjB6Q,EAAUsC,SAId,QAAS8I,KACPjN,EAAG7U,UAAUsB,SAAS9E,KAAK,WACzBsG,EAAW+C,MAAM,kBACjB6Q,EAAUsC,SAId,QAAS+I,GAAgBpN,GACvB5b,EAASO,WAAWuF,KAAKgW,EAAG7U,UAAUE,IAAM,IAAM2U,EAAG7U,UAAU5G,GAAI,OAAOoD,KAAK,SAASM,GAyBtF,QAASklB,GAAmChG,EAAOtF,EAAW5Z,GAC5Dkf,EAAMlf,KAAOA,EACbkf,EAAMqC,MAAQ,WACZ3H,EAAUsC,QA3BdtC,EAAUsC,OACVtC,EAAUuB,MACRC,OAAQhe,QAAQub,QAAQ0C,SAASC,MACjCC,YAAa1D,EACb2D,qBAAqB,EACrBC,eAAe,EACf6B,UACE,+DAAiEza,EAAE,mBAAqB,KACxF,kDACA,sCACA,yBACA,wBACA,qCAAuCA,EAAE,SAAW,eACpD,yBACA,gBACAwH,KAAK,IACPqP,WAAYwL,EACZvJ,QAAU3b,KAAMA,KAMlBklB,EAAmCzL,SAAW,QAAS,YAAa,UAUxE,QAAS0L,GAAsBhnB,GAC7B4Z,EAAG7U,UAAUiU,OAAOhZ,GAAUuB,KAAK,WACjCka,EAAUsC,OACVlW,EAAW+C,MAAM,oBAIrB,QAASqc,GAAsBjnB,GAC7B4Z,EAAG7U,UAAUmU,OAAOlZ,GAAUuB,KAAK,WACjCka,EAAUsC,OACVlW,EAAW+C,MAAM,oBAhMrB,GAAe7F,GAAX6U,EAAK5b,IAET4b,GAAGsN,gBAAkBppB,EACrB8b,EAAG2K,QAAUxlB,EACb6a,EAAG7U,UAAY0Y,EACf7D,EAAGwJ,MAAQA,EACXxJ,EAAG6L,WAAaA,EAChB7L,EAAG+L,4BAA8BA,EACjC/L,EAAGiM,wBAA0BA,EAC7BjM,EAAG6M,KAAOA,EACV7M,EAAG8M,mBAAqBA,EACxB9M,EAAGlC,MAAQA,EACXkC,EAAG+M,oBAAsBA,EACzB/M,EAAGgN,iBAAmBA,EACtBhN,EAAGiN,qBAAuBA,EAC1BjN,EAAGkN,gBAAkBA,EACrBlN,EAAGoN,sBAAwBA,EAC3BpN,EAAGqN,sBAAwBA,EAGvBhoB,QAAQgD,YAAY2X,EAAG7U,UAAU2T,wBACnC3T,EAAYjH,EAAS+E,KAAK+W,EAAG7U,UAAUE,KAAKkC,cAAcyS,EAAG7U,UAAU5G,GAAIyb,EAAG7U,UAAUkH,cACxFlH,EAAU2T,qBAAqBnX,KAAK,WAClCqY,EAAG7U,UAAYA,EACf6U,EAAGpB,WAAaoB,EAAG7U,UAAUyT,cAiLnC,QAAS2O,GAA0Btf,EAAYuR,EAAQza,EAAMD,EAAU+c,EAAWqE,EAAMlE,EAAkB9d,EAAUiB,EAAWwmB,EAAaxd,EAAM8T,EAAO4B,GAyCvJ,QAASzG,KACP,GAAI9V,GAAI0Y,EAAG7U,UAAUiS,aAAa,GAClC0E,OAAM,aAAexa,GAGvB,QAASkmB,KACPxN,EAAGyN,sBAAwBzN,EAAGyN,qBAC9BzN,EAAG7U,UAAU0N,iBAAmBmH,EAAGyN,qBAGrC,QAASC,KACP1N,EAAG2N,qBAAuB3N,EAAG2N,oBAG/B,QAASC,KACP,MAAO5N,GAAG7U,WACyB,WAAjC6U,EAAG7U,UAAU2L,OAAOwB,WACc,cAAlC0H,EAAG7U,UAAU2L,OAAOrF,MAAMtE,KAI9B,QAAS0e,GAAWpd,GAElB,MADAkd,GAAYG,WAAWrd,GAChBkd,EAAYkC,OAGrB,QAAS/R,GAAYC,GACnB,GAAI+R,IAAyB9N,EAAG7U,UAAUyO,WAA+C,IAAlCoG,EAAG7U,UAAUyO,UAAUrJ,MAC1ElL,SAAQiS,SAASyE,GAEfA,EAAKgS,iBACP/N,EAAG7U,UAAU2Q,YAAY,GAAI3N,IAAO6O,SAAWlX,MAAOiW,OACtDiE,EAAG2N,qBAAuBG,EAC1B9N,EAAGgO,WAAa,KAIlBhO,EAAG7U,UAAU2Q,YAAYC,GACzBiE,EAAG2N,qBAAuBG,GAI9B,QAASG,GAAepU,EAAU4N,GAChCzH,EAAG7U,UAAU8R,eAAepD,GACU,IAAlCmG,EAAG7U,UAAUyO,UAAUrJ,SACzByP,EAAG2N,qBAAsB,GAC3BlG,EAAKyG,YAGP,QAASC,KACP,GAAInO,EAAG7U,WAAa6U,EAAG7U,UAAUijB,SAC/B,MAAIpO,GAAG7U,UAAUijB,SAAW,EACnBtjB,EAAE,OACFkV,EAAG7U,UAAUijB,SAAW,EACxBtjB,EAAE,UAEFA,EAAE,QAIf,QAAS8B,GAAK6a,EAAMva,GACdua,EAAKC,QACP1H,EAAG7U,UAAUoB,MAAMW,GAChBvF,KAAK,SAASM,GACbgG,EAAW+C,MAAM,kBACjBiR,EAAMqD,YACNzD,EAAUsC,QACT,SAAS3Z,GACNA,EAASC,QAAUuX,EAAiB/b,uBACpCO,EAAEoH,SAASpD,EAASvC,KAAKqc,SAC3BtE,EAAGqO,sBAAwB7jB,EAASvC,KAAKqc,QAEzCuI,EAAKpF,KAKf,QAAS6G,GAAM7G,GACbzH,EAAG7U,UAAUuB,SACb+a,EAAK8G,eAGP,QAAS5d,GAAO8W,GACd6G,EAAM7G,GACFzH,EAAG7U,UAAU6C,QAEfgS,EAAG7U,UAAY,MAEjB0W,EAAUlR,SAGZ,QAASkc,GAAKpF,GACZzH,EAAGqO,uBAAwB,EAC3B5G,EAAK8G,eACL9G,EAAKyG,YAGP,QAASM,KACP,GAAI3Y,KAKJ,OAHImK,GAAG7U,UAAU2J,OAASkL,EAAG7U,UAAUwM,MACrC9B,EAAOmK,EAAG7U,UAAU2J,MAAMiG,SAASiF,EAAG7U,UAAUwM,MAE3CnR,EAAE4C,IAAIyM,EAAM,SAAS7C,GAC1B,OAAS2L,oBAAqB3L,EAAK2L,sBAC1BvK,aAAcpB,EAAKoB,kBAYhC,QAASqa,KACPzO,EAAG7U,UAAUwS,gBACb+Q,EAAe,GAAIpd,MAAK0O,EAAG7U,UAAU2J,MAAMtB,WAG7C,QAASmb,KACP3O,EAAG7U,UAAUqS,cACboR,EAAa,GAAItd,MAAK0O,EAAG7U,UAAU4M,IAAIvE,WAGzC,QAASqb,KACP,GAAI7O,EAAG7U,UAAU2J,MAAO,CAEtB,GAAIuC,EACJA,GAAQqX,EAAaI,UAAY9O,EAAG7U,UAAU2J,MAAMga,UACtC,IAAVzX,IACFqX,EAAe,GAAIpd,MAAK0O,EAAG7U,UAAU2J,MAAMtB,WACjB,gBAAtBwM,EAAG7U,UAAUgC,OACf6S,EAAG7U,UAAUwM,IAAM,GAAIrG,MAAK0O,EAAG7U,UAAU2J,MAAMtB,WAC/CwM,EAAG7U,UAAUwM,IAAI2D,WAAW0E,EAAG7U,UAAUkM,OACzC0X,EAAa,GAAIzd,MAAK0O,EAAG7U,UAAUwM,IAAInE,YAEzCwG,MAKN,QAASgV,KACP,GAAIhP,EAAG7U,UAAUwM,IAAK,CAEpB,GAAIN,GAAQ0X,EAAWD,UAAY9O,EAAG7U,UAAUwM,IAAImX,SACtC,KAAVzX,IACFA,EAAQ2I,EAAG7U,UAAU2J,MAAM8C,UAAUoI,EAAG7U,UAAUwM,KAC9CN,EAAQ,EACV2I,EAAG7U,UAAUwM,IAAM,GAAIrG,MAAKyd,EAAWvb,YAEvCwM,EAAG7U,UAAUkM,MAAQA,EACrB0X,EAAa,GAAIzd,MAAK0O,EAAG7U,UAAUwM,IAAInE,YAEzCwG,MAKN,QAASiV,KACPL,EAAa,GAAItd,MAAK0O,EAAG7U,UAAU4M,IAAIvE,WAGzC,QAASwG,KACPgG,EAAGkP,gBAAgBrZ,KAAO2Y,IAC1BxO,EAAG7U,UAAU6O,iBA/Mf,GAA0B0U,GAAcK,EAAYH,EAAhD5O,EAAK5b,IAET4b,GAAG2K,QAAUzmB,EACb8b,EAAG7U,UAAY0Y,EACf7D,EAAGnJ,cACHmJ,EAAGyN,qBAAuBzN,EAAG7U,UAAU0N,iBACvCmH,EAAGwN,uBAAyBA,EAC5BxN,EAAG4N,+BAAiCA,EACpC5N,EAAG2N,oBAAsB3N,EAAG7U,UAAUyO,WAAaoG,EAAG7U,UAAUyO,UAAUrJ,OAC1EyP,EAAG0N,sBAAwBA,EAE3B1N,EAAG6L,WAAaA,EAChB7L,EAAGlE,YAAcA,EACjBkE,EAAGiO,eAAiBA,EACpBjO,EAAG5C,aAAeA,EAClB4C,EAAGmO,cAAgBA,EACnBnO,EAAGsO,MAAQA,EACXtO,EAAGrP,OAASA,EACZqP,EAAG6M,KAAOA,EACV7M,EAAGpT,KAAOA,EACVoT,EAAGqO,uBAAwB,EAC3BrO,EAAGkP,iBACDrZ,KAAM2Y,IACNW,MA8HF,WAEE,IAAK,GADDA,MACK7nB,EAAI,EAAGA,GAAK,GAAIA,IACvB6nB,EAAM3nB,KAAKF,EAAEkR,WAEf,OAAO2W,OAjITnP,EAAGyO,aAAeA,EAClBzO,EAAG2O,WAAaA,EAGhB3O,EAAG6O,gBAAkBA,EACrB7O,EAAGgP,cAAgBA,EACnBhP,EAAGiP,cAAgBA,EAEfjP,EAAG7U,UAAU2J,QACf4Z,EAAe,GAAIpd,MAAK0O,EAAG7U,UAAU2J,MAAMtB,YACzCwM,EAAG7U,UAAUwM,MACfoX,EAAa,GAAIzd,MAAK0O,EAAG7U,UAAUwM,IAAInE,YACrCwM,EAAG7U,UAAU4M,MACf6W,EAAa,GAAItd,MAAK0O,EAAG7U,UAAU4M,IAAIvE,YAlP3CkY,EAAoBhK,SAAW,aAAc,YAAa,WAAY,YAAa,cAAe,QAAS,UAAW,kBA0MtH6L,EAA0B7L,SAAW,aAAc,SAAU,OAAQ,WAAY,YAAa,OAAQ,mBAAoB,WAAY,YAAa,cAAe,OAAQ,QAAS,kBAqNnLrc,QACGO,OAAO,oBACP+b,WAAW,sBAAuB+J,GAClC/J,WAAW,4BAA6B4L,MCxa7C,WAEE,YAmBA,SAAS6B,KACP,OACEC,SAAU,IACVlI,OACE5V,IAAK,SACLwE,UAAW,eACXuZ,UAAW,eACXlpB,SAAU,eAEZub,WAAY4N,GAQhB,QAASA,GAAwB/P,EAAQtb,GAGvCE,KAAKmN,IAAMiO,EAAOjO,IAClBnN,KAAK2R,UAAYyJ,EAAOzJ,UACxB3R,KAAKkrB,UAAY9P,EAAO8P,UACxBlrB,KAAKyE,aAAe,WAClB,GAAIwC,GAAK2P,EAAO4J,CAChB,OAAIpF,GAAOpZ,UAETiF,EAAMmU,EAAOpZ,SACbwe,EAAkBpe,EAAEiC,OAAOvE,EAASwC,YAAcC,OAAQ,IAC1DqU,EAAQxU,EAAEY,UAAUwd,EAAiB,SAASxe,GAC5C,MAAOA,GAAS7B,IAAM8G,KAEfA,IAAKA,EAAK2P,MAAOA,IAGrB,MAnBXuU,EAAwB7N,SAAW,SAAU,YAuB7Crc,QACGO,OAAO,oBACP4pB,UAAU,gBAAiBJ,MC9DhC,WACE,YAmBA,SAASK,GAAmBzN,GAY1B,QAASuD,GAASmK,EAAOC,GACvB,GAAIC,GAAIppB,EAAEqpB,IAAIF,EAAQ,mBAAoB,GAAK,IAE/C,QACE,wBAEA,4DACA,6BACA,uFAEA,uDAAuDC,EAAE,8BACzD,sBAAsBA,EAAE,+BACxB,sBAAsBA,EAAE,0CACxB,yBAEA,wBAAwBA,EAAE,qDAAqDA,EAAE,sCAEjF,YAAYA,EAAE,6BACd,6BAEA,2BAA2BA,EAAE,8EAE7B,2BAA2BA,EAAE,4EAE7B,2BAA2BA,EAAE,+FAE7B,2BAA2BA,EAAE,wFAC7B,gBAEA,uCAAuCA,EAAE,+BACzC,sCAAsCA,EAAE,+BACxC,eACA,aACA,WACA,oFACA,8EACA,UACAtd,KAAK,IAGT,QAASwd,GAAK3I,EAAO4I,EAAUC,GAC7B,GAAIC,GAAIC,EAAMC,CAET3pB,GAAEqpB,IAAIG,EAAO,qBAGhBC,EAAK,IAAM9I,EAAMhS,MAAMib,SACvBF,EAAO/I,EAAMhS,MAAMsT,SAAWwH,EAC9BE,EAAQ,KAAOhJ,EAAMhS,MAAMsT,SAAW,GAAKwH,EACvCA,EAAK,MACHC,EAAO,IACTA,GAAQ,GACNC,EAAQ,IACVA,GAAS,IAIA,IAATD,IACFA,EAAO,GACK,IAAVC,IACFA,EAAQ,GAGVJ,EAASM,IAAI,OAAQH,EAAO,KAC5BH,EAASM,IAAI,QAASF,EAAQ,KACzBhJ,EAAMhS,MAAMhK,WAAcgc,EAAMhS,MAAMhK,UAAUmlB,aACnDP,EAASQ,SAAS,SAAWpJ,EAAMhS,MAAML,OACzCib,EAASQ,SAAS,QAAUpJ,EAAMhS,MAAM5E,SAItC4W,EAAMhS,MAAMqb,WACdT,EAASQ,SAAS,aAAepJ,EAAMhS,MAAMqb,WAE3CrJ,EAAMhS,MAAMhK,YAEd4kB,EAASQ,SAAS,YAAcpJ,EAAMhS,MAAMhK,UAAUE,KACtD0kB,EAASQ,SAAS,sBAAwBpJ,EAAMhS,MAAMhK,UAAUE,KAGvB,IAArC8b,EAAMhS,MAAMhK,UAAUslB,YACxBV,EAASQ,SAAS,yBAGmB,IAAnCpJ,EAAMhS,MAAMhK,UAAUulB,UACxBX,EAASQ,SAAS,yBAhG1B,OACElB,SAAU,IACVlI,OACEhS,MAAO,WACPwb,WAAY,YAEdrQ,SAAS,EACTiF,SAAUA,EACVuK,KAAMA,GAVVL,EAAmB/N,SAAW,oBAyG9Brc,QACGO,OAAO,oBACP4pB,UAAU,qBAAsBC,MC9HrC,WACE,YAmBA,SAASmB,KACP,OACEvB,SAAU,IACVlI,OACEjS,OAAQ,YACR3D,IAAK,SACLof,WAAY,YAEdpL,UACE,yBACA,wCACA,qCACA,qBACA,6EACAjT,KAAK,KAIXjN,QACGO,OAAO,oBACP4pB,UAAU,qBAAsBoB,MCxCrC,WACE,YAeA,SAASC,GAAgB5iB,EAAYnJ,EAAUkd,EAAkB9d,EAAUiB,GAOzE,QAAS2qB,GAAK3I,EAAO4I,EAAUC,EAAOc,GAsBpC,QAASC,KACP,GAAI1lB,GAAKxC,EAAc2nB,CAGvBrJ,GAAMhS,MAAQhQ,EAAU8J,OAExBpG,EAAemoB,EAAgBnoB,eAC3BA,IAEF8b,EAAiB9b,EAAamS,MAC9B3P,EAAMxC,EAAawC,IACnB4lB,EAAyB9J,EAAMhS,MAAMiB,eAAegP,iBAAiBpK,OAGlE3P,IACHA,EAAM8b,EAAMhS,MAAMhK,UAAUE,KAG9BmlB,EAAYrJ,EAAMhS,MAAMhK,UAAU+J,OAAO,GAAGsb,UACxCA,GACFT,EAASQ,SAAS,aAAeC,GAGnCT,EAASQ,SAAS,YAAcllB,GAGlC,QAAS6lB,KAEP1qB,EAAE2qB,aAAaC,EAAWC,UAAW,SAASC,GACxC,aAAa9I,KAAK8I,IACpBvB,EAASwB,YAAYD,KAGzBvB,EAASQ,SAAS,WAGpB,QAASiB,KAEP,GAAIC,GAAWC,EAAY3M,EAAU7J,EACjCpG,EAAOkQ,EAAU2M,EAAcC,CAInC,IAFAH,GAAY,EAERvtB,EAASyB,OAASzB,EAASyB,MAAMwH,MAAQ0kB,EAAe1kB,KAAM,CAUhE,GAPAukB,EAAuC,oBAAxBG,EAAe1kB,KAC9B4X,EAAeoC,EAAMhS,MAAMhK,UAAUmlB,WACrCpV,EAAeiM,EAAMhS,MAAMiB,eAAeyO,wBAAwB9O,UAClEjB,EAAeqS,EAAMhS,MAAMiB,eAAeyO,wBAAwB/P,MAClE6c,EAAexK,EAAMhS,MAAMiB,eAAeyO,wBAAwBG,SAClE4M,EAAe5P,EAAiBjc,mBAAqB+O,EAEjDzP,QAAQgD,YAAYspB,GACtB,MAqCF,KApCA3M,EAAW2M,EACP3M,EAAW4M,IACb5M,EAAW4M,GAET1W,GAAc,IACZyJ,EAAiB,GACjBzJ,GAAc8V,EAAgBjb,WAC/BmF,GAAcyJ,IACbsM,GAA0BtM,IACzBwC,EAAMhS,MAAMhK,UAAUka,gBAI3BoM,GAAY,EACPC,IACE3M,IAEHoC,EAAMhS,MAAMkB,UAAYyb,EAAahd,IAEnC5Q,EAASyB,MAAMosB,eACjBhC,EAASM,IAAI,MAAQvb,EAAQ5Q,EAASyB,MAAMosB,cAAiB,MAC7DhC,EAASM,IAAI,SAAWrL,EAAW9gB,EAASyB,MAAMosB,cAAiB,OAGnEhC,EAASM,IAAI,MAAOnsB,EAASyB,MAAMqsB,UAAY,OAEnDjC,EAASwB,YAAY,YAAcpK,EAAMhS,MAAMhK,UAAUE,KACzD0kB,EAASwB,YAAY,yBACrBxB,EAASQ,SAAS,0BAClBpJ,EAAMhS,MAAME,SAAU,GAGxBsc,GAAgB3M,EAChB9J,KAGQuW,GAAaE,GAAgBzW,GAAc8V,EAAgBjb,WACjEiP,EAAW2M,EACP3M,EAAWhD,EAAiBjc,qBAC9Bif,EAAWhD,EAAiBjc,oBAC1BmV,GAAc,GAAKA,GAAc8V,EAAgBjb,YAEnD0b,GAAY,EACPC,IACH3B,EAASM,IAAI,MAAOnsB,EAASyB,MAAMqsB,UAAY,MAE3C9tB,EAASyB,MAAMosB,eACjBhC,EAASM,IAAI,SAAWrL,EAAW9gB,EAASyB,MAAMosB,cAAiB,OAEvEhC,EAASwB,YAAY,0BACrBxB,EAASwB,YAAY,yBAGrBxB,EAASQ,SAAS,YAAcpJ,EAAMhS,MAAMhK,UAAUE,MAExDsmB,GAAgB3M,EAChB9J,IACApG,EAAQ,CAEL6c,KAECD,EACF3B,EAASQ,SAAS,yBAEVxL,IAERoC,EAAMhS,MAAMmB,QAAU2b,EAAWnd,EAAOkQ,KAK1CyM,EACF1B,EAASwB,YAAY,WAErBxB,EAASQ,SAAS,WAGtB,QAAS2B,GAAaC,GACpB,GAAIC,GAASjD,EAAOkD,CAUpB,OARAD,GAAqB,GAAXD,EACVhD,EAAQ3X,KAAK8a,MAAMF,EAAU,IACzBjD,EAAQ,KACRA,EAAQ,IAAMA,GAClBkD,EAAOD,EAAU,GACbC,EAAO,KACPA,EAAO,IAAMA,GAELlD,EAAQ,IAAMkD,EAG5B,QAASP,GAAahd,GACpB,MAAOod,GAAapd,GAGtB,QAASmd,GAAWnd,EAAOkQ,GAEzB,MAAOkN,IADIpd,EAAQkQ,GAAYhD,EAAiBjc,oBA5KlD,GAAIqrB,GAAYJ,EAAiBa,EAAgBlN,EAAgBsM,CAEjEG,GAAarB,EAAS,GACtBiB,EAAkBF,EAAM,GACxBe,EAAiBf,EAAM,GACvBnM,GAAkB,EAElBoL,EAASQ,SAAS,4CAGlB,IAAIgC,GAAsBtkB,EAAWuT,IAAI,qBAAsBuP,GAC3DyB,EAAiBvkB,EAAWuT,IAAI,gBAAiBgQ,GACjDiB,EAAoBxkB,EAAWuT,IAAI,mBAAoB0P,EAG3D/J,GAAM3F,IAAI,WAAY,WACpB+Q,IACAC,IACAC,MAzBJ,OACEpD,SAAU,IACVqD,SAAU,iBAAkB,yBAC5B5C,KAAMA,GALVe,EAAgBnP,SAAW,aAAc,WAAY,mBAAoB,WAAY,aA2LrFrc,QACGO,OAAO,oBACP4pB,UAAU,kBAAmBqB,MC5MlC,WACE,YAmBA,SAAS8B,KACP,OACEtD,SAAU,IACVlI,OACEjS,OAAQ,YACR3D,IAAK,SACLof,WAAY,YAEdpL,UACE,2BACA,wCACA,qCACA,qBACA,6EACAjT,KAAK,KAIXjN,QACGO,OAAO,oBACP4pB,UAAU,qBAAsBmD,MCxCrC,WACE,YAcA,SAASC,KAYP,QAASrN,GAASmK,EAAOC,GACvB,GAAIC,GAAIppB,EAAEqpB,IAAIF,EAAQ,mBAAoB,GAAK,IAE/C,QACE,wBAEA,2DACA,qFAEA,qDAAqDC,EAAE,8BACvD,oBAAoBA,EAAE,+BACtB,oBAAoBA,EAAE,0CACtB,oCAAoCA,EAAE,sDAAsDA,EAAE,sCAE9F,oBAAoBA,EAAE,qDAAqDA,EAAE,sCAE7E,QAAQA,EAAE,6BACV,yBAEA,uBAAuBA,EAAE,8EAEzB,uBAAuBA,EAAE,4EAEzB,uBAAuBA,EAAE,+FAEzB,uBAAuBA,EAAE,wFACzB,YACA,UACAtd,KAAK,IAGT,QAASwd,GAAK3I,EAAO4I,EAAUC,GACxBxpB,EAAEqpB,IAAIG,EAAO,qBAGZ7I,EAAMhS,MAAMqb,WACdT,EAASQ,SAAS,aAAepJ,EAAMhS,MAAMqb,WAE3CrJ,EAAMhS,MAAMhK,YAEd4kB,EAASQ,SAAS,YAAcpJ,EAAMhS,MAAMhK,UAAUE,KAGb,IAArC8b,EAAMhS,MAAMhK,UAAUslB,YACxBV,EAASQ,SAAS,yBAGmB,IAAnCpJ,EAAMhS,MAAMhK,UAAUulB,UACxBX,EAASQ,SAAS,yBA3D1B,OACElB,SAAU,IACVlI,OACEhS,MAAO,WACPwb,WAAY,YAEdrQ,SAAS,EACTiF,SAAUA,EACVuK,KAAMA,GA0DVzqB,QACGO,OAAO,oBACP4pB,UAAU,uBAAwBoD,MCpFvC,WAEE,YAeA,SAASC,GAAqB5kB,EAAY8X,EAAS+M,EAAWjuB,EAAIC,EAAUiuB,EAAY7uB,EAAUiB,EAAWD,GAC3G,OACEmqB,SAAU,IACVlI,OACEha,KAAM,yBAERwU,WAAYqR,EACZlD,KAAM,SAAS3I,EAAOvG,EAASoP,EAAOrO,GAqBpC,QAASsR,KACPlgB,EAAO,GAAImgB,GAAatS,EAASzT,GAErB,WAARA,GAEFjI,EAAYwC,QAAQC,KAAK,WACvB,GAAI8O,GAAM0c,EAAUC,CAChBluB,GAAYoB,SAAS+sB,mBACvB5c,EAAOvR,EAAYoB,SAAS+sB,iBAAiB1c,MAAM,KACnDwc,EAAW7P,SAASgQ,eAAe,OAASjkB,SAASoH,EAAK,KAC1D2c,EAAiB/jB,SAASoH,EAAK,IAAM1D,EAAKgf,cAC1Chf,EAAK6N,QAAQ2S,UAAYJ,EAASK,UAAYJ,KAMpDzR,EAAWoQ,cAAgBhf,EAAKgf,cAMlC,QAASmB,GAAaO,EAAUtmB,GAC9B/I,KAAKqvB,SAAWA,EAChBrvB,KAAKwc,QAAU6S,EAAS,GACxBrvB,KAAK+I,KAAOA,EACZ/I,KAAK2tB,cAAgB3tB,KAAKsvB,mBAC1BtvB,KAAKuvB,WAAa,EAAIvvB,KAAK2tB,cAC3B3tB,KAAK4P,WAAa5P,KAAKwvB,gBACvBxvB,KAAKyvB,KAAOzvB,KAAK0vB,gBAGjB1vB,KAAKmuB,oBAAsBtkB,EAAWuT,IAAI,qBAAsBnc,QAAQ0L,KAAK3M,KAAMA,KAAK2vB,cACxF3vB,KAAK4vB,mBAAqB/lB,EAAWuT,IAAI,mBAAoBnc,QAAQ0L,KAAK3M,KAAMA,KAAK6vB,YAErF7vB,KAAK8vB,wBAA0B7uB,QAAQ0L,KAAK3M,KAAMA,KAAK+vB,mBACvD/vB,KAAKgwB,+BAAiC/uB,QAAQ0L,KAAK3M,KAAMA,KAAKiwB,0BAG9DjwB,KAAK+vB,oBACL9uB,QAAQub,QAAQmF,GAASuO,GAAG,SAAUlwB,KAAK8vB,yBA7D7C,GAAInhB,GAAM5F,EAAMonB,GAAgB,CAEhCxhB,GAAO,KACP5F,EAAOga,EAAMha,KACbonB,EAA4C,sBAA3B3T,EAAQE,KAAK,WAI9Ba,EAAW4S,cAAgBA,EAG3BzvB,EAASmuB,GAGT9L,EAAM3F,IAAI,WAAY,WAChBzO,GACFA,EAAKyhB,aAgDTtB,EAAavnB,WAEX6oB,SAAU,WACRpwB,KAAKmuB,sBACLnuB,KAAK4vB,qBACL5vB,KAAKqvB,SAASgB,IAAI,YAAarwB,KAAKgwB,gCACpC/uB,QAAQub,QAAQmF,GAAS0O,IAAI,SAAUrwB,KAAK8vB,0BAG9CH,YAAa,WACX3vB,KAAKqvB,SAASa,GAAG,YAAalwB,KAAKgwB,gCACnChwB,KAAK+vB,oBACL/vB,KAAKiwB,4BAGPJ,UAAW,WACT7vB,KAAKqvB,SAASgB,IAAI,YAAarwB,KAAKgwB,gCACpClwB,EAASyB,MAAQ,MAGnB+tB,iBAAkB,WAChB,GAAIgB,GAAOC,EAAQC,EAAS,IAO5B,OALAF,GAAQpR,SAASgQ,eAAe,SAChCqB,EAASrR,SAASgQ,eAAe,UAC7BoB,GAASC,IACXC,GAAWD,EAAOnB,UAAYkB,EAAMlB,WAAa,IAE5CoB,GAITC,iBAAkB,SAASC,GACzB,GAAIC,GAAOH,EAAQI,EAAYhD,EAAWiD,EAAOC,EAASC,CAe1D,OAbAP,GAASG,EAAQC,EAAahD,EAAY,EAC1CiD,EAAQ7wB,KAAKwc,QAAQwU,uBAAuB,OAExCH,EAAM1kB,OAAS,IACjB2kB,EAAUD,EAAM,GAAGI,wBACnBT,EAASM,EAAQN,OACjBG,EAAQG,EAAQH,MAChBC,EAAaE,EAAQhF,KAAO4E,EAC5BK,EAAaF,EAAM,GAAGG,uBAAuB,2BACzCD,EAAW5kB,OAAS,IACtByhB,EAAYmD,EAAW,GAAGG,gBAGrBV,OAAQA,EAAQG,MAAOA,EAAOQ,QAAUrF,KAAM8E,EAAYQ,IAAKxD,KAI1E4B,cAAe,WACb,GAAqB/d,EAIrB,OAFAA,GAAOzR,KAAKwc,QAAQ6U,qBAAqB,mBAElCjvB,EAAE4C,IAAIyM,EAAM,SAAS6f,EAAI1a,GAC9B,MAAIuZ,GACKvZ,EAEA3L,SAASqmB,EAAGC,WAAW,iBAAiB7vB,UAKrDguB,cAAe,WACb,GAAI8B,GAAYC,EAAM,CAUtB,OARiB,WAAbzxB,KAAK+I,MACPyoB,EAAaxxB,KAAKwc,QAAQ6U,qBAAqB,gBAAgB,GAC/DI,EAAMxmB,SAASumB,EAAWD,WAAW,WAAW7vB,OAAS,GAGzD+vB,EAAMzxB,KAAKwc,QAAQwU,uBAAuB,OAAO7kB,OAAS,EAGrDslB,GAKT1B,kBAAmB,WACjB,GAAIe,GAASY,CAEbZ,GAAU9wB,KAAKwc,QAAQyU,wBACvBS,EAAgB1xB,KAAKywB,iBAAiBK,EAAQhF,MAE9C7qB,QAAQC,OAAOlB,MACbsgB,aACEqR,EAAGb,EAAQhF,KACX8F,EAAGd,EAAQM,KAEbS,UAAWH,EAAclB,OACzBsB,SAAUJ,EAAcf,MACxBoB,WAAYL,EAAcP,OAAOrF,KACjC8B,UAAW8D,EAAcP,OAAOC,OAMpCnB,yBAA0B,WACxB,GAAIje,GAAgBggB,EAAoB/kB,EAAKglB,EAASC,EAAMjf,CAE5DjB,GAAiBjR,EAAU8J,OAAOmH,eAC9BhS,KAAKsgB,aAAetO,IACtBggB,EAAqBhgB,EAAemgB,6BAA6BnyB,SAI/DF,EAASyB,MAAQvB,KACjBiN,GAAM,GAAIC,OAAOkC,YACZpP,KAAKoyB,YAAcnlB,EAAMjN,KAAKoyB,WAAa,OAC9CpyB,KAAKoyB,WAAanlB,EAClBglB,EAAUD,EAAmBJ,EAAI5xB,KAAKuvB,WAClC0C,EAAU,GACZC,GAAQlyB,KAAKwc,QAAQ2S,UACjB8C,EAAUC,IACZD,EAAUC,GACZlyB,KAAKwc,QAAQ2S,WAAa8C,IAG1BA,EAAUD,EAAmBJ,EAAI5xB,KAAKuvB,YACtCtc,EAAQgf,EAAUjyB,KAAKwc,QAAQ0U,cACnB,IACVlxB,KAAKwc,QAAQ2S,WAAalc,UAe9C,QAAS2b,GAA+BxT,GAGtCpb,KAAK+I,KAAOqS,EAAOrS,KAzNrB0lB,EAAqBnR,SAAW,aAAc,UAAW,YAAa,KAAM,WAAY,aAAc,WAAY,YAAa,eAqN/HsR,EAA+BtR,SAAW,UAO1Crc,QACGO,OAAO,oBACP4pB,UAAU,uBAAwBqD,MC9OvC,WAEE,YAaA,SAAS4D,KACP,OACEpH,SAAU,IACVqD,QAAS,UACTvL,OACEuP,QAAS,KAEXpW,SAAS,EACTiF,UACE,0BAEA,mCACA,wDACA,MAEA,oCACA,oDACA,MACA,YACAjT,KAAK,KAIXjN,QACGO,OAAO,oBACP4pB,UAAU,uBAAwBiH,MCxCvC,WACE,YAYA,SAASE,GAAyB1oB,EAAYnJ,EAAUC,EAAMG,EAAahB,EAAU8d,EAAkB7c,GAOrG,QAAS2qB,GAAK3I,EAAOvG,EAASoP,EAAOgB,GA4DnC,QAAS4F,GAAa9P,GACpB,GAAI+P,GAAUzgB,EAAgB0gB,EAAsBC,EAAMC,CAE1DlQ,GAAGpE,mBAEHoU,EAAuBhQ,EAAGmQ,OAAOC,aAAepQ,EAAGmQ,OAAO3B,aAAe,KAIvEyB,EAAOjQ,EAAGmQ,OAAO5B,wBACjB2B,EAAiBD,EAAK7G,KAAO6G,EAAKhC,MAAQ,GACtCjO,EAAGqQ,MAAQH,KAIjBH,EAAW,aAEP1P,EAAMhS,OAASgS,EAAMhS,MAAMhK,UAEF,gBAAvB2b,EAAGmQ,OAAOG,WACa,iBAAvBtQ,EAAGmQ,OAAOG,UACZP,EAAW,eACmB,mBAAvB/P,EAAGmQ,OAAOG,WACa,kBAAvBtQ,EAAGmQ,OAAOG,YACjBP,EAAW,cAIbA,EAAW,aAIbzgB,EAAiB,GAAIihB,GAA4BR,GACjDzgB,EAAekhB,cAAcxQ,GAG7B3hB,EAAU8J,OAAOmH,eAAiBA,EAGlC/Q,QAAQub,QAAQ0C,UAAUiU,IAAI,UAAWtD,GAGzC5uB,QAAQub,QAAQ0C,UAAUgR,GAAG,YAAakD,IAG5C,QAASC,GAAU3Q,GACjB,GAAI3R,GAAOuiB,EAAWC,EAAYC,EAAWzkB,EAAW0kB,EAAS/T,EAAc1N,EAAgBvN,CAE/F8uB,GAAa/W,EAAQkX,SAAS,qBAC9BF,EAA8C,yBAAjChX,EAAQ,GAAGmX,WAAWC,SACjCpX,EAAQkX,SAAS,oBAEnBjvB,EAAemoB,EAAgBnoB,eAE3Bse,EAAMhS,OAASgS,EAAMhS,MAAMhK,UAE7BgK,EAAQgS,EAAMhS,OAIdhC,EAAY6d,EAAgB1B,UAAU2I,UAAU/yB,EAAYoZ,sBAAuB,YACnFuZ,GACE1qB,KAAM,cACN9B,IAAKxC,EAAcA,EAAawC,IAAMnH,EAASiC,mBAC/C2e,QAASha,EAAE,aACXqI,UAAWA,EACX4R,SAAU4S,EAAY,EAAI,GAE5B7T,EAAe,GAAI3e,GAAU0yB,GAC7B1iB,GACEhK,UAAW2Y,EACX/N,UAAWib,EAAgBjb,UAC3BxF,OAAQ,GAEV4E,EAAMhK,UAAU+J,QAAUC,IAI5BuiB,EAAY,WACRE,EACFF,EAAY,UACLviB,EAAMhK,UAAUmlB,aACvBoH,EAAY,mBAGdlxB,EAAE4B,QAAQ+M,EAAMhK,UAAU+J,OAAQ,SAASgjB,GACzCA,EAAEC,UAAW,IAIf/hB,EAAiBjR,EAAU8J,OAAOmH,eAClCA,EAAegiB,qBAAqBV,GACpCthB,EAAeiiB,cAAcljB,GACzBtM,GAGFuN,EAAekiB,iBAAiBzvB,GAGlC1D,EAAU8J,OAAO9D,UAAYgK,EAAMhK,UAEnCpG,EAAKoF,MAAM,2BAA6ButB,GACxCzpB,EAAW+C,MAAM,sBAGnB,QAASwmB,GAAO1Q,GACd,GAAI1Q,GAAiBjR,EAAU8J,OAAOmH,cAMtCtR,GAAS,WACPsR,EAAemiB,gBAAgBzR,KAInC,QAASmN,GAAUnN,GACjB,GAAI3R,GAAOqjB,CAEXrjB,GAAQgS,EAAMhS,MACdqjB,EAAUrzB,EAAU8J,OAAOmH,eAG3B/Q,QAAQub,QAAQ0C,UAAUmR,IAAI,YAAa+C,GAEvCgB,EAAQC,iBACVxqB,EAAW+C,MAAM,oBACjBwnB,EAAQC,gBAAiB,GAIvBtjB,GAASA,EAAMhK,WACjB3E,EAAE4B,QAAQ+M,EAAMhK,UAAU+J,OAAQ,SAASgjB,GACzCA,EAAEC,UAAW,IAOnB,QAASO,MAqCT,QAASC,GAA8BjB,GACrCtzB,KAAKw0B,aAAalB,GAwFpB,QAASL,GAA4BR,GACnCzyB,KAAKyyB,SAAWA,EAvUlB,GAAI1P,EAAMhS,MAAO,CACf,IAAIgS,EAAMhS,MAAMhK,UAAUqhB,UAAarF,EAAMhS,MAAMqb,UAMjD,WADA5P,GAAQ2Q,YAAY,gCAcxB,WACE,GAAIpmB,GAAW2K,EAAU+iB,EAAYC,EAAcC,EAC/CC,EAAUC,EAAUC,EAAWC,EAASC,CAGxCjS,GAAMhS,MAAM5E,OAAS,IAEzBpF,EAAYgc,EAAMhS,MAAMhK,UACxB2K,EAAWqR,EAAMhS,MAAMW,SACvB+iB,EAAaryB,EAAEY,UAAU+D,EAAU+J,QAAS,WAAYY,IACxDgjB,EAA+B,IAAfD,EAChBE,EAAeF,IAAe1tB,EAAU+J,OAAO3E,OAAS,EAExDyoB,EAAW3zB,QAAQub,QAAQ,gCAC3BoY,EAASzI,SAAS,aAAeplB,EAAUE,KAEvCF,EAAUmlB,YACwB,0BAAlC1P,EAAQ,GAAGmX,WAAWC,SACpBc,IACFG,EAAW5zB,QAAQub,QAAQ,qCAAqCyY,OAAOL,GACvEpY,EAAQyY,OAAOJ,IAEbF,IACFG,EAAY7zB,QAAQub,QAAQ,sCAAsCyY,OAAOL,EAASM,SAClF1Y,EAAQyY,OAAOH,MAIbJ,IACFK,EAAU9zB,QAAQub,QAAQ,oCAAoCyY,OAAOL,GACrEpY,EAAQyY,OAAOF,IAEbJ,IACFK,EAAa/zB,QAAQub,QAAQ,uCAAuCyY,OAAOL,EAASM,SACpF1Y,EAAQyY,OAAOD,SA1CrBxY,EAAQ0T,GAAG,YAAasC,GAGxBzP,EAAM3F,IAAI,WAAY,WACpBZ,EAAQ6T,IAAI,YAAamC,GACzBhW,EAAQ6T,IAAI,YAAa+C,KA0L3BkB,EAAgB/sB,WACdoqB,GAAI,EACJC,GAAI,EAEJ9Q,SAAU,SAAqBqU,GAC7B,GAAIliB,GAAQ,GAAIqhB,EAQhB,OAPArhB,GAAM0e,EAAI3xB,KAAK2xB,EAAIwD,EAAiBxD,EACpC1e,EAAM2e,EAAI5xB,KAAK4xB,EAAIuD,EAAiBvD,EAEhC9xB,EAASyB,QACX0R,EAAMxB,KAAO3R,EAASyB,MAAMqO,WAAW5P,KAAK2xB,GAAK7xB,EAASyB,MAAMqO,WAAWulB,EAAiBxD,IAGvF1e,GAGTmiB,YAAa,SAAwBD,GACnC,GAAIliB,GAAQjT,KAAK8gB,SAASqU,EAE1B,OAAO/hB,MAAKiiB,KAAKpiB,EAAM0e,EAAI1e,EAAM0e,EAAI1e,EAAM2e,EAAI3e,EAAM2e,IAGvDsD,MAAO,WACL,GAAI5U,GAAc,GAAIgU,EAItB,OAHAhU,GAAYqR,EAAI3xB,KAAK2xB,EACrBrR,EAAYsR,EAAI5xB,KAAK4xB,EAEdtR,IAWXiU,EAA8BhtB,WAC5BoK,WAAY,EACZ2jB,SAAU,EACV5kB,OAAQ,EACRkQ,UAAW,EAEX0S,UAAW,KAEXkB,aAAc,SAASlB,GACrBtzB,KAAKszB,UAAYA,GAGnBW,cAAe,SAASljB,GACtB,GAAIwkB,IAAiB,CAEE,aAAnBv1B,KAAKszB,WACPtzB,KAAK0Q,MAAQ,EACb1Q,KAAK4gB,SAAW7P,EAAMhK,UAAU+J,OAAO3E,OAASyR,EAAiBjc,qBAKjE3B,KAAK0Q,MAAQK,EAAMhK,UAAU+J,OAAO,GAAGJ,MACvC1Q,KAAK4gB,SAAWxe,EAAEozB,MAAMzkB,EAAMhK,UAAU+J,OAAQ,SAASgjB,GACvD,GAAI7gB,GAAOwiB,CASX,OAPAA,GAAmB3B,EAAEniB,UAEnBsB,EADEsiB,EAAgB,EACV,EAEAE,EAAmBF,EAAgB,EAC7CA,EAAgBE,EAET3B,EAAE3nB,OAAS8G,EAAQ2K,EAAiBjc,uBAKjDuyB,iBAAkB,SAAS3T,GACzBvgB,KAAK2R,UAAY4O,GAGnBO,SAAU,SAASqU,GACjB,GAAIliB,GAAQ,GAAIshB,EAKhB,OAJAthB,GAAMtB,UAAa3R,KAAK2R,UAAYwjB,EAAiBxjB,UACrDsB,EAAMvC,MAAS1Q,KAAK0Q,MAAQykB,EAAiBzkB,MAC7CuC,EAAM2N,SAAY5gB,KAAK4gB,SAAWuU,EAAiBvU,SAE5C3N,GAGTyiB,cAAe,SAAS3H,GACtB,GAAIC,GAAqB,GAAXD,EACVhD,EAAQ3X,KAAK8a,MAAMF,EAAU,GAC7BjD,GAAQ,KACVA,EAAQ,IAAMA,EAChB,IAAIkD,GAAOD,EAAU,EAIrB,OAHIC,GAAO,KACTA,EAAO,IAAMA,GAEHlD,EAAQ,IAAMkD,GAG5BP,aAAc,WACZ,MAAO1tB,MAAK01B,cAAc11B,KAAK0Q,QAGjCmd,WAAY,WACV,GAAIta,IAAOvT,KAAK0Q,MAAQ1Q,KAAK4gB,UAAYhD,EAAiBjc,kBAC1D,OAAO3B,MAAK01B,cAAcniB,IAG5B2hB,MAAO,WACL,GAAI5U,GAAc,GAAIiU,EAKtB,OAJAjU,GAAY3O,UAAY3R,KAAK2R,UAC7B2O,EAAY5P,MAAQ1Q,KAAK0Q,MACzB4P,EAAYM,SAAW5gB,KAAK4gB,SAErBN,IAWX2S,EAA4B1rB,WAE1BouB,oBAAqB,KACrBC,mBAAoB,KAGpBC,wBAAyB,KACzBC,uBAAwB,KAGxB/U,yBAA0B,KAC1BN,wBAAyB,KAEzBO,iBAAkB,KAElBqT,gBAAgB,EAIhB0B,wBAAyB,KAEzB9B,cAAe,SAA6BljB,GAC1C/Q,KAAKygB,wBAA0B,GAAI8T,GAA8Bv0B,KAAKszB,WACtEtzB,KAAK+gB,yBAA2B,GAAIwT,GAA8Bv0B,KAAKszB,WACvEtzB,KAAK+gB,yBAAyBkT,cAAcljB,IAG9CmiB,cAAe,SAA6BjnB,GAC1CjM,KAAK41B,mBAAqB,GAAItB,GAC9Bt0B,KAAKm0B,gBAAgBloB,GACrBjM,KAAK21B,oBAAsB31B,KAAK41B,mBAAmBV,SAGrDhB,iBAAkB,SAAgCzvB,GAChDzE,KAAKghB,iBAAmBvc,EACxBzE,KAAKygB,wBAAwByT,iBAAiBzvB,EAAamS,OAC3D5W,KAAK+gB,yBAAyBmT,iBAAiBzvB,EAAamS,QAI9Dud,gBAAiB,SAA+BloB,GAM9C,GAJAjM,KAAK41B,mBAAmBjE,EAAI1lB,EAAM8mB,MAClC/yB,KAAK41B,mBAAmBhE,EAAI3lB,EAAM+pB,MAG9Bh2B,KAAKq0B,gBAAkBv0B,EAASyB,MAAO,CACzC,GAAI00B,GAAsBj2B,KAAK+1B,wBAAwBj2B,EAASyB,MAC3DvB,MAAK61B,0BACR71B,KAAK61B,wBAA0B71B,KAAK+1B,wBAAwBj2B,EAASyB,MAAOvB,KAAK21B,qBAC7E50B,EAAU8J,OAAO9D,UAAU6C,QAC7B5J,KAAKk2B,oBAAoBn1B,EAAU8J,OAAO9D,UAAU2J,MAAO1Q,KAAK61B,wBAAwBjE,GACxFjxB,EAAKoF,MAAM,wBAA0BhF,EAAU8J,OAAO9D,UAAU2J,SAG/D1Q,KAAK81B,wBACLG,GACDA,EAAoBtE,GAAK3xB,KAAK81B,uBAAuBnE,GACrDsE,EAAoBrE,GAAK5xB,KAAK81B,uBAAuBlE,IACvD5xB,KAAK81B,uBAAyBG,EAC1Bj2B,KAAK61B,0BACFI,IACHj2B,KAAK81B,uBAAyB91B,KAAK61B,wBAAwBX,SAE7Dl1B,KAAKm2B,+BAIN,IAAIn2B,KAAK21B,qBACL31B,KAAK41B,qBACJ51B,KAAKq0B,eAAgB,CAC7B,GAAI+B,GAAWp2B,KAAKo1B,aAChBgB,GAAW,IACbp2B,KAAKq0B,gBAAiB,EACtBhB,EAAUpnB,MAOhBkqB,uBAAwB,WACtB,GAAIE,GAGApjB,EAAQjT,KAAK81B,uBAAuBhV,SAAS9gB,KAAK61B,yBAClDS,EAAgBrjB,EAAMxB,KAAOmM,EAAiBjc,mBAAqBsR,EAAM2e,CAC7EjxB,GAAKoF,MAAM,kBAAoBuwB,GAE3Br1B,QAAQgD,YAAYjE,KAAK+gB,yBAAyBrQ,QAEpD1Q,KAAK+gB,yBAAyBpP,UAAY7R,EAASyB,MAAMqO,WAAW5P,KAAK61B,wBAAwBlE,GACjG3xB,KAAK+gB,yBAAyBrQ,MAAQ1Q,KAAK61B,wBAAwBjE,GAE5D5xB,KAAK+gB,yBAAyBpP,UAAY,IACjD3R,KAAK+gB,yBAAyBpP,UAAY7R,EAASyB,MAAMqO,WAAWmT,EAAMhS,MAAMhK,UAAU+J,OAAO,GAAGY,WAKtG1R,KAAKygB,wBAAwB9O,UAAY3R,KAAK+gB,yBAAyBpP;+EAElD,cAAjB3R,KAAKyyB,UACPzyB,KAAKygB,wBAAwB/P,MAAQ1Q,KAAK+gB,yBAAyBrQ,MAAQ4lB,EAC3Et2B,KAAKygB,wBAAwBG,SAAW5gB,KAAK+gB,yBAAyBH,UAGjD,gBAAjB5gB,KAAKyyB,UACP4D,EAAcr2B,KAAK+gB,yBAAyBH,SAAW0V,EACnDD,EAAc,GAChBr2B,KAAKygB,wBAAwB/P,MAAQ1Q,KAAK+gB,yBAAyBrQ,MAAQ4lB,EAC3Et2B,KAAKygB,wBAAwBG,SAAWyV,GAEjCA,EAAc,IACrBr2B,KAAKygB,wBAAwB/P,MAAS1Q,KAAK+gB,yBAAyBrQ,MAAQ1Q,KAAK+gB,yBAAyBH,SAC1G5gB,KAAKygB,wBAAwBG,UAAYyV,IAGnB,cAAjBr2B,KAAKyyB,WACZ4D,EAAcr2B,KAAK+gB,yBAAyBH,SAAW0V,EACnDD,EAAc,GAChBr2B,KAAKygB,wBAAwB/P,MAAQ1Q,KAAK+gB,yBAAyBrQ,MACnE1Q,KAAKygB,wBAAwBG,SAAWyV,GAEjCA,EAAc,IACrBr2B,KAAKygB,wBAAwB/P,MAAQ1Q,KAAK+gB,yBAAyBrQ,MAAQ2lB,EAC3Er2B,KAAKygB,wBAAwBG,UAAYyV,GAK/C,IAAIE,EACAv2B,MAAKygB,wBAAwB/P,MAAQ,GACvC6lB,EAAYnjB,KAAKojB,MAAMx2B,KAAKygB,wBAAwB/P,MAAQkN,EAAiBjc,oBAC7E3B,KAAKygB,wBAAwB/P,OAAS6lB,EAAY3Y,EAAiBjc,mBACnE3B,KAAKygB,wBAAwB9O,WAAa4kB,GAEnCv2B,KAAKygB,wBAAwB/P,OAASkN,EAAiBjc,qBAC9D40B,EAAYnjB,KAAK8a,MAAMluB,KAAKygB,wBAAwB/P,MAAQkN,EAAiBjc,oBAC7E3B,KAAKygB,wBAAwB/P,OAAS6lB,EAAY3Y,EAAiBjc,mBACnE3B,KAAKygB,wBAAwB9O,WAAa4kB,GAG5C51B,EAAKoF,MAAM,qBAAuBC,KAAKC,UAAUjG,KAAKygB,0BACtD5W,EAAW+C,MAAM,kBAInBulB,6BAA8B,SAAsBxjB,EAAMqjB,GACxD,GAAI4D,GAAqB5D,GAAsBhyB,KAAK41B,mBAChDtV,EAAcsV,EAAmB9U,SAASnS,EAAK2R,aAC/CxI,EAAYnJ,EAAK6N,OAMrB,QAJI8D,EAAYqR,EAAIhjB,EAAKojB,YAAczR,EAAYqR,EAAI7Z,EAAU2e,aAC7DnW,EAAYsR,EAAI,GAAKtR,EAAYsR,EAAI9Z,EAAUoZ,gBACjD5Q,EAAc,MAETA,GAGT0T,qBAAsB,SAAoCV,GACxD,GAAIoD,IAAYC,SAAY32B,KAAK42B,gCACjBC,kBAAmB72B,KAAK82B,sCACxBC,QAAW/2B,KAAKg3B,+BAChBC,QAAW,MACvBC,EAASR,EAAQpD,EACrBtzB,MAAKszB,UAAYA,EACjBtzB,KAAK+1B,wBAA0BmB,GAGjCN,gCAAiC,SAA+BjoB,EAAMqjB,GAEpE,GAAI1R,GAActgB,KAAK82B,sCAAsCnoB,EAAMqjB,EACnE,IAAI1R,EAAa,CACf,GAAIqN,GAAgBhf,EAAKgf,cACrBwJ,EAAgBn3B,KAAKmyB,6BAA6BxjB,EAAMqjB,EAC5DmF,GAAcvF,GAAKjjB,EAAK6N,QAAQ2S,UAEhC7O,EAAYsR,EAAIxe,KAAK8a,OAAOiJ,EAAcvF,EAAIhU,EAAiBhc,2BAA6B+rB,EAC5F,IAAIyJ,GAAOxZ,EAAiBjc,mBAAqB,CAC7C2e,GAAYsR,EAAI,EAClBtR,EAAYsR,EAAI,EACTtR,EAAYsR,EAAIwF,IACvB9W,EAAYsR,EAAIwF,GAGpB,MAAO9W,IAETwW,sCAAuC,SAA8BnoB,EAAMqjB,GAEzE,GAAI1R,GAEA6W,EAAgBn3B,KAAKmyB,6BAA6BxjB,EAAMqjB,EAC5D,IAAImF,EAAe,CACjB7W,EAAc,GAAIgU,EAElB,IAAIxC,GAAWnjB,EAAKmjB,SAChBC,EAAapjB,EAAKojB,UAEtBzR,GAAYqR,EAAIve,KAAK8a,OAAOiJ,EAAcxF,EAAII,GAAcD,EAC5D,IAAIuF,GAAO,EACP5H,EAAO3vB,EAASyB,MAAMkuB,IAC1B,IAAqB,cAAjBzvB,KAAKyyB,SAA0B,CACjC,GAAIhuB,GAAemoB,EAAgBnoB,cAC/BA,KAEF4yB,EAAO5H,EAAOhrB,EAAamS,OAE3B0J,EAAYqR,EAAI0F,EAClB/W,EAAYqR,EAAI0F,EACT/W,EAAYqR,EAAIlC,IACvBnP,EAAYqR,EAAIlC,GAClBnP,EAAYsR,EAAI,MAGhBtR,GAAc,IAGhB,OAAOA,IAET0W,+BAAgC,SAA8BroB,EAAMqjB,GAElE,GAAI1R,GAEA6W,EAAgBn3B,KAAKmyB,6BAA6BxjB,EAAMqjB,EAC5D,IAAImF,EAAe,CACjB7W,EAAc,GAAIgU,EAElB,IAAI7E,GAAO9gB,EAAK8gB,KAEZqC,EAAWnjB,EAAKmjB,SAChBC,EAAapjB,EAAKojB,WAClBF,EAAYljB,EAAKkjB,UACjByF,EAAQlkB,KAAK8a,OAAOiJ,EAAcvF,EAJlB,GAIuCC,EACvDyF,GAAQ,IACVA,EAAQ,GAEVhX,EAAYqR,EAAIve,KAAK8a,OAAOiJ,EAAcxF,EAAII,GAAcD,GACxDxR,EAAYqR,EAAI,EAClBrR,EAAYqR,EAAI,EACTrR,EAAYqR,EAAIlC,IACvBnP,EAAYqR,EAAIlC,GAClBnP,EAAYqR,IAAMlC,EAAO,GAAK6H,EAC9BhX,EAAYsR,EAAI,MAGhBtR,GAAc,IAGhB,OAAOA,IAGT8U,YAAa,WACX,MAAOp1B,MAAK41B,mBAAmBR,YAAYp1B,KAAK21B,sBAGlDO,oBAAqB,SAAmCtnB,EAAMmf,GAC5D,GAAIhD,GAAOiD,CACXjD,GAAQ3X,KAAK8a,MAAMH,EAAW,GAC9BC,EAAWD,EAAW,EAAK,GAC3Bnf,EAAKoN,SAAS+O,EAAOiD,KArlB3B,OACE/C,SAAU,KACVqD,QAAS,iBACT5C,KAAMA,GALV6G,EAAyBjV,SAAW,aAAc,WAAY,OAAQ,cAAe,WAAY,mBAAoB,aA6lBrHrc,QACGO,OAAO,oBACP4pB,UAAU,2BAA4BmH,MC3mB3C,WAEE,YAMA,SAASgF,KAQP,QAAS7L,GAAK3I,EAAO4I,EAAU6L,EAAOC,GACpC,QAASC,KACP,MAAO/L,GAAStpB,KAAK,mBAEvB,QAASs1B,KACP,MAAOF,GAAyB9J,cAIlC,GAAIiK,GAAe7U,EAAM8C,OAAO8R,EAAU,SAAShK,GACjD,GAAIA,EAAe,CACjBiK,IACA7U,EAAM4K,cAAgBA,CAEtB,IAAIkK,GAAe9U,EAAM8C,OAAO6R,EAAU,SAASjmB,GAC7CA,EAAKtF,SACP0rB,IACA9U,EAAMtR,KAAOA,EAEbsR,EAAM+U,mBA1BhB,OACE7M,SAAU,IACVqD,QAAS,yBACT5C,KAAMA,EACNnO,WAAYwa,GAkChB,QAASA,GAAoB3c,EAAQiU,EAAU3uB,GAc7C,QAASs3B,GAAYC,GACnB,GAAIhrB,GAAM,GAAIC,MACVgrB,EAASjrB,EAAI+C,eACb+a,EAAQ9d,EAAI+J,WACZmhB,EAAoC,EAAvB/c,EAAOuS,cACpBK,EAAU/gB,EAAIqG,aACd8kB,EAAehd,EAAOuS,cAAc,GACpCtJ,EAAWpZ,SAAS8f,EAAUoN,EACVnK,EAAUoK,EACV,IAEpBH,GAASC,GAAU9c,EAAO8c,UACxB9c,EAAOid,aACTjd,EAAOid,YAAYhwB,SACrB+S,EAAOid,YAAcC,EAASJ,EAAQ9c,EAAO3J,MAC7C2J,EAAO8c,OAASA,GAGd9c,EAAOid,cAETjd,EAAOid,YAAYpM,IAAI,MAAO5H,EAAW,MAEzCkU,EAAU73B,EAASO,QAAQ0L,KAAK5I,EAAOqX,EAAO0c,YAAa,MAI/D,QAASQ,GAASJ,EAAQzmB,GACxB,GAAI+mB,GAAev3B,QAAQub,QAAQ,gBAcnC,OAZIiR,GAAe0C,cAEb1e,GAAQA,EAAK,GAAG8f,WAAW,UAAU7vB,OAASw2B,GAChD7I,EAAS4F,OAAOuD,GAGlBp2B,EAAE4B,QAAQyN,EAAM,SAASgnB,GACnBA,EAAWlH,WAAW,UAAU7vB,OAASw2B,GAC3Cj3B,QAAQub,QAAQic,GAAYp2B,KAAK,OAAOq2B,GAAG,GAAGzD,OAAOuD,KAIpDA,EAtDT,GAAkBD,GAAdx0B,EAAQ/D,KACRytB,EAAiB4B,EAAS9R,WAAW,uBAEzCnC,GAAO8c,OAAS,KAChB9c,EAAOid,YAAc,KACrBjd,EAAO0c,WAAaE,EAEpB5c,EAAOgC,IAAI,WAAY,WACjBmb,GACF73B,EAAS6L,OAAOgsB,KAXtBR,EAAoBza,SAAW,SAAU,WAAY,YA4DrDrc,QACGO,OAAO,oBACP4pB,UAAU,YAAamM","file":"Scheduler.services.js","sourcesContent":["/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /**\n   * @name Calendar\n   * @constructor\n   * @param {object} futureCalendarData - either an object literal or a promise\n   */\n  function Calendar(futureCalendarData) {\n    // Data is immediately available\n    this.init(futureCalendarData);\n    if (this.name && !this.id) {\n      // Create a new calendar on the server\n      var newCalendarData = Calendar.$$resource.create('createFolder', this.name);\n      this.$unwrap(newCalendarData);\n    }\n  }\n\n  /**\n   * @memberof Calendar\n   * @desc The factory we'll use to register with Angular\n   * @returns the Calendar constructor\n   */\n  Calendar.$factory = ['$q', '$timeout', '$log', 'sgSettings', 'Resource', 'Preferences', 'Component', 'Acl', function($q, $timeout, $log, Settings, Resource, Preferences, Component, Acl) {\n    angular.extend(Calendar, {\n      $q: $q,\n      $timeout: $timeout,\n      $log: $log,\n      $$resource: new Resource(Settings.activeUser('folderURL') + 'Calendar', Settings.activeUser()),\n      $Preferences: Preferences,\n      $Component: Component,\n      $$Acl: Acl,\n      activeUser: Settings.activeUser(),\n      $view: null\n    });\n\n    return Calendar; // return constructor\n  }];\n\n  /**\n   * @module SOGo.SchedulerUI\n   * @desc Factory registration of Calendar in Angular module.\n   */\n  try {\n    angular.module('SOGo.SchedulerUI');\n  }\n  catch(e) {\n    angular.module('SOGo.SchedulerUI', ['SOGo.Common']);\n  }\n  angular.module('SOGo.SchedulerUI')\n    .value('CalendarSettings', {\n      EventDragDayLength:          24 * 4,   // hour quarters\n      EventDragHorizontalOffset:   3,        // pixels\n      ConflictHTTPErrorCode:       409\n    })\n    .factory('Calendar', Calendar.$factory);\n\n  /**\n   * @memberof Calendar\n   * @desc Return the default calendar id according to the user's defaults.\n   * @returns a calendar id\n   */\n  Calendar.$defaultCalendar = function() {\n    var defaultCalendar = Calendar.$Preferences.defaults.SOGoDefaultCalendar,\n        calendar;\n\n    if (defaultCalendar == 'first') {\n      calendar = _.find(Calendar.$findAll(null, true), function(calendar) {\n        return calendar.active;\n      });\n      if (calendar)\n        return calendar.id;\n    }\n\n    return 'personal';\n  };\n\n  /**\n   * @memberof Calendar\n   * @desc Add a new calendar to the static list of calendars\n   * @param {Calendar} calendar - an Calendar object instance\n   */\n  Calendar.$add = function(calendar) {\n    // Insert new calendar at proper index\n    var list, sibling;\n\n    if (calendar.isWebCalendar)\n      list = this.$webcalendars;\n    else if (calendar.isSubscription)\n      list = this.$subscriptions;\n    else\n      list = this.$calendars;\n\n    sibling = _.findIndex(list, function(o, i) {\n      return (calendar.id == 'personal' ||\n              (o.id != 'personal' && o.name.localeCompare(calendar.name) > 0));\n    });\n    if (sibling < 0)\n      list.push(calendar);\n    else\n      list.splice(sibling, 0, calendar);\n\n    this.$Preferences.ready().then(function() {\n      if (Calendar.$Preferences.settings.Calendar.FoldersOrder)\n        // Save list order\n        Calendar.saveFoldersOrder(_.flatMap(Calendar.$findAll(), 'id'));\n    });\n    // Refresh list of calendars to fetch links associated to new calendar\n    Calendar.$reloadAll();\n  };\n\n  /**\n   * @memberof Calendar\n   * @desc Set or get the list of calendars. Will instanciate a new Calendar object for each item.\n   * @param {object[]} [data] - the metadata of the calendars\n   * @param {bool} [writable] - if true, returns only the list of writable calendars\n   * @returns the list of calendars\n   */\n  Calendar.$findAll = function(data, writable) {\n    var _this = this;\n    if (data) {\n      this.$calendars = [];\n      this.$subscriptions = [];\n      this.$webcalendars = [];\n      // Instanciate Calendar objects\n      angular.forEach(data, function(o, i) {\n        var calendar = new Calendar(o);\n        if (calendar.isWebCalendar)\n          _this.$webcalendars.push(calendar);\n        else if (calendar.isSubscription)\n          _this.$subscriptions.push(calendar);\n        else\n          _this.$calendars.push(calendar);\n      });\n    }\n    else if (angular.isUndefined(this.$calendars)) {\n      this.$calendars = [];\n      this.$subscriptions = [];\n      this.$webcalendars = [];\n      return Calendar.$$resource.fetch('calendarslist').then(function(data) {\n        return Calendar.$findAll(data.calendars, writable);\n      });\n    }\n\n    if (writable) {\n      return _.union(this.$calendars, _.filter(this.$subscriptions, function(calendar) {\n        return calendar.isOwned || calendar.acls.objectCreator;\n      }));\n    }\n\n    return _.union(this.$calendars, this.$subscriptions, this.$webcalendars);\n  };\n\n  /**\n   * @memberof Calendar\n   * @desc Reload the list of known calendars.\n   */\n  Calendar.$reloadAll = function() {\n    var _this = this;\n\n    Calendar.$$resource.fetch('calendarslist').then(function(data) {\n      _.forEach(data.calendars, function(calendarData) {\n        var group, calendar;\n\n        if (calendarData.isWebCalendar)\n          group = _this.$webcalendars;\n        else if (calendarData.owner != Calendar.activeUser.login)\n          group = _this.$subscriptions;\n        else\n          group = _this.$calendars;\n\n        calendar = _.find(group, function(o) { return o.id == calendarData.id; });\n        if (calendar)\n          calendar.init(calendarData);\n      });\n    });\n  };\n\n  /**\n   * @memberof Calendar\n   * @desc Find a calendar among local instances (personal calendars, subscriptions and Web calendars).\n   * @param {string} id - the calendar ID\n   * @returns an object literal of the matching Calendar instance\n   */\n  Calendar.$get = function(id) {\n    var calendar;\n\n    calendar = _.find(Calendar.$calendars, function(o) { return o.id == id; });\n    if (!calendar)\n      calendar = _.find(Calendar.$subscriptions, function(o) { return o.id == id; });\n    if (!calendar)\n      calendar = _.find(Calendar.$webcalendars, function(o) { return o.id == id; });\n\n    return calendar;\n  };\n\n  /**\n   * @memberof Calendar\n   * @desc Find a calendar among local instances (personal calendars, subscriptions and Web calendars).\n   * @param {string} id - the calendar ID\n   * @returns an object literal of the matching Calendar instance\n   */\n  Calendar.$getIndex = function(id) {\n    var i;\n\n    i = _.indexOf(_.map(Calendar.$calendars, 'id'), id);\n    if (i < 0)\n      i = _.indexOf(_.map(Calendar.$subscriptions, 'id'), id);\n    if (i < 0)\n      i = _.indexOf(_.map(Calendar.$webcalendars, 'id'), id);\n\n    return i;\n  };\n\n  /**\n   * @memberOf Calendar\n   * @desc Subscribe to another user's calendar and add it to the list of calendars.\n   * @param {string} uid - user id\n   * @param {string} path - path of folder for specified user\n   * @returns a promise of the HTTP query result\n   */\n  Calendar.$subscribe = function(uid, path) {\n    var _this = this;\n    return Calendar.$$resource.userResource(uid).fetch(path, 'subscribe').then(function(calendarData) {\n      var calendar = new Calendar(angular.extend({ active: 1 }, calendarData));\n      if (!_.find(_this.$subscriptions, function(o) {\n        return o.id == calendarData.id;\n      })) {\n        Calendar.$add(calendar);\n      }\n      return calendar;\n    });\n  };\n\n  /**\n   * @memberOf Calendar\n   * @desc Subscribe to a remote Web calendar\n   * @param {string} url - URL of .ics file\n   * @returns a promise of the HTTP query result\n   */\n  Calendar.$addWebCalendar = function(url) {\n    var _this = this,\n        d = Calendar.$q.defer();\n\n    if (_.find(_this.$webcalendars, function(o) {\n        return o.urls.webCalendarURL == url;\n    })) {\n      // Already subscribed\n      d.reject();\n    }\n    else {\n      Calendar.$$resource.post(null, 'addWebCalendar', { url: url }).then(function(calendarData) {\n        angular.extend(calendarData, {\n          isWebCalendar: true,\n          isEditable: true,\n          isRemote: false,\n          owner: Calendar.activeUser.login,\n          urls: { webCalendarURL: url }\n        });\n        var calendar = new Calendar(calendarData);\n        Calendar.$$resource.fetch(calendar.id, 'reload').then(function(data) {\n          // TODO: show a toast of the reload status\n          Calendar.$log.debug(JSON.stringify(data, undefined, 2));\n          Calendar.$add(calendar);\n          d.resolve();\n        }, function(response) {\n          if (response.status == 401) {\n            // Web calendar requires authentication\n            d.resolve(calendar);\n          }\n          else {\n            d.reject();\n          }\n        });\n      }, d.reject);\n    }\n\n    return d.promise;\n  };\n\n  /**\n   * @function reloadWebCalendars\n   * @memberof Calendar\n   * @desc Reload all Web calendars\n   * @return a promise combining the results of all HTTP operations\n   */\n  Calendar.reloadWebCalendars = function() {\n    var promises = [];\n\n    _.forEach(this.$webcalendars, function(calendar) {\n      var promise = Calendar.$$resource.fetch(calendar.id, 'reload');\n      promise.then(function(data) {\n        calendar.$error = false;\n      }, function(response) {\n        calendar.$error = l(response.statusText);\n      });\n      promises.push(promise);\n    });\n\n    return Calendar.$q.all(promises);\n  };\n\n  /**\n   * @function $deleteComponents\n   * @memberof Calendar\n   * @desc Delete multiple components from calendar.\n   * @return a promise of the HTTP operation\n   */\n  Calendar.$deleteComponents = function(components) {\n    var _this = this, calendars = {}, promises = [];\n\n    _.forEach(components, function(component) {\n      if (!angular.isDefined(calendars[component.pid]))\n        calendars[component.pid] = [];\n      calendars[component.pid].push(component.id);\n    });\n\n    _.forEach(calendars, function(uids, pid) {\n      promises.push(Calendar.$$resource.post(pid, 'batchDelete', {uids: uids}));\n    });\n\n    return Calendar.$q.all(promises);\n  };\n\n  /**\n   * @function saveFoldersActivation\n   * @memberof Calendar\n   * @desc Save to the user's settings the activation state of the calendars\n   * @param {string[]} folders - the folders IDs\n   * @returns a promise of the HTTP operation\n   */\n  Calendar.saveFoldersActivation = function(ids) {\n    var request = {};\n\n    _.forEach(ids, function(id) {\n      var calendar = Calendar.$get(id);\n      request[calendar.id] = calendar.active;\n    });\n\n    return Calendar.$$resource.post(null, 'saveFoldersActivation', request);\n  };\n\n  /**\n   * @function saveFoldersOrder\n   * @desc Save to the user's settings the current calendars order.\n   * @param {string[]} folders - the folders IDs\n   * @returns a promise of the HTTP operation\n   */\n  Calendar.saveFoldersOrder = function(folders) {\n    return this.$$resource.post(null, 'saveFoldersOrder', { folders: folders }).then(function() {\n      Calendar.$Preferences.settings.Calendar.FoldersOrder = folders;\n      if (!folders)\n        // Calendars order was reset; reload list\n        return Calendar.$$resource.fetch('calendarslist').then(function(data) {\n          return Calendar.$findAll(data.calendars);\n        });\n    });\n  };\n\n  /**\n   * @function init\n   * @memberof Calendar.prototype\n   * @desc Extend instance with new data and compute additional attributes.\n   * @param {object} data - attributes of calendar\n   */\n  Calendar.prototype.init = function(data) {\n    this.color = this.color || '#AAAAAA';\n    this.active = 1;\n    angular.extend(this, data);\n    if (this.id) {\n      this.$acl = new Calendar.$$Acl('Calendar/' + this.id);\n    }\n    // Add 'isOwned' and 'isSubscription' attributes based on active user (TODO: add it server-side?)\n    this.isOwned = Calendar.activeUser.isSuperUser || this.owner == Calendar.activeUser.login;\n    this.isSubscription = !this.isRemote && this.owner != Calendar.activeUser.login;\n    if (angular.isUndefined(this.$shadowData)) {\n      // Make a copy of the data for an eventual reset\n      this.$shadowData = this.$omit();\n    }\n  };\n\n  /**\n   * @function $id\n   * @memberof Calendar.prototype\n   * @desc Resolve the calendar id.\n   * @returns a promise of the calendar id\n   */\n  Calendar.prototype.$id = function() {\n    if (this.id) {\n      // Object already unwrapped\n      return Calendar.$q.when(this.id);\n    }\n    else {\n      // Wait until object is unwrapped\n      return this.$futureCalendarData.then(function(calendar) {\n        return calendar.id;\n      });\n    }\n  };\n\n  /**\n   * @function getClassName\n   * @memberof Calendar.prototype\n   * @desc Return the calendar CSS class name based on its ID.\n   * @returns a string representing the foreground CSS class name\n   */\n  Calendar.prototype.getClassName = function(base) {\n    if (angular.isUndefined(base))\n      base = 'fg';\n    return base + '-folder' + this.id;\n  };\n\n  /**\n   * @function $rename\n   * @memberof Calendar.prototype\n   * @desc Rename the calendar and keep the list sorted\n   * @param {string} name - the new name\n   * @returns a promise of the HTTP operation\n   */\n  Calendar.prototype.$rename = function() {\n    var _this = this,\n        i,\n        calendars;\n\n    if (this.name == this.$shadowData.name) {\n      // Name hasn't changed\n      return Calendar.$q.when();\n    }\n\n    if (this.isWebCalendar)\n      calendars = Calendar.$webcalendars;\n    else if (this.isSubscription)\n      calendars = Calendar.$subscriptions;\n    else\n      calendars = Calendar.$calendars;\n\n    i = _.indexOf(_.map(calendars, 'id'), this.id);\n    if (i > -1) {\n      return this.$save().then(function() {\n        calendars.splice(i, 1);\n        Calendar.$add(_this);\n      });\n    }\n    else {\n      return Calendar.$q.reject();\n    }\n  };\n\n  /**\n   * @function $delete\n   * @memberof Calendar.prototype\n   * @desc Delete the calendar from the server and the static list of calendars.\n   * @returns a promise of the HTTP operation\n   */\n  Calendar.prototype.$delete = function() {\n    var _this = this,\n        list,\n        promise;\n\n    if (this.isSubscription) {\n      promise = Calendar.$$resource.fetch(this.id, 'unsubscribe');\n      list = Calendar.$subscriptions;\n    }\n    else {\n      promise = Calendar.$$resource.remove(this.id);\n      if (this.isWebCalendar)\n        list = Calendar.$webcalendars;\n      else\n        list = Calendar.$calendars;\n    }\n\n    return promise.then(function() {\n      var i = _.indexOf(_.map(list, 'id'), _this.id);\n      list.splice(i, 1);\n    });\n  };\n\n  /**\n   * @function $reset\n   * @memberof Calendar.prototype\n   * @desc Reset the original state the calendar's data.\n   */\n  Calendar.prototype.$reset = function() {\n    var _this = this;\n    angular.forEach(this, function(value, key) {\n      if (key != 'constructor' && key[0] != '$') {\n        delete _this[key];\n      }\n    });\n    angular.extend(this, this.$shadowData);\n    this.$shadowData = this.$omit();\n  };\n\n  /**\n   * @function $save\n   * @memberof Calendar.prototype\n   * @desc Save the calendar properties to the server.\n   * @returns a promise of the HTTP operation\n   */\n  Calendar.prototype.$save = function() {\n    var _this = this;\n\n    return Calendar.$$resource.save(this.id, this.$omit()).then(function(data) {\n      // Make a copy of the data for an eventual reset\n      _this.$shadowData = _this.$omit();\n      return data;\n    }, function(data) {\n      Calendar.$log.error(JSON.stringify(data, undefined, 2));\n      // Restore previous version\n      _this.$reset();\n      return data;\n    });\n  };\n\n  /**\n   * @function setCredentials\n   * @memberof Calendar.prototype\n   * @desc Set the credentials for a Web calendar that requires authentication\n   * @returns a promise of the HTTP operation\n   */\n  Calendar.prototype.setCredentials = function(username, password) {\n    var _this = this,\n        d = Calendar.$q.defer();\n\n    Calendar.$$resource.post(this.id, 'set-credentials', { username: username, password: password }).then(function() {\n      Calendar.$$resource.fetch(_this.id, 'reload').then(function(data) {\n        Calendar.$add(_this);\n        d.resolve();\n      }, function(response) {\n        if (response.status == 401) {\n          // Authentication failed\n          d.reject(l('Wrong username or password'));\n        }\n        else {\n          d.reject(response.statusText);\n        }\n      });\n    }, d.reject);\n\n    return d.promise;\n  };\n\n  /**\n   * @function export\n   * @memberof Calendar.prototype\n   * @desc Export the calendar\n   * @returns a promise of the HTTP operation\n   */\n  Calendar.prototype.export = function() {\n    var options;\n\n    options = {\n      type: 'application/octet-stream',\n      filename: this.name + '.ics'\n    };\n\n    return Calendar.$$resource.download(this.id + '.ics', 'export', null, options);\n  };\n\n  /**\n   * @function $setActivation\n   * @memberof Calendar.prototype\n   * @desc Either activate or deactivate the calendar.\n   * @returns a promise of the HTTP operation\n   */\n  Calendar.prototype.$setActivation = function() {\n    return Calendar.$$resource.fetch(this.id, (this.active?'':'de') + 'activateFolder');\n  };\n\n  /**\n   * @function $getComponent\n   * @memberof Calendar.prototype\n   * @desc Fetch a component attributes from the server.\n   * @returns a promise of the HTTP operation\n   */\n  Calendar.prototype.$getComponent = function(componentId, recurrenceId) {\n    return Calendar.$Component.$find(this.id, componentId, recurrenceId);\n  };\n\n  /**\n   * @function $unwrap\n   * @memberof Calendar.prototype\n   * @desc Unwrap a promise\n   * @param {promise} futureCalendarData - a promise of the Calendar's data\n   */\n  Calendar.prototype.$unwrap = function(futureCalendarData) {\n    var _this = this;\n\n    // Expose and resolve the promise\n    this.$futureCalendarData = futureCalendarData.then(function(data) {\n      return Calendar.$timeout(function() {\n        // Extend Calendar instance with received data\n        _this.init(data);\n        return _this;\n      });\n    }, function(data) {\n      _this.isError = true;\n      if (angular.isObject(data)) {\n        Calendar.$timeout(function() {\n          angular.extend(_this, data);\n        });\n      }\n    });\n  };\n\n  /**\n   * @function $omit\n   * @memberof Calendar.prototype\n   * @desc Return a sanitized object used to send to the server.\n   * @return an object literal copy of the Calendar instance\n   */\n  Calendar.prototype.$omit = function() {\n    var calendar = {};\n    angular.forEach(this, function(value, key) {\n      if (key != 'constructor' &&\n          key[0] != '$') {\n        calendar[key] = value;\n      }\n    });\n    return calendar;\n  };\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /**\n   * @name Component\n   * @constructor\n   * @param {object} futureComponentData - either an object literal or a promise\n   */\n  function Component(futureComponentData) {\n    // Data is immediately available\n    if (typeof futureComponentData.then !== 'function') {\n      this.init(futureComponentData);\n      if (this.pid && !this.id) {\n        // Prepare for the creation of a new component;\n        // Get UID from the server.\n        var newComponentData = Component.$$resource.newguid(this.pid);\n        this.$unwrap(newComponentData);\n        this.isNew = true;\n      }\n    }\n    else {\n      // The promise will be unwrapped first\n      this.$unwrap(futureComponentData);\n    }\n  }\n\n  /**\n   * @memberof Component\n   * @desc The factory we'll use to register with Angular\n   * @returns the Component constructor\n   */\n  Component.$factory = ['$q', '$timeout', '$log', '$rootScope', 'sgSettings', 'sgComponent_STATUS', 'Preferences', 'Card', 'Gravatar', 'Resource', function($q, $timeout, $log, $rootScope, Settings, Component_STATUS, Preferences, Card, Gravatar, Resource) {\n    angular.extend(Component, {\n      STATUS: Component_STATUS,\n      $q: $q,\n      $timeout: $timeout,\n      $log: $log,\n      $rootScope: $rootScope,\n      $Preferences: Preferences,\n      $Card: Card,\n      $gravatar: Gravatar,\n      $$resource: new Resource(Settings.activeUser('folderURL') + 'Calendar', Settings.activeUser()),\n      timeFormat: \"%H:%M\",\n      // Filter parameters common to events and tasks\n      $query: { value: '', search: 'title_Category_Location' },\n      // Filter paramaters specific to events\n      $queryEvents: { sort: 'start', asc: 1, filterpopup: 'view_next7' },\n      // Filter parameters specific to tasks\n      $queryTasks: { sort: 'status', asc: 1, filterpopup: 'view_incomplete' },\n      $refreshTimeout: null,\n      $ghost: {}\n    });\n    Preferences.ready().then(function() {\n      // Initialize filter parameters from user's settings\n      if (Preferences.settings.Calendar.EventsFilterState)\n        Component.$queryEvents.filterpopup = Preferences.settings.Calendar.EventsFilterState;\n      if (Preferences.settings.Calendar.TasksFilterState)\n        Component.$queryTasks.filterpopup = Preferences.settings.Calendar.TasksFilterState;\n      if (Preferences.settings.Calendar.EventsSortingState) {\n        Component.$queryEvents.sort = Preferences.settings.Calendar.EventsSortingState[0];\n        Component.$queryEvents.asc = parseInt(Preferences.settings.Calendar.EventsSortingState[1]);\n      }\n      if (Preferences.settings.Calendar.TasksSortingState) {\n        Component.$queryTasks.sort = Preferences.settings.Calendar.TasksSortingState[0];\n        Component.$queryTasks.asc = parseInt(Preferences.settings.Calendar.TasksSortingState[1]);\n      }\n      Component.$queryTasks.show_completed = parseInt(Preferences.settings.ShowCompletedTasks);\n      // Initialize categories from user's defaults\n      Component.$categories = Preferences.defaults.SOGoCalendarCategoriesColors;\n      // Initialize time format from user's defaults\n      if (Preferences.defaults.SOGoTimeFormat) {\n        Component.timeFormat = Preferences.defaults.SOGoTimeFormat;\n      }\n    });\n\n    return Component; // return constructor\n  }];\n\n  /**\n   * @module SOGo.SchedulerUI\n   * @desc Factory registration of Component in Angular module.\n   */\n  try {\n    angular.module('SOGo.SchedulerUI');\n  }\n  catch(e) {\n    angular.module('SOGo.SchedulerUI', ['SOGo.Common']);\n  }\n  angular.module('SOGo.SchedulerUI')\n    .constant('sgComponent_STATUS', {\n      NOT_LOADED:      0,\n      DELAYED_LOADING: 1,\n      LOADING:         2,\n      LOADED:          3,\n      DELAYED_MS:      300\n    })\n    .factory('Component', Component.$factory);\n\n  /**\n   * @function $selectedCount\n   * @memberof Component\n   * @desc Return the number of events or tasks selected by the user.\n   * @returns the number of selected events or tasks\n   */\n  Component.$selectedCount = function() {\n    var count;\n\n    count = 0;\n    if (Component.$events) {\n      count += (_.filter(Component.$events, function(event) { return event.selected; })).length;\n    }\n    if (Component.$tasks) {\n      count += (_.filter(Component.$tasks, function(task) { return task.selected; })).length;\n    }\n    return count;\n  };\n\n  /**\n   * @function $startRefreshTimeout\n   * @memberof Component\n   * @desc Starts the refresh timeout for the current selected list (events or tasks) and\n   * current view.\n   */\n  Component.$startRefreshTimeout = function(type) {\n    var _this = this;\n\n    if (Component.$refreshTimeout)\n      Component.$timeout.cancel(Component.$refreshTimeout);\n\n    Component.$Preferences.ready().then(function() {\n      // Restart the refresh timer, if needed\n      var refreshViewCheck = Component.$Preferences.defaults.SOGoRefreshViewCheck;\n      if (refreshViewCheck && refreshViewCheck != 'manually') {\n        var f = angular.bind(Component.$rootScope, Component.$rootScope.$emit, 'calendars:list');\n        Component.$refreshTimeout = Component.$timeout(f, refreshViewCheck.timeInterval()*1000);\n      }\n    });\n  };\n\n  /**\n   * @function $isLoading\n   * @memberof Component\n   * @returns true if the components list is still being retrieved from server after a specific delay\n   * @see sgMessage_STATUS\n   */\n  Component.$isLoading = function() {\n    return Component.$loaded == Component.STATUS.LOADING;\n  };\n\n  /**\n   * @function $filter\n   * @memberof Component\n   * @desc Search for components matching some criterias\n   * @param {string} type - either 'events' or 'tasks'\n   * @param {object} [options] - additional options to the query\n   * @returns a collection of Components instances\n   */\n  Component.$filter = function(type, options) {\n    var _this = this,\n        now = new Date(),\n        day = now.getDate(),\n        month = now.getMonth() + 1,\n        year = now.getFullYear(),\n        queryKey = '$query' + type.capitalize(),\n        params = {\n          day: '' + year + (month < 10?'0':'') + month + (day < 10?'0':'') + day,\n        };\n\n    Component.$startRefreshTimeout(type);\n\n    return this.$Preferences.ready().then(function() {\n      var futureComponentData,\n          dirty = false,\n          otherType;\n\n      angular.extend(_this.$query, params);\n\n      if (options) {\n        _.forEach(_.keys(options), function(key) {\n          // Query parameters common to events and tasks are compared\n          dirty |= (_this.$query[key] && options[key] != Component.$query[key]);\n          if (key == 'reload' && options[key])\n            dirty = true;\n          // Update either the common parameters or the type-specific parameters\n          else if (angular.isDefined(_this.$query[key]))\n            _this.$query[key] = options[key];\n          else\n            _this[queryKey][key] = options[key];\n        });\n      }\n\n      // Perform query with both common and type-specific parameters\n      futureComponentData = _this.$$resource.fetch(null, type + 'list',\n                                                   angular.extend(_this[queryKey], _this.$query));\n\n      // Invalidate cached results of other type if $query has changed\n      if (dirty) {\n        otherType = (type == 'tasks')? '$events' : '$tasks';\n        delete Component[otherType];\n        Component.$log.debug('force reload of ' + otherType);\n      }\n\n      return _this.$unwrapCollection(type, futureComponentData);\n    });\n  };\n\n  /**\n   * @function $find\n   * @desc Fetch a component from a specific calendar.\n   * @param {string} calendarId - the calendar ID\n   * @param {string} componentId - the component ID\n   * @param {string} [occurrenceId] - the component ID\n   * @see {@link Calendar.$getComponent}\n   */\n  Component.$find = function(calendarId, componentId, occurrenceId) {\n    var futureComponentData, path = [calendarId, componentId];\n\n    if (occurrenceId)\n      path.push(occurrenceId);\n\n    futureComponentData = this.$$resource.fetch(path.join('/'), 'view');\n\n    return new Component(futureComponentData);\n  };\n\n  /**\n   * @function filterCategories\n   * @desc Search for categories matching some criterias\n   * @param {string} search - the search string to match\n   * @returns a collection of strings\n   */\n  Component.filterCategories = function(query) {\n    var re = new RegExp(query, 'i');\n    return _.filter(_.keys(Component.$categories), function(category) {\n      return category.search(re) != -1;\n    });\n  };\n\n  /**\n   * @function saveSelectedList\n   * @desc Save to the user's settings the currently selected list.\n   * @param {string} componentType - either \"events\" or \"tasks\"\n   * @returns a promise of the HTTP operation\n   */\n  Component.saveSelectedList = function(componentType) {\n    return this.$$resource.post(null, 'saveSelectedList', { list: componentType + 'ListView' });\n  };\n\n  /**\n   * @function $eventsBlocksForView\n   * @desc Events blocks for a specific week\n   * @param {string} view - Either 'day' or 'week'\n   * @param {Date} type - Date of any day of the desired period\n   * @returns a promise of a collection of objects describing the events blocks\n   */\n  Component.$eventsBlocksForView = function(view, date) {\n    var _this = this;\n\n    return Component.$Preferences.ready().then(function(data) {\n      var firstDayOfWeek, viewAction, startDate, endDate, params;\n      firstDayOfWeek = Component.$Preferences.defaults.SOGoFirstDayOfWeek;\n\n      if (view == 'day') {\n        viewAction = 'dayView';\n        startDate = endDate = date;\n      }\n      else if (view == 'multicolumnday') {\n        viewAction = 'multicolumndayView';\n        startDate = endDate = date;\n      }\n      else if (view == 'week') {\n        viewAction = 'weekView';\n        startDate = date.beginOfWeek(firstDayOfWeek);\n        endDate = new Date();\n        endDate.setTime(startDate.getTime());\n        endDate.addDays(6);\n      }\n      else if (view == 'month') {\n        viewAction = 'monthView';\n        startDate = date;\n        startDate.setDate(1);\n        startDate = startDate.beginOfWeek(firstDayOfWeek);\n        endDate = new Date();\n        endDate.setTime(date.getTime());\n        endDate.setMonth(endDate.getMonth() + 1);\n        endDate.addDays(-1);\n        endDate = endDate.endOfWeek(firstDayOfWeek);\n      }\n      return _this.$eventsBlocks(viewAction, startDate, endDate);\n    });\n  };\n\n  /**\n   * @function $eventsBlocks\n   * @desc Events blocks for a specific view and period\n   * @param {string} view - Either 'day', 'multicolumnday', 'week' or 'month'\n   * @param {Date} startDate - period's start date\n   * @param {Date} endDate - period's end date\n   * @returns a promise of a collection of objects describing the events blocks\n   */\n  Component.$eventsBlocks = function(view, startDate, endDate) {\n    var params, futureComponentData, i, j, dayDates = [], dayNumbers = [],\n        deferred = Component.$q.defer();\n\n    params = { view: view.toLowerCase(), sd: startDate.getDayString(), ed: endDate.getDayString() };\n    futureComponentData = this.$$resource.fetch(null, 'eventsblocks', params);\n    futureComponentData.then(function(views) {\n      var reduceComponent, associateComponent;\n\n      reduceComponent = function(objects, eventData, i) {\n        var componentData = _.zipObject(this.eventsFields, eventData),\n            start = new Date(componentData.c_startdate * 1000),\n            component;\n        componentData.hour = start.getHourString();\n        componentData.blocks = [];\n        component = new Component(componentData);\n        objects.push(component);\n        return objects;\n      };\n\n      associateComponent = function(block) {\n        this[block.nbr].blocks.push(block); // Associate block to component\n        block.component = this[block.nbr];  // Associate component to block\n        block.isFirst = (this[block.nbr].blocks.length == 1);\n      };\n\n      Component.$views = [];\n      Component.$timeout(function() {\n        _.forEach(views, function(data, viewIndex) {\n          var components = [], blocks = {}, allDayBlocks = {}, viewData;\n\n          // Change some attributes names\n          data.eventsFields.splice(_.indexOf(data.eventsFields, 'c_folder'),        1, 'pid');\n          data.eventsFields.splice(_.indexOf(data.eventsFields, 'c_name'),          1, 'id');\n          data.eventsFields.splice(_.indexOf(data.eventsFields, 'c_recurrence_id'), 1, 'occurrenceId');\n          data.eventsFields.splice(_.indexOf(data.eventsFields, 'c_title'),         1, 'summary');\n\n          // Instantiate Component objects\n          _.reduce(data.events, _.bind(reduceComponent, data), components);\n\n          // Associate Component objects to blocks positions\n          _.forEach(_.flatten(data.blocks), _.bind(associateComponent, components));\n\n          // Associate Component objects to all-day blocks positions\n          _.forEach(_.flatten(data.allDayBlocks), _.bind(associateComponent, components));\n\n          // Build array of dates\n          if (dayDates.length === 0) {\n            dayDates = _.flatMap(data.days, 'date');\n            dayNumbers = _.flatMap(data.days, 'number');\n          }\n\n          // Convert array of blocks to an object literal with date strings as keys\n          for (i = 0; i < data.blocks.length; i++) {\n            for (j = 0; j < data.blocks[i].length; j++) {\n              data.blocks[i][j].dayIndex = i + (viewIndex * data.blocks.length);\n              data.blocks[i][j].dayNumber = dayNumbers[i];\n            }\n            blocks[dayDates[i]] = data.blocks[i];\n          }\n\n          // Convert array of all-day blocks to object with days as keys\n          for (i = 0; i < data.allDayBlocks.length; i++) {\n            for (j = 0; j < data.allDayBlocks[i].length; j++) {\n              data.allDayBlocks[i][j].dayIndex = i + (viewIndex * data.allDayBlocks.length);\n              data.allDayBlocks[i][j].dayNumber = dayNumbers[i];\n            }\n            allDayBlocks[dayDates[i]] = data.allDayBlocks[i];\n          }\n\n          // \"blocks\" is now an object literal with the following structure:\n          // { day: [\n          //    { start: number,\n          //      length: number,\n          //      siblings: number,\n          //      realSiblings: number,\n          //      position: number,\n          //      nbr: number,\n          //      component: Component },\n          //    .. ],\n          //  .. }\n          //\n          // Where day is a string with format YYYYMMDD\n\n          Component.$log.debug('blocks ready (' + _.flatten(data.blocks).length + ')');\n          Component.$log.debug('all day blocks ready (' + _.flatten(data.allDayBlocks).length + ')');\n\n          // Save the blocks to the object model\n          viewData = { blocks: blocks, allDayBlocks: allDayBlocks };\n          if (data.id && data.calendarName) {\n            // The multicolumnday view also includes calendar information\n            viewData.id = data.id;\n            viewData.calendarName = data.calendarName;\n          }\n          Component.$views.push(viewData);\n        });\n\n        deferred.resolve(Component.$views);\n      });\n    }, deferred.reject);\n\n    return deferred.promise;\n  };\n\n  /**\n   * @function $unwrapCollection\n   * @desc Unwrap a promise and instanciate new Component objects using received data.\n   * @param {string} type - either 'events' or 'tasks'\n   * @param {promise} futureComponentData - a promise of the components' metadata\n   * @returns a promise of the HTTP operation\n   */\n  Component.$unwrapCollection = function(type, futureComponentData) {\n    var _this = this,\n        components = [];\n\n    // Components list is not loaded yet\n    Component.$loaded = Component.STATUS.DELAYED_LOADING;\n    Component.$timeout(function() {\n      if (Component.$loaded != Component.STATUS.LOADED)\n        Component.$loaded = Component.STATUS.LOADING;\n    }, Component.STATUS.DELAYED_MS);\n\n    return futureComponentData.then(function(data) {\n      return Component.$timeout(function() {\n        var fields = _.invokeMap(data.fields, 'toLowerCase');\n          fields.splice(_.indexOf(fields, 'c_folder'), 1, 'pid');\n          fields.splice(_.indexOf(fields, 'c_name'), 1, 'id');\n          fields.splice(_.indexOf(fields, 'c_recurrence_id'), 1, 'occurrenceId');\n\n        // Instanciate Component objects\n        _.reduce(data[type], function(components, componentData, i) {\n          var data = _.zipObject(fields, componentData), component;\n          component = new Component(data);\n          components.push(component);\n          return components;\n        }, components);\n\n        Component.$log.debug('list of ' + type + ' ready (' + components.length + ')');\n\n        // Save the list of components to the object model\n        Component['$' + type] = components;\n\n        Component.$loaded = Component.STATUS.LOADED;\n\n        return components;\n      });\n    });\n  };\n\n  /**\n   * @function $resetGhost\n   * @desc Prepare the ghost object for the next drag by resetting appropriate attributes\n   */\n  Component.$resetGhost = function() {\n    this.$ghost.pointerHandler = null;\n    this.$ghost.component = null;\n    this.$ghost.startHour = null;\n    this.$ghost.endHour = null;\n  };\n\n  /**\n   * @function $parseDate\n   * @desc Parse a date string with format YYYY-MM-DDTHH:MM\n   * @param {string} dateString - the string representing the date\n   * @param {object} [options] - additional options (use {no_time: true} to ignore the time)\n   * @returns a date object\n   */\n  Component.$parseDate = function(dateString, options) {\n    var date, time;\n\n    date = dateString.substring(0,10).split('-');\n\n    if (options && options.no_time)\n      return new Date(parseInt(date[0]), parseInt(date[1]) - 1, parseInt(date[2]));\n\n    time = dateString.substring(11,16).split(':');\n\n    return new Date(parseInt(date[0]), parseInt(date[1]) - 1, parseInt(date[2]),\n                    parseInt(time[0]), parseInt(time[1]), 0, 0);\n    };\n\n  /**\n   * @function init\n   * @memberof Component.prototype\n   * @desc Extend instance with required attributes and new data.\n   * @param {object} data - attributes of component\n   */\n  Component.prototype.init = function(data) {\n    var _this = this;\n\n    this.categories = [];\n    this.repeat = {};\n    this.alarm = { action: 'display', quantity: 5, unit: 'MINUTES', reference: 'BEFORE', relation: 'START' };\n    this.status = 'not-specified';\n    this.delta = 60;\n    angular.extend(this, data);\n\n    if (this.component == 'vevent')\n      this.type = 'appointment';\n    else if (this.component == 'vtodo')\n      this.type = 'task';\n\n    if (this.startDate) {\n      if (angular.isString(this.startDate))\n        // Ex: 2015-10-25T22:34:51+00:00\n        this.start = Component.$parseDate(this.startDate);\n      else\n        // Date object\n        this.start = this.startDate;\n    }\n    else if (this.type == 'appointment') {\n      this.start = new Date();\n      this.start.setMinutes(Math.round(this.start.getMinutes()/15)*15);\n    }\n\n    if (this.endDate) {\n      this.end = Component.$parseDate(this.endDate);\n      this.delta = this.start.minutesTo(this.end);\n    }\n    else if (this.type == 'appointment') {\n      this.setDelta(this.delta);\n    }\n\n    if (this.dueDate)\n      this.due = Component.$parseDate(this.dueDate);\n\n    if (this.completedDate)\n      this.completed = Component.$parseDate(this.completedDate);\n    else if (this.type == 'task')\n      this.completed = new Date();\n\n    if (this.c_category) {\n      // c_category is only defined in list mode (when calling $filter)\n      Component.$Preferences.ready().then(function() {\n        // Filter out categories for which there's no associated color\n        _this.categories = _.invokeMap(_.filter(_this.c_category, function(name) {\n          return Component.$Preferences.defaults.SOGoCalendarCategoriesColors[name];\n        }), 'asCSSIdentifier');\n      });\n    }\n\n    // Parse recurrence rule definition and initialize default values\n    this.$isRecurrent = angular.isDefined(data.repeat);\n    if (this.repeat.days) {\n      var byDayMask = _.find(this.repeat.days, function(o) {\n        return angular.isDefined(o.occurrence);\n      });\n      if (byDayMask) {\n        if (this.repeat.frequency == 'yearly')\n          this.repeat.year = { byday: true };\n        this.repeat.month = {\n          type: 'byday',\n          occurrence: byDayMask.occurrence.toString(),\n          day: byDayMask.day\n        };\n      }\n    }\n    else {\n      this.repeat.days = [];\n    }\n    if (angular.isUndefined(this.repeat.frequency))\n      this.repeat.frequency = 'never';\n    if (angular.isUndefined(this.repeat.interval))\n      this.repeat.interval = 1;\n    if (angular.isUndefined(this.repeat.monthdays))\n      // TODO: initialize this.repeat.monthdays with month day of start date\n      this.repeat.monthdays = [];\n    else if (this.repeat.monthdays.length > 0)\n      this.repeat.month = { type: 'bymonthday' };\n    if (angular.isUndefined(this.repeat.month))\n      this.repeat.month = {};\n    if (angular.isUndefined(this.repeat.month.occurrence))\n      angular.extend(this.repeat.month, { occurrence: '1', day: 'SU' });\n    if (angular.isUndefined(this.repeat.months))\n      // TODO: initialize this.repeat.months with month of start date\n      this.repeat.months = [];\n    if (angular.isUndefined(this.repeat.year))\n      this.repeat.year = {};\n    if (this.repeat.count)\n      this.repeat.end = 'count';\n    else if (this.repeat.until) {\n      this.repeat.end = 'until';\n      if (angular.isString(this.repeat.until))\n        this.repeat.until = Component.$parseDate(this.repeat.until, { no_time: true });\n    }\n    else\n      this.repeat.end = 'never';\n    this.$hasCustomRepeat = this.hasCustomRepeat();\n\n    if (this.isNew) {\n      // Set default values\n      Component.$Preferences.ready().then(function() {\n        var type = (_this.type == 'appointment')? 'Events' : 'Tasks';\n\n        // Set default classification\n        _this.classification = Component.$Preferences.defaults['SOGoCalendar' + type + 'DefaultClassification'].toLowerCase();\n\n        // Set default alarm\n        var units = { M: 'MINUTES', H: 'HOURS', D: 'DAYS', W: 'WEEKS' };\n        var match = /-PT?([0-9]+)([MHDW])/.exec(Component.$Preferences.defaults.SOGoCalendarDefaultReminder);\n        if (match) {\n          _this.$hasAlarm = true;\n          _this.alarm.quantity = parseInt(match[1]);\n          _this.alarm.unit = units[match[2]];\n        }\n\n        // Set notitifications\n        _this.sendAppointmentNotifications = Component.$Preferences.defaults.SOGoAppointmentSendEMailNotifications;\n      });\n    }\n    else if (angular.isUndefined(data.$hasAlarm)) {\n      this.$hasAlarm = angular.isDefined(data.alarm);\n    }\n\n    // Allow the component to be moved to a different calendar\n    this.destinationCalendar = this.pid;\n\n    // if (this.organizer && this.organizer.email) {\n    //   this.organizer.$image = Component.$gravatar(this.organizer.email, 32);\n    // }\n\n    if (this.attendees) {\n      _.forEach(this.attendees, function(attendee) {\n        attendee.image = Component.$gravatar(attendee.email, 32);\n      });\n    }\n\n    // Load freebusy of attendees\n    this.updateFreeBusy();\n\n    this.selected = false;\n  };\n\n  /**\n   * @function hasCustomRepeat\n   * @memberof Component.prototype\n   * @desc Check if the component has a custom recurrence rule.\n   * @returns true if the recurrence rule requires the full recurrence editor\n   */\n  Component.prototype.hasCustomRepeat = function() {\n    var b = angular.isDefined(this.repeat) &&\n        (this.repeat.interval > 1 ||\n         angular.isDefined(this.repeat.days) && this.repeat.days.length > 0 ||\n         angular.isDefined(this.repeat.monthdays) && this.repeat.monthdays.length > 0 ||\n         angular.isDefined(this.repeat.months) && this.repeat.months.length > 0 ||\n         angular.isDefined(this.repeat.month) && angular.isDefined(this.repeat.month.type));\n    return b;\n  };\n\n  /**\n   * @function isEditable\n   * @memberof Component.prototype\n   * @desc Check if the component is editable and not an occurrence of a recurrent component\n   * @returns true or false\n   */\n  Component.prototype.isEditable = function() {\n    return (!this.occurrenceId && !this.isReadOnly);\n  };\n\n  /**\n   * @function isEditableOccurrence\n   * @memberof Component.prototype\n   * @desc Check if the component is editable and an occurrence of a recurrent component\n   * @returns true or false\n   */\n  Component.prototype.isEditableOccurrence = function() {\n    return (this.occurrenceId && !this.isReadOnly);\n  };\n\n  /**\n   * @function isInvitation\n   * @memberof Component.prototype\n   * @desc Check if the component an invitation and not an occurrence of a recurrent component\n   * @returns true or false\n   */\n  Component.prototype.isInvitation = function() {\n    return (!this.occurrenceId && this.userHasRSVP);\n  };\n\n  /**\n   * @function isInvitationOccurrence\n   * @memberof Component.prototype\n   * @desc Check if the component an invitation and an occurrence of a recurrent component\n   * @returns true or false\n   */\n  Component.prototype.isInvitationOccurrence = function() {\n    return (this.occurrenceId && this.userHasRSVP);\n  };\n\n  /**\n   * @function isReadOnly\n   * @memberof Component.prototype\n   * @desc Check if the component is not editable and not an invitation\n   * @returns true or false\n   */\n  Component.prototype.isReadOnly = function() {\n    return (this.isReadOnly && !this.userHasRSVP);\n  };\n\n  /**\n   * @function enablePercentComplete\n   * @memberof Component.prototype\n   * @desc Check if the percent completion should be enabled with respect to the\n   *       component's type and status.\n   * @returns true if the percent completion should be displayed\n   */\n  Component.prototype.enablePercentComplete = function() {\n    return (this.type == 'task' &&\n            this.status != 'not-specified' &&\n            this.status != 'cancelled');\n  };\n\n  /**\n   * @function coversFreeBusy\n   * @memberof Component.prototype\n   * @desc Check if a specific quarter matches the component's period\n   * @returns true if the quarter covers the component's period\n   */\n  Component.prototype.coversFreeBusy = function(day, hour, quarter) {\n    var b = (angular.isDefined(this.freebusy[day]) &&\n             angular.isDefined(this.freebusy[day][hour]) &&\n             this.freebusy[day][hour][quarter] == 1);\n    return b;\n  };\n\n  /**\n   * @function updateFreeBusyCoverage\n   * @memberof Component.prototype\n   * @desc Build a 15-minute-based representation of the component's period.\n   * @returns an object literal hashed by days and hours and arrays of four 1's and 0's\n   */\n  Component.prototype.updateFreeBusyCoverage = function() {\n    var _this = this, freebusy = {};\n\n    if (this.start && this.end) {\n      var roundedStart = new Date(this.start.getTime()),\n          roundedEnd = new Date(this.end.getTime()),\n          startQuarter = parseInt(roundedStart.getMinutes()/15 + 0.5),\n          endQuarter = parseInt(roundedEnd.getMinutes()/15 + 0.5);\n      roundedStart.setMinutes(15*startQuarter);\n      roundedEnd.setMinutes(15*endQuarter);\n\n      _.forEach(roundedStart.daysUpTo(roundedEnd), function(date, index) {\n        var currentDay = date.getDate(),\n            dayKey = date.getDayString(),\n            hourKey;\n        if (dayKey == _this.start.getDayString()) {\n          hourKey = date.getHours().toString();\n          freebusy[dayKey] = {};\n          freebusy[dayKey][hourKey] = [];\n          while (startQuarter > 0) {\n            freebusy[dayKey][hourKey].push(0);\n            startQuarter--;\n          }\n        }\n        else {\n          date = date.beginOfDay();\n          freebusy[dayKey] = {};\n        }\n        while (date.getTime() < _this.end.getTime() &&\n               date.getDate() == currentDay) {\n          hourKey = date.getHours().toString();\n          if (angular.isUndefined(freebusy[dayKey][hourKey]))\n            freebusy[dayKey][hourKey] = [];\n          freebusy[dayKey][hourKey].push(1);\n          date.addMinutes(15);\n        }\n      });\n      return freebusy;\n    }\n  };\n\n  /**\n   * @function updateFreeBusy\n   * @memberof Component.prototype\n   * @desc Update the freebusy coverage representation and the attendees freebusy information\n   */\n  Component.prototype.updateFreeBusy = function() {\n    var _this = this;\n\n    this.freebusy = this.updateFreeBusyCoverage();\n\n    if (this.attendees) {\n      _.forEach(this.attendees, function(attendee) {\n        _this.updateFreeBusyAttendee(attendee);\n      });\n    }\n  };\n\n  /**\n   * @function setDelta\n   * @memberof Component.prototype\n   * @desc Set the end time to the specified number of minutes after the start time.\n   * @param {number} delta - the number of minutes\n   */\n  Component.prototype.setDelta = function(delta) {\n    this.delta = delta;\n    this.end = new Date(this.start.getTime());\n    this.end.setMinutes(Math.round(this.end.getMinutes()/15)*15);\n    this.end.addMinutes(this.delta);\n  };\n\n  /**\n   * @function updateFreeBusyAttendee\n   * @memberof Component.prototype\n   * @desc Update the freebusy information for the component's period for a specific attendee.\n   * @param {Object} card - an Card object instance of the attendee\n   */\n  Component.prototype.updateFreeBusyAttendee = function(attendee) {\n    var resource, uid, params, days;\n\n    if (attendee.uid) {\n      uid = attendee.uid;\n      if (attendee.domain)\n        uid += '@' + attendee.domain;\n      params =\n        {\n          sday: this.start.getDayString(),\n          eday: this.end.getDayString()\n        };\n\n      if (attendee.isMSExchange) {\n        // Attendee is not a local user, but her freebusy data is available from an external MS Exchange server;\n        // we query /SOGo/so/<login_user>/freebusy.ifb/ajaxRead?uid=<uid>\n        resource = Component.$$resource.userResource();\n        params.uid = uid;\n      }\n      else {\n        // Attendee is a user;\n        // web query /SOGo/so/<uid>/freebusy.ifb/ajaxRead\n        resource = Component.$$resource.userResource(uid);\n      }\n\n      days = _.map(this.start.daysUpTo(this.end), function(day) { return day.getDayString(); });\n\n      if (angular.isUndefined(attendee.freebusy))\n        attendee.freebusy = {};\n\n      // Fetch FreeBusy information\n      resource.fetch('freebusy.ifb', 'ajaxRead', params).then(function(data) {\n        _.forEach(days, function(day) {\n          var hour;\n\n          if (angular.isUndefined(attendee.freebusy[day]))\n            attendee.freebusy[day] = {};\n\n          if (angular.isUndefined(data[day]))\n            data[day] = {};\n\n          for (var i = 0; i <= 23; i++) {\n            hour = i.toString();\n            if (data[day][hour])\n              attendee.freebusy[day][hour] = [\n                data[day][hour][\"0\"],\n                data[day][hour][\"15\"],\n                data[day][hour][\"30\"],\n                data[day][hour][\"45\"]\n              ];\n            else\n              attendee.freebusy[day][hour] = [0, 0, 0, 0];\n          }\n        });\n      });\n    }\n  };\n\n  /**\n   * @function getClassName\n   * @memberof Component.prototype\n   * @desc Return the component CSS class name based on its container (calendar) ID.\n   * @param {string} [base] - the prefix to add to the class name (defaults to \"fg\")\n   * @returns a string representing the foreground CSS class name\n   */\n  Component.prototype.getClassName = function(base) {\n    if (angular.isUndefined(base))\n      base = 'fg';\n    return base + '-folder' + (this.destinationCalendar || this.c_folder || this.pid);\n  };\n\n  /**\n   * @function addAttendee\n   * @memberof Component.prototype\n   * @desc Add an attendee and fetch his freebusy info.\n   * @param {Object} card - an Card object instance to be added to the attendees list\n   */\n  Component.prototype.addAttendee = function(card) {\n    var _this = this, attendee, list, url, params;\n    if (card) {\n      if (card.$isList({expandable: true})) {\n        // Decompose list members\n        list = Component.$Card.$find(card.container, card.c_name);\n        list.$id().then(function(listId) {\n          _.forEach(list.refs, function(ref) {\n            attendee = {\n              name: ref.c_cn,\n              email: ref.$preferredEmail(),\n              role: 'req-participant',\n              partstat: 'needs-action',\n              uid: ref.c_uid,\n              $avatarIcon: 'person',\n            };\n            if (!_.find(_this.attendees, function(o) {\n              return o.email == attendee.email;\n            })) {\n              // Contact is not already an attendee, add it\n              attendee.image = Component.$gravatar(attendee.email, 32);\n              if (_this.attendees)\n                _this.attendees.push(attendee);\n              else\n                _this.attendees = [attendee];\n              _this.updateFreeBusyAttendee(attendee);\n            }\n          });\n        });\n      }\n      else {\n        // Single contact\n        attendee = {\n          uid: card.c_uid,\n          domain: card.c_domain,\n          isMSExchange: card.ismsexchange,\n          name: card.c_cn,\n          email: card.$preferredEmail(),\n          role: 'req-participant',\n          partstat: 'needs-action',\n          $avatarIcon: card.$avatarIcon\n        };\n        if (!_.find(this.attendees, function(o) {\n          return o.email == attendee.email;\n        })) {\n          attendee.image = Component.$gravatar(attendee.email, 32);\n          if (this.attendees)\n            this.attendees.push(attendee);\n          else\n            this.attendees = [attendee];\n          this.updateFreeBusyAttendee(attendee);\n        }\n      }\n    }\n  };\n\n  /**\n   * @function hasAttendee\n   * @memberof Component.prototype\n   * @desc Verify if one of the email addresses of a Card instance matches an attendee.\n   * @param {Object} card - an Card object instance\n   * @returns true if the Card matches an attendee\n   */\n  Component.prototype.hasAttendee = function(card) {\n    var attendee = _.find(this.attendees, function(attendee) {\n      return _.find(card.emails, function(email) {\n        return email.value == attendee.email;\n      });\n    });\n    return angular.isDefined(attendee);\n  };\n\n  /**\n   * @function deleteAttendee\n   * @memberof Component.prototype\n   * @desc Remove an attendee from the component\n   * @param {Object} attendee - an object literal defining an attendee\n   */\n  Component.prototype.deleteAttendee = function(attendee) {\n    var index = _.findIndex(this.attendees, function(currentAttendee) {\n      return currentAttendee.email == attendee.email;\n    });\n    this.attendees.splice(index, 1);\n  };\n\n  /**\n   * @function canRemindAttendeesByEmail\n   * @memberof Component.prototype\n   * @desc Verify if the component's reminder must be send by email and if it has at least one attendee.\n   * @returns true if attendees can receive a reminder by email\n   */\n  Component.prototype.canRemindAttendeesByEmail = function() {\n    return this.alarm.action == 'email' &&\n      !this.isReadOnly &&\n      this.attendees && this.attendees.length > 0;\n  };\n\n  /**\n   * @function addAttachUrl\n   * @memberof Component.prototype\n   * @desc Add a new attach URL if not already defined\n   * @param {string} attachUrl - the URL\n   * @returns the number of values in the list of attach URLs\n   */\n  Component.prototype.addAttachUrl = function(attachUrl) {\n    if (angular.isUndefined(this.attachUrls)) {\n      this.attachUrls = [{value: attachUrl}];\n    }\n    else {\n      for (var i = 0; i < this.attachUrls.length; i++) {\n        if (this.attachUrls[i].value == attachUrl) {\n          break;\n        }\n      }\n      if (i == this.attachUrls.length)\n        this.attachUrls.push({value: attachUrl});\n    }\n    return this.attachUrls.length - 1;\n  };\n\n  /**\n   * @function deleteAttachUrl\n   * @memberof Component.prototype\n   * @desc Remove an attach URL\n   * @param {number} index - the URL index in the list of attach URLs\n   */\n  Component.prototype.deleteAttachUrl = function(index) {\n    if (index > -1 && this.attachUrls.length > index) {\n      this.attachUrls.splice(index, 1);\n    }\n  };\n\n  /**\n   * @function $addDueDate\n   * @memberof Component.prototype\n   * @desc Add a due date\n   */\n  Component.prototype.$addDueDate = function() {\n    this.due = new Date();\n    this.due.setMinutes(Math.round(this.due.getMinutes()/15)*15);\n    this.dueDate = this.due.toISOString();\n  };\n\n  /**\n   * @function $deleteDueDate\n   * @memberof Component.prototype\n   * @desc Delete a due date\n   */\n  Component.prototype.$deleteDueDate = function() {\n    delete this.due;\n    delete this.dueDate;\n  };\n\n  /**\n   * @function $addStartDate\n   * @memberof Component.prototype\n   * @desc Add a start date\n   */\n  Component.prototype.$addStartDate = function() {\n    this.start = new Date();\n    this.start.setMinutes(Math.round(this.start.getMinutes()/15)*15);\n  };\n\n  /**\n   * @function $deleteStartDate\n   * @memberof Component.prototype\n   * @desc Delete a start date\n   */\n  Component.prototype.$deleteStartDate = function() {\n    delete this.start;\n    delete this.startDate;\n  };\n\n  /**\n   * @function $reset\n   * @memberof Component.prototype\n   * @desc Reset the original state the component's data.\n   */\n  Component.prototype.$reset = function() {\n    var _this = this;\n    angular.forEach(this, function(value, key) {\n      if (key != 'constructor' && key[0] != '$') {\n        delete _this[key];\n      }\n    });\n    this.init(this.$shadowData);\n    this.$shadowData = this.$omit();\n  };\n\n  /**\n   * @function $reply\n   * @memberof Component.prototype\n   * @desc Reply to an invitation.\n   * @returns a promise of the HTTP operation\n   */\n  Component.prototype.$reply = function() {\n    var _this = this, data, path = [this.pid, this.id];\n\n    if (this.occurrenceId)\n      path.push(this.occurrenceId);\n\n    data = {\n      reply: this.reply,\n      delegatedTo: this.delegatedTo,\n      alarm: this.$hasAlarm? this.alarm : {}\n    };\n\n    return Component.$$resource.save(path.join('/'), data, { action: 'rsvpAppointment' })\n      .then(function(data) {\n        // Make a copy of the data for an eventual reset\n        _this.$shadowData = _this.$omit();\n        return data;\n      });\n  };\n\n  /**\n   * @function $adjust\n   * @memberof Component.prototype\n   * @desc Adjust the start, day, and/or duration of the component\n   * @returns a promise of the HTTP operation\n   */\n  Component.prototype.$adjust = function(params) {\n    var path = [this.pid, this.id];\n\n    if (_.every(_.values(params), function(v) { return v === 0; }))\n      // No changes\n      return Component.$q.when();\n\n    if (this.occurrenceId)\n      path.push(this.occurrenceId);\n\n    Component.$log.debug('adjust ' + path.join('/') + ' ' + JSON.stringify(params));\n\n    return Component.$$resource.save(path.join('/'), params, { action: 'adjust' });\n  };\n\n  /**\n   * @function $save\n   * @memberof Component.prototype\n   * @desc Save the component to the server.\n   * @param {object} extraAttributes - additional attributes to send to the server\n   */\n  Component.prototype.$save = function(extraAttributes) {\n    var _this = this, options, path, component, date, dlp;\n\n    component = this.$omit();\n    dlp = Component.$Preferences.$mdDateLocaleProvider;\n\n    // Format dates and times\n    component.startDate = component.start ? component.start.format(dlp, '%Y-%m-%d') : '';\n    component.startTime = component.start ? component.start.format(dlp, '%H:%M') : '';\n    component.endDate = component.end ? component.end.format(dlp, '%Y-%m-%d') : '';\n    component.endTime = component.end ? component.end.format(dlp, '%H:%M') : '';\n    component.dueDate = component.due ? component.due.format(dlp, '%Y-%m-%d') : '';\n    component.dueTime = component.due ? component.due.format(dlp, '%H:%M') : '';\n    component.completedDate = component.completed ? component.completed.format(dlp, '%Y-%m-%d') : '';\n\n    // Update recurrence definition depending on selections\n    if (this.hasCustomRepeat()) {\n      if (this.repeat.frequency == 'monthly' && this.repeat.month.type && this.repeat.month.type == 'byday' ||\n          this.repeat.frequency == 'yearly' && this.repeat.year.byday) {\n        // BYDAY mask for a monthly or yearly recurrence\n        delete component.repeat.monthdays;\n        component.repeat.days = [{ day: this.repeat.month.day, occurrence: this.repeat.month.occurrence.toString() }];\n      }\n      else if ((this.repeat.frequency == 'monthly' || this.repeat.frequency == 'yearly') &&\n               this.repeat.month.type) {\n        // montly recurrence by month days or yearly by month\n        delete component.repeat.days;\n      }\n    }\n    else if (this.repeat.frequency && this.repeat.frequency != 'never') {\n      component.repeat = { frequency: this.repeat.frequency };\n    }\n    if (component.startDate && this.repeat.frequency && this.repeat.frequency != 'never') {\n      if (this.repeat.end == 'until' && this.repeat.until)\n        component.repeat.until = this.repeat.until.stringWithSeparator('-');\n      else if (this.repeat.end == 'count' && this.repeat.count)\n        component.repeat.count = this.repeat.count;\n      else {\n        delete component.repeat.until;\n        delete component.repeat.count;\n      }\n    }\n    else {\n      delete component.repeat;\n    }\n\n    // Check status\n    if (this.status == 'not-specified')\n      delete component.status;\n    else if (this.status != 'completed')\n      delete component.completedDate;\n\n    // Verify alarm\n    if (component.startDate && this.$hasAlarm) {\n      if (this.alarm.action && this.alarm.action == 'email' &&\n          !(this.attendees && this.attendees.length > 0)) {\n        // No attendees; email reminder must be sent to organizer only\n        component.alarm.attendees = 0;\n        component.alarm.organizer = 1;\n      }\n    }\n    else {\n      component.alarm = {};\n    }\n\n    // Build URL\n    path = [this.pid, this.id];\n\n    if (this.isNew)\n      options = { action: 'saveAs' + this.type.capitalize() };\n\n    if (this.occurrenceId)\n      path.push(this.occurrenceId);\n\n    angular.extend(component, extraAttributes);\n\n    return Component.$$resource.save(path.join('/'), component, options)\n      .then(function(data) {\n        // Make a copy of the data for an eventual reset\n        _this.$shadowData = _this.$omit();\n        return data;\n      });\n  };\n\n  /**\n   * @function $delete\n   * @memberof Component.prototype\n   * @desc Delete the component from the server.\n   * @param {boolean} occurrenceOnly - delete this occurrence only\n   */\n  Component.prototype.remove = function(occurrenceOnly) {\n    var _this = this, path = [this.pid, this.id];\n\n    if (occurrenceOnly && this.occurrenceId)\n      path.push(this.occurrenceId);\n\n    return Component.$$resource.remove(path.join('/'));\n  };\n\n  /**\n   * @function $unwrap\n   * @memberof Component.prototype\n   * @desc Unwrap a promise.\n   * @param {promise} futureComponentData - a promise of some of the Component's data\n   */\n  Component.prototype.$unwrap = function(futureComponentData) {\n    var _this = this;\n\n    // Expose the promise\n    this.$futureComponentData = futureComponentData;\n\n    // Resolve the promise\n    this.$futureComponentData.then(function(data) {\n      _this.init(data);\n      // Make a copy of the data for an eventual reset\n      _this.$shadowData = _this.$omit();\n    }, function(data) {\n      angular.extend(_this, data);\n      _this.isError = true;\n      Component.$log.error(_this.error);\n    });\n  };\n\n  /**\n   * @function $omit\n   * @memberof Component.prototype\n   * @desc Return a sanitized object used to send to the server.\n   * @return an object literal copy of the Component instance\n   */\n  Component.prototype.$omit = function() {\n    var component = {};\n    angular.forEach(this, function(value, key) {\n      if (key != 'constructor' &&\n          (key == '$hasAlarm' || key[0] != '$') &&\n          key != 'blocks') {\n        component[key] = angular.copy(value);\n      }\n    });\n\n    return component;\n  };\n\n  /**\n   * @function repeatDescription\n   * @memberof Component.prototype\n   * @desc Return a localized description of the recurrence definition\n   * @return a localized string\n   */\n  Component.prototype.repeatDescription = function() {\n    var localizedString = null;\n    if (this.repeat)\n      localizedString = l('repeat_' + this.repeat.frequency.toUpperCase());\n\n    return localizedString;\n  };\n\n  /**\n   * @function alarmDescription\n   * @memberof Component.prototype\n   * @desc Return a localized description of the reminder definition\n   * @return a localized string\n   */\n  Component.prototype.alarmDescription = function() {\n    var key, localizedString = null;\n    if (this.alarm) {\n      key = ['reminder' + this.alarm.quantity, this.alarm.unit, this.alarm.reference].join('_');\n      localizedString = l(key);\n      if (key === localizedString)\n        // No localized string for this reminder definition\n        localizedString = [this.alarm.quantity,\n                           l('reminder_' + this.alarm.unit),\n                           l('reminder_' + this.alarm.reference)].join(' ');\n    }\n\n    return localizedString;\n  };\n\n  /**\n   * @function copyTo\n   * @memberof Component.prototype\n   * @desc Copy an event to a calendar\n   * @param {string} calendar - a target calendar UID\n   * @returns a promise of the HTTP operation\n   */\n  Component.prototype.copyTo = function(calendar) {\n    return Component.$$resource.post(this.pid + '/' + this.id, 'copy', {destination: calendar});\n  };\n\n  /**\n   * @function moveTo\n   * @memberof Component.prototype\n   * @desc Move an event to a calendar\n   * @param {string} calendar - a target calendar UID\n   * @returns a promise of the HTTP operation\n   */\n  Component.prototype.moveTo = function(calendar) {\n    return Component.$$resource.post(this.pid + '/' + this.id, 'move', {destination: calendar});\n  };\n\n  Component.prototype.toString = function() {\n    return '[Component ' + this.id + ']';\n  };\n\n\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  /* jshint loopfunc: true */\n  'use strict';\n\n  /**\n   * @ngInject\n   */\n  CalendarController.$inject = ['$scope', '$rootScope', '$state', '$stateParams', 'sgHotkeys', 'Calendar', 'Component', 'Preferences', 'stateEventsBlocks'];\n  function CalendarController($scope, $rootScope, $state, $stateParams, sgHotkeys, Calendar, Component, Preferences, stateEventsBlocks) {\n    var vm = this, deregisterCalendarsList, hotkeys = [];\n\n    // Make the toolbar state of all-day events persistent\n    if (angular.isUndefined(CalendarController.expandedAllDays))\n      CalendarController.expandedAllDays = false;\n\n    vm.selectedDate = $stateParams.day.asDate();\n    vm.expandedAllDays = CalendarController.expandedAllDays;\n    vm.toggleAllDays = toggleAllDays;\n    vm.views = stateEventsBlocks;\n    vm.changeDate = changeDate;\n    vm.changeView = changeView;\n\n\n    _registerHotkeys(hotkeys);\n\n    Preferences.ready().then(function() {\n      _formatDate(vm.selectedDate);\n    });\n\n    // Refresh current view when the list of calendars is modified\n    deregisterCalendarsList = $rootScope.$on('calendars:list', updateView);\n\n    $scope.$on('$destroy', function() {\n      // Destroy event listener when the controller is being deactivated\n      deregisterCalendarsList();\n      // Deregister hotkeys\n      _.forEach(hotkeys, function(key) {\n        sgHotkeys.deregisterHotkey(key);\n      });\n    });\n\n\n    function _registerHotkeys(keys) {\n      keys.push(sgHotkeys.createHotkey({\n        key: l('hotkey_today'),\n        description: l('Today'),\n        callback: changeDate,\n        args: new Date()\n      }));\n      keys.push(sgHotkeys.createHotkey({\n        key: l('hotkey_dayview'),\n        description: l('Day'),\n        callback: changeView,\n        args: 'day'\n      }));\n      keys.push(sgHotkeys.createHotkey({\n        key: l('hotkey_weekview'),\n        description: l('Week'),\n        callback: changeView,\n        args: 'week'\n      }));\n      keys.push(sgHotkeys.createHotkey({\n        key: l('hotkey_monthview'),\n        description: l('Month'),\n        callback: changeView,\n        args: 'month'\n      }));\n      keys.push(sgHotkeys.createHotkey({\n        key: l('hotkey_multicolumndayview'),\n        description: l('Multicolumn Day View'),\n        callback: changeView,\n        args: 'multicolumnday'\n      }));\n      keys.push(sgHotkeys.createHotkey({\n        key: 'left',\n        description: l('Move backward'),\n        callback: _goToPeriod,\n        args: -1\n      }));\n      keys.push(sgHotkeys.createHotkey({\n        key: 'right',\n        description: l('Move forward'),\n        callback: _goToPeriod,\n        args: +1\n      }));\n\n      // Register the hotkeys\n      _.forEach(keys, function(key) {\n        sgHotkeys.registerHotkey(key);\n      });\n    }\n\n\n    function _goToPeriod($event, direction) {\n      var date;\n\n      if ($stateParams.view == 'week') {\n        date = vm.selectedDate.beginOfWeek(Preferences.defaults.SOGoFirstDayOfWeek).addDays(7 * direction);\n      }\n      else if ($stateParams.view == 'month') {\n        date = vm.selectedDate;\n        date.setDate(1);\n        date.setMonth(date.getMonth() + direction);\n      }\n      else {\n        date = vm.selectedDate.addDays(direction);\n      }\n\n      changeDate($event, date);\n    }\n\n    /**\n     * Format a date according to the current view.\n     * - Day/Multicolumn: name of weekday\n     * - Week: week number\n     * - Month: name of month\n     */\n    function _formatDate(date) {\n      if ($stateParams.view == 'month') {\n        date.setDate(1);\n        date.setHours(12);\n        date.$dateFormat = '%B %Y';\n      }\n      else if ($stateParams.view == 'week') {\n        date.setTime(date.beginOfWeek(Preferences.defaults.SOGoFirstDayOfWeek).getTime());\n        date.$dateFormat = l('Week %d').replace('%d', '%U');\n      }\n      else {\n        date.$dateFormat = '%A';\n      }\n    }\n\n    // Expand or collapse all-day events\n    function toggleAllDays() {\n      CalendarController.expandedAllDays = !CalendarController.expandedAllDays;\n      vm.expandedAllDays = CalendarController.expandedAllDays;\n    }\n\n    function updateView() {\n      // The list of calendars has changed; update the views\n      // See stateEventsBlocks in Scheduler.app.js\n      Component.$eventsBlocksForView($stateParams.view, $stateParams.day.asDate()).then(function(data) {\n        var i, j, view;\n        for (i = 0; i < data.length; i++) {\n          view = data[i];\n          if (vm.views[i]) {\n            _.forEach(view.allDayBlocks, function(blocks, day) {\n              vm.views[i].allDayBlocks[day] = blocks;\n            });\n            _.forEach(view.blocks, function(blocks, day) {\n              vm.views[i].blocks[day] = blocks;\n            });\n          }\n          else {\n            vm.views[i] = view;\n          }\n          if (view.id) {\n            // Note: this can't be done in Component service since it would make Component dependent on\n            // the Calendar service and create a circular dependency\n            vm.views[i].calendar = new Calendar({ id: view.id, name: view.calendarName });\n          }\n        }\n        // Remove previous views\n        for (j = vm.views.length; j >= i; j--)\n          vm.views.splice(j, 1);\n      });\n    }\n\n    // Change calendar's date\n    function changeDate($event, newDate) {\n      var date = newDate? newDate.getDayString() : angular.element($event.currentTarget).attr('date');\n      if (newDate)\n        _formatDate(newDate);\n      $state.go('calendars.view', { day: date });\n    }\n\n    // Change calendar's view\n    function changeView($event, view) {\n      $state.go('calendars.view', { view: view });\n    }\n}\n\n  angular\n    .module('SOGo.SchedulerUI')  \n    .controller('CalendarController', CalendarController);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /**\n   * @ngInject\n   */\n  CalendarListController.$inject = ['$rootScope', '$scope', '$timeout', '$state', '$mdDialog', 'sgHotkeys', 'sgFocus', 'Dialog', 'Preferences', 'CalendarSettings', 'Calendar', 'Component', 'Alarm'];\n  function CalendarListController($rootScope, $scope, $timeout, $state, $mdDialog, sgHotkeys, focus, Dialog, Preferences, CalendarSettings, Calendar, Component, Alarm) {\n    var vm = this, hotkeys = [];\n\n    vm.component = Component;\n    vm.componentType = 'events';\n    vm.selectedList = 0;\n    vm.selectComponentType = selectComponentType;\n    vm.unselectComponents = unselectComponents;\n    vm.selectAll = selectAll;\n    vm.searchMode = searchMode;\n    vm.toggleComponentSelection = toggleComponentSelection;\n    vm.confirmDeleteSelectedComponents = confirmDeleteSelectedComponents;\n    vm.openEvent = openEvent;\n    vm.openTask = openTask;\n    vm.newComponent = newComponent;\n    vm.filterpopup = filterpopup;\n    vm.filter = filter;\n    vm.filteredBy = filteredBy;\n    vm.sort = sort;\n    vm.sortedBy = sortedBy;\n    vm.reload = reload;\n    vm.cancelSearch = cancelSearch;\n    vm.mode = { search: false, multiple: 0 };\n\n\n    _registerHotkeys(hotkeys);\n\n    // Select list based on user's settings\n    Preferences.ready().then(function() {\n      var type = 'events';\n      if (Preferences.settings.Calendar.SelectedList == 'tasksListView') {\n        vm.selectedList = 1;\n        type = 'tasks';\n      }\n      selectComponentType(type, { reload: true }); // fetch events/tasks lists\n    });\n\n    // Refresh current list when the list of calendars is modified\n    $rootScope.$on('calendars:list', function() {\n      Component.$filter(vm.componentType, { reload: true });\n    });\n\n    // Update the component being dragged\n    $rootScope.$on('calendar:dragend', updateComponentFromGhost);\n\n    $scope.$on('$destroy', function() {\n      // Deregister hotkeys\n      _.forEach(hotkeys, function(key) {\n        sgHotkeys.deregisterHotkey(key);\n      });\n    });\n\n\n    function _registerHotkeys(keys) {\n      keys.push(sgHotkeys.createHotkey({\n        key: l('hotkey_search'),\n        description: l('Search'),\n        callback: searchMode\n      }));\n      keys.push(sgHotkeys.createHotkey({\n        key: l('hotkey_create_event'),\n        description: l('Create a new event'),\n        callback: newComponent,\n        args: 'appointment'\n      }));\n      keys.push(sgHotkeys.createHotkey({\n        key: l('hotkey_create_task'),\n        description: l('Create a new task'),\n        callback: newComponent,\n        args: 'task'\n      }));\n\n      // Register the hotkeys\n      _.forEach(keys, function(key) {\n        sgHotkeys.registerHotkey(key);\n      });\n    }\n\n    // Switch between components tabs\n    function selectComponentType(type, options) {\n      if (options && options.reload || vm.componentType != type) {\n        if (angular.isUndefined(Component['$' + type]))\n          Component.$filter(type);\n        vm.unselectComponents();\n        vm.componentType = type;\n        Component.saveSelectedList(type);\n      }\n    }\n\n    function unselectComponents() {\n      _.forEach(Component['$' + vm.componentType], function(component) {\n        component.selected = false;\n      });\n      vm.mode.multiple = 0;\n    }\n\n    function selectAll() {\n      _.forEach(Component['$' + vm.componentType], function(component) {\n        component.selected = true;\n      });\n      vm.mode.multiple = Component['$' + vm.componentType].length;\n    }\n\n    function toggleComponentSelection($event, component) {\n      component.selected = !component.selected;\n      vm.mode.multiple += component.selected? 1 : -1;\n      $event.preventDefault();\n      $event.stopPropagation();\n    }\n\n    function searchMode() {\n      vm.mode.search = true;\n      focus('search');\n    }\n\n    function confirmDeleteSelectedComponents() {\n      Dialog.confirm(l('Warning'),\n                     l('Are you sure you want to delete the selected components?'),\n                     { ok: l('Delete') })\n        .then(function() {\n          // User confirmed the deletion\n          var components = _.filter(Component['$' + vm.componentType], function(component) {\n            return component.selected;\n          });\n          Calendar.$deleteComponents(components).then(function() {\n            vm.mode.multiple = 0;\n            $rootScope.$emit('calendars:list');\n          });\n        });\n    }\n\n    function openEvent($event, event) {\n      openComponent($event, event, 'appointment');\n    }\n\n    function openTask($event, task) {\n      openComponent($event, task, 'task');\n    }\n\n    function openComponent($event, component, type) {\n      if (component.viewable) {\n        // UI/Templates/SchedulerUI/UIxAppointmentViewTemplate.wox or\n        // UI/Templates/SchedulerUI/UIxTaskViewTemplate.wox\n        var templateUrl = 'UIx' + type.capitalize() + 'ViewTemplate';\n        $mdDialog.show({\n          parent: angular.element(document.body),\n          targetEvent: $event,\n          clickOutsideToClose: true,\n          escapeToClose: true,\n          templateUrl: templateUrl,\n          controller: 'ComponentController',\n          controllerAs: 'editor',\n          locals: {\n            stateComponent: component\n          }\n        });\n      }\n    }\n\n    function newComponent($event, type, baseComponent) {\n      var component;\n\n      if (baseComponent) {\n        component = baseComponent;\n        component.updateFreeBusy();\n      }\n      else {\n        component = new Component({ pid: Calendar.$defaultCalendar(), type: type });\n      }\n\n      // UI/Templates/SchedulerUI/UIxAppointmentEditorTemplate.wox or\n      // UI/Templates/SchedulerUI/UIxTaskEditorTemplate.wox\n      var templateUrl = 'UIx' + type.capitalize() + 'EditorTemplate';\n      return $mdDialog.show({\n        parent: angular.element(document.body),\n        targetEvent: $event,\n        clickOutsideToClose: true,\n        escapeToClose: true,\n        templateUrl: templateUrl,\n        controller: 'ComponentEditorController',\n        controllerAs: 'editor',\n        locals: {\n          stateComponent: component\n        }\n      });\n    }\n\n    // Adjust component or create new component through drag'n'drop\n    function updateComponentFromGhost($event) {\n      var component, pointerHandler, coordinates, delta, params, calendarNumber, activeCalendars;\n\n      component = Component.$ghost.component;\n      pointerHandler = Component.$ghost.pointerHandler;\n\n      if (component.isNew) {\n        coordinates = pointerHandler.currentEventCoordinates;\n        component.summary = '';\n        if (component.isAllDay)\n          coordinates.duration -= 96;\n        component.setDelta(coordinates.duration * 15);\n        newComponent(null, 'appointment', component).finally(function() {\n          $timeout(function() {\n            Component.$resetGhost();\n          });\n        });\n      }\n      else {\n        delta = pointerHandler.currentEventCoordinates.getDelta(pointerHandler.originalEventCoordinates);\n        params = {\n          days: delta.dayNumber,\n          start: delta.start * 15,\n          duration: delta.duration * 15\n        };\n        if (pointerHandler.originalCalendar && delta.dayNumber !== 0) {\n          // The day number actually represents the destination calendar among the active calendars\n          calendarNumber = pointerHandler.currentEventCoordinates.dayNumber;\n          activeCalendars = _.filter(Calendar.$findAll(), { active: 1 });\n          params.destination = activeCalendars[calendarNumber].id;\n          params.days = 0;\n        }\n        if (component.isException || !component.occurrenceId)\n          // Component is an exception to a recurrence or is not recurrent;\n          // Immediately perform the adjustments\n          component.$adjust(params).then(function() {\n            $rootScope.$emit('calendars:list');\n            Alarm.getAlarms();\n          }, function(response) {\n            onComponentAdjustError(response, component, params);\n          }).finally(function() {\n            $timeout(function() {\n              Component.$resetGhost();\n            });\n          });\n        else if (component.occurrenceId) {\n          $mdDialog.show({\n            clickOutsideToClose: true,\n            escapeToClose: true,\n            locals: {\n              component: component,\n              params: params\n            },\n            template: [\n              '<md-dialog flex=\"50\" sm-flex=\"80\" xs-flex=\"90\">',\n              '  <md-dialog-content class=\"md-dialog-content\">',\n              '    <p>' + l('editRepeatingItem') + '</p>',\n              '  </md-dialog-content>',\n              '  <md-dialog-actions>',\n              '    <md-button ng-click=\"updateThisOccurrence()\">' + l('button_thisOccurrenceOnly') + '</md-button>',\n              '    <md-button ng-click=\"updateAllOccurrences()\">' + l('button_allOccurrences') + '</md-button>',\n              '  </md-dialog-actions>',\n              '</md-dialog>'\n            ].join(''),\n            controller: RecurrentComponentDialogController\n          }).then(function() {\n            $rootScope.$emit('calendars:list');\n          }).finally(function() {\n            $timeout(function() {\n              Component.$resetGhost();\n            });\n          });\n        }\n      }\n\n      /**\n       * @ngInject\n       */\n      RecurrentComponentDialogController.$inject = ['$scope', '$mdDialog', 'component', 'params'];\n      function RecurrentComponentDialogController($scope, $mdDialog, component, params) {\n        $scope.updateThisOccurrence = function() {\n          component.$adjust(params).then($mdDialog.hide, function(response) {\n            $mdDialog.cancel().then(function() {\n              onComponentAdjustError(response, component, params);\n            });\n          });\n        };\n        $scope.updateAllOccurrences = function() {\n          delete component.occurrenceId;\n          component.$adjust(params).then($mdDialog.hide, function(response) {\n            $mdDialog.cancel().then(function() {\n              onComponentAdjustError(response, component, params);\n            });\n          });\n        };\n      }\n\n      function onComponentAdjustError(response, component, params) {\n        if (response.status == CalendarSettings.ConflictHTTPErrorCode &&\n            response.data && response.data.message && angular.isObject(response.data.message)) {\n          $mdDialog.show({\n            parent: angular.element(document.body),\n            clickOutsideToClose: false,\n            escapeToClose: false,\n            templateUrl: 'UIxAttendeeConflictDialog',\n            controller: AttendeeConflictDialogController,\n            controllerAs: '$AttendeeConflictDialogController',\n            locals: {\n              component: component,\n              params: params,\n              conflictError: response.data.message\n            }\n          }).then(function() {\n            $rootScope.$emit('calendars:list');\n          });\n        }\n      }\n\n      /**\n       * @ngInject\n       */\n      AttendeeConflictDialogController.$inject = ['$scope', '$mdDialog', 'component', 'params', 'conflictError'];\n      function AttendeeConflictDialogController($scope, $mdDialog, component, params, conflictError) {\n        var vm = this;\n\n        vm.conflictError = conflictError;\n        vm.cancel = $mdDialog.cancel;\n        vm.save = save;\n\n        function save() {\n          component.$adjust(angular.extend({ ignoreConflicts: true }, params)).then($mdDialog.hide);\n        }\n      }\n    }\n\n    function filterpopup() {\n      return Component['$query' + vm.componentType.capitalize()].filterpopup;\n    }\n\n    function filter(filterpopup) {\n      Component.$filter(vm.componentType, { filterpopup: filterpopup });\n    }\n\n    function filteredBy(filterpopup) {\n      return Component['$query' + vm.componentType.capitalize()].filterpopup == filterpopup;\n    }\n\n    function sort(field) {\n      Component.$filter(vm.componentType, { sort: field });\n    }\n\n    function sortedBy(field) {\n      return Component['$query' + vm.componentType.capitalize()].sort == field;\n    }\n\n    function reload() {\n      Calendar.reloadWebCalendars().finally(function() {\n        $rootScope.$emit('calendars:list');\n      });\n    }\n\n    function cancelSearch() {\n      vm.mode.search = false;\n      Component.$filter(vm.componentType, { value: '' });\n    }\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .controller('CalendarListController', CalendarListController);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /**\n   * @ngInject\n   */\n  CalendarsController.$inject = ['$rootScope', '$scope', '$window', '$mdDialog', '$log', '$mdToast', 'FileUploader', 'sgFocus', 'Dialog', 'sgSettings', 'Preferences', 'Calendar', 'User', 'stateCalendars'];\n  function CalendarsController($rootScope, $scope, $window, $mdDialog, $log, $mdToast, FileUploader, focus, Dialog, Settings, Preferences, Calendar, User, stateCalendars) {\n    var vm = this;\n\n    vm.activeUser = Settings.activeUser;\n    vm.service = Calendar;\n    vm.newCalendar = newCalendar;\n    vm.addWebCalendar = addWebCalendar;\n    vm.confirmDelete = confirmDelete;\n    vm.editFolder = editFolder;\n    vm.revertEditing = revertEditing;\n    vm.renameFolder = renameFolder;\n    vm.share = share;\n    vm.importCalendar = importCalendar;\n    vm.showOnly = showOnly;\n    vm.showAll = showAll;\n    vm.showLinks = showLinks;\n    vm.showProperties = showProperties;\n    vm.subscribeToFolder = subscribeToFolder;\n    // vm.today = today;\n\n    vm.filter = { name: '' };\n    vm.sortableMode = false;\n    vm.toggleSortableMode = toggleSortableMode;\n    vm.resetSort = resetSort;\n    vm.sortableCalendars = {\n      scrollableContainer: '#sidenav-content',\n      containment: 'md-list',\n      orderChanged: _sortableEnd,\n      accept: _sortableAccept\n    };\n\n    Preferences.ready().then(function() {\n      vm.categories = _.map(Preferences.defaults.SOGoCalendarCategories, function(name) {\n        return { id: name.asCSSIdentifier(),\n                 name: name,\n                 color: Preferences.defaults.SOGoCalendarCategoriesColors[name]\n               };\n      });\n    });\n\n    // Dispatch the event named 'calendars:list' when a calendar is activated or deactivated or\n    // when the color of a calendar is changed\n    $scope.$watch(\n      function() {\n        return _.union(\n          _.map(Calendar.$calendars, function(o) { return _.pick(o, ['id', 'active', 'color']); }),\n          _.map(Calendar.$subscriptions, function(o) { return _.pick(o, ['id', 'active', 'color']); }),\n          _.map(Calendar.$webcalendars, function(o) { return _.pick(o, ['id', 'active', 'color']); })\n        );\n      },\n      function(newList, oldList) {\n        var commonList, ids, promise;\n\n        // Identify which calendar has changed\n        commonList = _.intersectionBy(newList, oldList, 'id');\n        ids = _.map(_.filter(commonList, function(o) {\n          var oldObject = _.find(oldList, { id: o.id });\n          return !_.isEqual(o, oldObject);\n        }), 'id');\n        promise = Calendar.$q.when();\n\n        if (ids.length > 0) {\n          $log.debug(ids.join(', ') + ' changed');\n          promise = Calendar.saveFoldersActivation(ids);\n        }\n        if (ids.length > 0 || commonList.length != newList.length || commonList.length != oldList.length)\n          promise.then(function() {\n            $rootScope.$emit('calendars:list');\n          });\n      },\n      true // compare for object equality\n    );\n\n    /**\n     * Only allow to sort items within the same list.\n     */\n    function _sortableAccept(sourceItemHandleScope, destSortableScope, destItemScope) {\n      return sourceItemHandleScope.sortableScope.element[0] == destSortableScope.element[0];\n    }\n\n    function _sortableEnd() {\n      Calendar.saveFoldersOrder(_.flatMap(Calendar.$findAll(), 'id'));\n    }\n\n    function toggleSortableMode() {\n      vm.sortableMode = !vm.sortableMode;\n      vm.filter.name = '';\n    }\n\n    function resetSort() {\n      Calendar.saveFoldersOrder();\n    }\n\n    function newCalendar(ev) {\n      Dialog.prompt(l('New calendar'), l('Name of the Calendar'))\n        .then(function(name) {\n          var calendar = new Calendar(\n            {\n              name: name,\n              isEditable: true,\n              isRemote: false,\n              owner: UserLogin\n            }\n          );\n          calendar.$id().then(function() {\n            Calendar.$add(calendar);\n          });\n        });\n    }\n\n    function addWebCalendar() {\n      Dialog.prompt(l('Subscribe to a web calendar...'), l('URL of the Calendar'), {inputType: 'url'})\n        .then(function(url) {\n          Calendar.$addWebCalendar(url).then(function(calendar) {\n            if (angular.isObject(calendar)) {\n              // Web calendar requires HTTP authentication\n              $mdDialog.show({\n                parent: angular.element(document.body),\n                clickOutsideToClose: true,\n                escapeToClose: true,\n                templateUrl: 'UIxWebCalendarAuthDialog',\n                controller: WebCalendarAuthDialogController,\n                controllerAs: '$WebCalendarAuthDialogController',\n                locals: {\n                  url: url,\n                  calendar: calendar\n                }\n              });\n            }\n          });\n        });\n\n      /**\n       * @ngInject\n       */\n      WebCalendarAuthDialogController.$inject = ['scope', '$mdDialog', 'url', 'calendar'];\n      function WebCalendarAuthDialogController(scope, $mdDialog, url, calendar) {\n        var vm = this,\n            parts = url.split(\"/\"),\n            hostname = parts[2];\n\n        vm.title = l(\"Please identify yourself to %{0}\").formatted(hostname);\n        vm.authenticate = function(form) {\n          if (form.$valid || !form.$error.required) {\n            calendar.setCredentials(vm.username, vm.password).then(function(message) {\n              $mdDialog.hide();\n            }, function(reason) {\n              form.password.$setValidity('credentials', false);\n            });\n          }\n        };\n        vm.cancel = function() {\n          $mdDialog.cancel();\n        };\n      }\n    }\n\n    function confirmDelete(folder) {\n      if (folder.isSubscription) {\n        // Unsubscribe without confirmation\n        folder.$delete()\n          .catch(function(data, status) {\n            Dialog.alert(l('An error occured while deleting the calendar \"%{0}\".', folder.name),\n                         l(data.error));\n          });\n      }\n      else {\n        Dialog.confirm(l('Warning'), l('Are you sure you want to delete the calendar \"%{0}\"?', folder.name),\n                       { ok: l('Delete') })\n          .then(function() {\n            folder.$delete()\n              .catch(function(data, status) {\n                Dialog.alert(l('An error occured while deleting the calendar \"%{0}\".', folder.name),\n                             l(data.error));\n              });\n          });\n      }\n    }\n\n    function importCalendar($event, folder) {\n      $mdDialog.show({\n        parent: angular.element(document.body),\n        targetEvent: $event,\n        clickOutsideToClose: true,\n        escapeToClose: true,\n        templateUrl: 'UIxCalendarImportDialog',\n        controller: CalendarImportDialogController,\n        controllerAs: '$CalendarImportDialogController',\n        locals: {\n          folder: folder\n        }\n      });\n\n      /**\n       * @ngInject\n       */\n      CalendarImportDialogController.$inject = ['scope', '$mdDialog', 'folder'];\n      function CalendarImportDialogController(scope, $mdDialog, folder) {\n        var vm = this;\n\n        vm.uploader = new FileUploader({\n          url: ApplicationBaseURL + [folder.id, 'import'].join('/'),\n          autoUpload: true,\n          queueLimit: 1,\n          filters: [{ name: filterByExtension, fn: filterByExtension }],\n          onSuccessItem: function(item, response, status, headers) {\n            var msg;\n\n            $mdDialog.hide();\n\n            if (response.imported === 0)\n              msg = l('No event was imported.');\n            else {\n              msg = l('A total of %{0} events were imported in the calendar.', response.imported);\n              $rootScope.$emit('calendars:list');\n            }\n\n            $mdToast.show(\n              $mdToast.simple()\n                .content(msg)\n                .position('top right')\n                .hideDelay(3000));\n          },\n          onErrorItem: function(item, response, status, headers) {\n            $mdToast.show({\n              template: [\n                '<md-toast>',\n                '  <div class=\"md-toast-content\">',\n                '    <md-icon class=\"md-warn md-hue-1\">error_outline</md-icon>',\n                '    <span>' + l('An error occurred while importing calendar.') + '</span>',\n                '  </div>',\n                '</md-toast>'\n              ].join(''),\n              position: 'top right',\n              hideDelay: 3000\n            });\n          }\n        });\n\n        vm.close = function() {\n          $mdDialog.hide();\n        };\n\n        function filterByExtension(item) {\n          var isTextFile = item.type.indexOf('text') === 0 ||\n              /\\.(ics)$/.test(item.name);\n\n          if (!isTextFile)\n            $mdToast.show({\n              template: [\n                '<md-toast>',\n                '  <div class=\"md-toast-content\">',\n                '    <md-icon class=\"md-warn md-hue-1\">error_outline</md-icon>',\n                '    <span>' + l('Select an iCalendar file (.ics).') + '</span>',\n                '  </div>',\n                '</md-toast>'\n              ].join(''),\n              position: 'top right',\n              hideDelay: 3000\n            });\n\n          return isTextFile;\n        }\n      }\n    }\n\n    function showOnly(calendar) {\n      _.forEach(Calendar.$findAll(), function(o) {\n        if (calendar.id == o.id)\n          o.active = 1;\n        else\n          o.active = 0;\n      });\n    }\n\n    function showAll() {\n      _.forEach(Calendar.$findAll(), function(o) { o.active = 1; });\n    }\n\n    function showLinks(calendar) {\n      $mdDialog.show({\n        parent: angular.element(document.body),\n        clickOutsideToClose: true,\n        escapeToClose: true,\n        templateUrl: calendar.id + '/links',\n        controller: LinksDialogController,\n        controllerAs: 'links',\n        locals: {\n          calendar: calendar\n        }\n      });\n      \n      /**\n       * @ngInject\n       */\n      LinksDialogController.$inject = ['$mdDialog', 'calendar'];\n      function LinksDialogController($mdDialog, calendar) {\n        var vm = this;\n        vm.calendar = calendar;\n        vm.close = close;\n\n        function close() {\n          $mdDialog.hide();\n        }\n      }\n    }\n\n    function showProperties(calendar) {\n      var color = calendar.color;\n      $mdDialog.show({\n        templateUrl: calendar.id + '/properties',\n        controller: PropertiesDialogController,\n        controllerAs: 'properties',\n        clickOutsideToClose: true,\n        escapeToClose: true,\n        locals: {\n          srcCalendar: calendar\n        }\n      }).catch(function() {\n        // Restore original color when cancelling or closing the dialog\n        calendar.color = color;\n      });\n      \n      /**\n       * @ngInject\n       */\n      PropertiesDialogController.$inject = ['$scope', '$mdDialog', 'srcCalendar'];\n      function PropertiesDialogController($scope, $mdDialog, srcCalendar) {\n        var vm = this;\n\n        vm.calendar = new Calendar(srcCalendar.$omit());\n        vm.saveProperties = saveProperties;\n        vm.close = close;\n\n        $scope.$watch(function() { return vm.calendar.color; }, function() {\n          srcCalendar.color = vm.calendar.color;\n        });\n\n        function saveProperties() {\n          vm.calendar.$save();\n          // Refresh list instance\n          srcCalendar.init(vm.calendar.$omit());\n          $mdDialog.hide();\n        }\n\n        function close() {\n          $mdDialog.cancel();\n        }\n      }\n    }\n\n    function editFolder(folder) {\n      vm.calendarName = folder.name;\n      vm.editMode = folder.id;\n      focus('calendarName_' + folder.id);\n    }\n\n    function revertEditing(folder) {\n      folder.$reset();\n      vm.editMode = false;\n    }\n\n    function renameFolder(folder) {\n      folder.$rename()\n        .then(function(data) {\n          vm.editMode = false;\n        });\n    }\n\n    function share(calendar) {\n      calendar.$acl.$users().then(function() {\n        $mdDialog.show({\n          templateUrl: calendar.id + '/UIxAclEditor', // UI/Templates/UIxAclEditor.wox\n          controller: 'AclController', // from the ng module SOGo.Common\n          controllerAs: 'acl',\n          clickOutsideToClose: true,\n          escapeToClose: true,\n          locals: {\n            usersWithACL: calendar.$acl.users,\n            User: User,\n            folder: calendar\n          }\n        });\n      });\n    }\n\n    // Callback of sgSubscribe directive\n    function subscribeToFolder(calendarData) {\n      $log.debug('subscribeToFolder ' + calendarData.owner + calendarData.name);\n      Calendar.$subscribe(calendarData.owner, calendarData.name).then(function(data) {\n         $mdToast.show(\n           $mdToast.simple()\n             .content(l('Successfully subscribed to calendar'))\n             .position('top right')\n             .hideDelay(3000));\n      });\n    }\n\n    // function today() {\n    //   var fragments = $window.location.hash.split('/'),\n    //       state = fragments[1],\n    //       view = fragments[2],\n    //       now = new Date(),\n    //       path = ['#', state, view, now.getDayString()];\n    //   $window.location = path.join('/');\n    // }\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .controller('CalendarsController', CalendarsController);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /**\n   * @ngInject\n   */\n  ComponentController.$inject = ['$rootScope', '$mdDialog', 'Calendar', 'Component', 'AddressBook', 'Alarm', 'Account', 'stateComponent'];\n  function ComponentController($rootScope, $mdDialog, Calendar, Component, AddressBook, Alarm, Account, stateComponent) {\n    var vm = this, component;\n\n    vm.calendarService = Calendar;\n    vm.service = Component;\n    vm.component = stateComponent;\n    vm.close = close;\n    vm.cardFilter = cardFilter;\n    vm.newMessageWithAllRecipients = newMessageWithAllRecipients;\n    vm.newMessageWithRecipient = newMessageWithRecipient;\n    vm.edit = edit;\n    vm.editAllOccurrences = editAllOccurrences;\n    vm.reply = reply;\n    vm.replyAllOccurrences = replyAllOccurrences;\n    vm.deleteOccurrence = deleteOccurrence;\n    vm.deleteAllOccurrences = deleteAllOccurrences;\n    vm.toggleRawSource = toggleRawSource;\n    vm.copySelectedComponent = copySelectedComponent;\n    vm.moveSelectedComponent = moveSelectedComponent;\n\n    // Load all attributes of component\n    if (angular.isUndefined(vm.component.$futureComponentData)) {\n      component = Calendar.$get(vm.component.pid).$getComponent(vm.component.id, vm.component.occurrenceId);\n      component.$futureComponentData.then(function() {\n        vm.component = component;\n        vm.organizer = [vm.component.organizer];\n      });\n    }\n\n    function close() {\n      $mdDialog.hide();\n    }\n\n    // Autocomplete cards for attendees\n    function cardFilter($query) {\n      return AddressBook.$filterAll($query);\n    }\n\n    function newMessageWithAllRecipients($event) {\n      var recipients = _.map(vm.component.attendees, function(attendee) {\n        return attendee.name + \" <\" + attendee.email + \">\";\n      });\n      _newMessage($event, recipients);\n    }\n\n    function newMessageWithRecipient($event, name, email) {\n      _newMessage($event, [name + \" <\" + email + \">\"]);\n    }\n\n    function _newMessage($event, recipients) {\n      Account.$findAll().then(function(accounts) {\n        var account = _.find(accounts, function(o) {\n          if (o.id === 0)\n            return o;\n        });\n\n        // We must initialize the Account with its mailbox\n        // list before proceeding with message's creation\n        account.$getMailboxes().then(function(mailboxes) {\n          account.$newMessage().then(function(message) {\n            angular.extend(message.editable, { to: recipients, subject: vm.component.summary });\n            $mdDialog.show({\n              parent: angular.element(document.body),\n              targetEvent: $event,\n              clickOutsideToClose: false,\n              escapeToClose: false,\n              templateUrl: '../Mail/UIxMailEditor',\n              controller: 'MessageEditorController',\n              controllerAs: 'editor',\n              locals: {\n                stateAccount: account,\n                stateMessage: message\n              }\n            });\n          });\n        });\n      });\n\n      $event.preventDefault();\n      $event.stopPropagation();\n    }\n\n    function edit() {\n      var type = (vm.component.component == 'vevent')? 'Appointment':'Task';\n      $mdDialog.hide().then(function() {\n        // UI/Templates/SchedulerUI/UIxAppointmentEditorTemplate.wox or\n        // UI/Templates/SchedulerUI/UIxTaskEditorTemplate.wox\n        var templateUrl = 'UIx' + type + 'EditorTemplate';\n        $mdDialog.show({\n          parent: angular.element(document.body),\n          clickOutsideToClose: true,\n          escapeToClose: true,\n          templateUrl: templateUrl,\n          controller: 'ComponentEditorController',\n          controllerAs: 'editor',\n          locals: {\n            stateComponent: vm.component\n          }\n        });\n      });\n    }\n\n    function editAllOccurrences() {\n      component = Calendar.$get(vm.component.pid).$getComponent(vm.component.id);\n      component.$futureComponentData.then(function() {\n        vm.component = component;\n        edit();\n      });\n    }\n\n    function reply(component) {\n      var c = component || vm.component;\n\n      c.$reply().then(function() {\n        $rootScope.$emit('calendars:list');\n        Alarm.getAlarms();\n        $mdDialog.hide();\n      });\n    }\n\n    function replyAllOccurrences() {\n      // Retrieve master event\n      component = Calendar.$get(vm.component.pid).$getComponent(vm.component.id);\n      component.$futureComponentData.then(function() {\n        // Propagate the participant status and alarm to the master event\n        component.reply = vm.component.reply;\n        component.delegatedTo = vm.component.delegatedTo;\n        component.$hasAlarm = vm.component.$hasAlarm;\n        component.alarm = vm.component.alarm;\n        // Send reply to the server\n        reply(component);\n      });\n    }\n\n    function deleteOccurrence() {\n      vm.component.remove(true).then(function() {\n        $rootScope.$emit('calendars:list');\n        $mdDialog.hide();\n      });\n    }\n\n    function deleteAllOccurrences() {\n      vm.component.remove().then(function() {\n        $rootScope.$emit('calendars:list');\n        $mdDialog.hide();\n      });\n    }\n\n    function toggleRawSource($event) {\n      Calendar.$$resource.post(vm.component.pid + '/' + vm.component.id, \"raw\").then(function(data) {\n        $mdDialog.hide();\n        $mdDialog.show({\n          parent: angular.element(document.body),\n          targetEvent: $event,\n          clickOutsideToClose: true,\n          escapeToClose: true,\n          template: [\n            '<md-dialog flex=\"40\" flex-sm=\"80\" flex-xs=\"100\" aria-label=\"' + l('View Raw Source') + '\">',\n            '  <md-dialog-content class=\"md-dialog-content\">',\n            '    <pre ng-bind-html=\"data\"></pre>',\n            '  </md-dialog-content>',\n            '  <md-dialog-actions>',\n            '    <md-button ng-click=\"close()\">' + l('Close') + '</md-button>',\n            '  </md-dialog-actions>',\n            '</md-dialog>'\n          ].join(''),\n          controller: ComponentRawSourceDialogController,\n          locals: { data: data }\n        });\n\n        /**\n         * @ngInject\n         */\n        ComponentRawSourceDialogController.$inject = ['scope', '$mdDialog', 'data'];\n        function ComponentRawSourceDialogController(scope, $mdDialog, data) {\n          scope.data = data;\n          scope.close = function() {\n            $mdDialog.hide();\n          };\n        }\n      });\n    }\n\n    function copySelectedComponent(calendar) {\n      vm.component.copyTo(calendar).then(function() {\n        $mdDialog.hide();\n        $rootScope.$emit('calendars:list');\n      });\n    }\n\n    function moveSelectedComponent(calendar) {\n      vm.component.moveTo(calendar).then(function() {\n        $mdDialog.hide();\n        $rootScope.$emit('calendars:list');\n      });\n    }\n  }\n\n  /**\n   * @ngInject\n   */\n  ComponentEditorController.$inject = ['$rootScope', '$scope', '$log', '$timeout', '$mdDialog', 'User', 'CalendarSettings', 'Calendar', 'Component', 'AddressBook', 'Card', 'Alarm', 'stateComponent'];\n  function ComponentEditorController($rootScope, $scope, $log, $timeout, $mdDialog, User, CalendarSettings, Calendar, Component, AddressBook, Card, Alarm, stateComponent) {\n    var vm = this, component, oldStartDate, oldEndDate, oldDueDate;\n\n    vm.service = Calendar;\n    vm.component = stateComponent;\n    vm.categories = {};\n    vm.showRecurrenceEditor = vm.component.$hasCustomRepeat;\n    vm.toggleRecurrenceEditor = toggleRecurrenceEditor;\n    vm.recurrenceMonthDaysAreRequired = recurrenceMonthDaysAreRequired;\n    vm.showAttendeesEditor = vm.component.attendees && vm.component.attendees.length;\n    vm.toggleAttendeesEditor = toggleAttendeesEditor;\n    //vm.searchText = null;\n    vm.cardFilter = cardFilter;\n    vm.addAttendee = addAttendee;\n    vm.removeAttendee = removeAttendee;\n    vm.addAttachUrl = addAttachUrl;\n    vm.priorityLevel = priorityLevel;\n    vm.reset = reset;\n    vm.cancel = cancel;\n    vm.edit = edit;\n    vm.save = save;\n    vm.attendeeConflictError = false;\n    vm.attendeesEditor = {\n      days: getDays(),\n      hours: getHours()\n    };\n    vm.addStartDate = addStartDate;\n    vm.addDueDate = addDueDate;\n\n    // Synchronize start and end dates\n    vm.adjustStartTime = adjustStartTime;\n    vm.adjustEndTime = adjustEndTime;\n    vm.adjustDueTime = adjustDueTime;\n\n    if (vm.component.start)\n      oldStartDate = new Date(vm.component.start.getTime());\n    if (vm.component.end)\n      oldEndDate = new Date(vm.component.end.getTime());\n    if (vm.component.due)\n      oldDueDate = new Date(vm.component.due.getTime());\n\n    function addAttachUrl() {\n      var i = vm.component.addAttachUrl('');\n      focus('attachUrl_' + i);\n    }\n\n    function toggleRecurrenceEditor() {\n      vm.showRecurrenceEditor = !vm.showRecurrenceEditor;\n      vm.component.$hasCustomRepeat = vm.showRecurrenceEditor;\n    }\n\n    function toggleAttendeesEditor() {\n      vm.showAttendeesEditor = !vm.showAttendeesEditor;\n    }\n\n    function recurrenceMonthDaysAreRequired() {\n      return vm.component &&\n        vm.component.repeat.frequency == 'monthly' &&\n        vm.component.repeat.month.type == 'bymonthday';\n    }\n\n    // Autocomplete cards for attendees\n    function cardFilter($query) {\n      AddressBook.$filterAll($query);\n      return AddressBook.$cards;\n    }\n\n    function addAttendee(card) {\n      var automaticallyExapand = (!vm.component.attendees || vm.component.attendees.length === 0);\n      if (angular.isString(card)) {\n        // User pressed \"Enter\" in search field, adding a non-matching card\n        if (card.isValidEmail()) {\n          vm.component.addAttendee(new Card({ emails: [{ value: card }] }));\n          vm.showAttendeesEditor |= automaticallyExapand;\n          vm.searchText = '';\n        }\n      }\n      else {\n        vm.component.addAttendee(card);\n        vm.showAttendeesEditor |= automaticallyExapand;\n      }\n    }\n\n    function removeAttendee(attendee, form) {\n      vm.component.deleteAttendee(attendee);\n      if (vm.component.attendees.length === 0)\n        vm.showAttendeesEditor = false;\n      form.$setDirty();\n    }\n\n    function priorityLevel() {\n      if (vm.component && vm.component.priority) {\n        if (vm.component.priority > 5)\n          return l('low');\n        else if (vm.component.priority > 4)\n          return l('normal');\n        else\n          return l('high');\n      }\n    }\n\n    function save(form, options) {\n      if (form.$valid) {\n        vm.component.$save(options)\n          .then(function(data) {\n            $rootScope.$emit('calendars:list');\n            Alarm.getAlarms();\n            $mdDialog.hide();\n          }, function(response) {\n            if (response.status == CalendarSettings.ConflictHTTPErrorCode &&\n                _.isObject(response.data.message))\n              vm.attendeeConflictError = response.data.message;\n            else\n              edit(form);\n          });\n      }\n    }\n\n    function reset(form) {\n      vm.component.$reset();\n      form.$setPristine();\n    }\n\n    function cancel(form) {\n      reset(form);\n      if (vm.component.isNew) {\n        // Cancelling the creation of a component\n        vm.component = null;\n      }\n      $mdDialog.cancel();\n    }\n\n    function edit(form) {\n      vm.attendeeConflictError = false;\n      form.$setPristine();\n      form.$setDirty();\n    }\n\n    function getDays() {\n      var days = [];\n\n      if (vm.component.start && vm.component.end)\n        days = vm.component.start.daysUpTo(vm.component.end);\n\n      return _.map(days, function(date) {\n        return { stringWithSeparator: date.stringWithSeparator(),\n                 getDayString: date.getDayString() };\n      });\n    }\n\n    function getHours() {\n      var hours = [];\n      for (var i = 0; i <= 23; i++) {\n        hours.push(i.toString());\n      }\n      return hours;\n    }\n\n    function addStartDate() {\n      vm.component.$addStartDate();\n      oldStartDate = new Date(vm.component.start.getTime());\n    }\n\n    function addDueDate() {\n      vm.component.$addDueDate();\n      oldDueDate = new Date(vm.component.due.getTime());\n    }\n\n    function adjustStartTime() {\n      if (vm.component.start) {\n        // Preserve the delta between the start and end dates\n        var delta;\n        delta = oldStartDate.valueOf() - vm.component.start.valueOf();\n        if (delta !== 0) {\n          oldStartDate = new Date(vm.component.start.getTime());\n          if (vm.component.type === 'appointment') {\n            vm.component.end = new Date(vm.component.start.getTime());\n            vm.component.end.addMinutes(vm.component.delta);\n            oldEndDate = new Date(vm.component.end.getTime());\n          }\n          updateFreeBusy();\n        }\n      }\n    }\n\n    function adjustEndTime() {\n      if (vm.component.end) {\n        // The end date must be after the start date\n        var delta = oldEndDate.valueOf() - vm.component.end.valueOf();\n        if (delta !== 0) {\n          delta = vm.component.start.minutesTo(vm.component.end);\n          if (delta < 0)\n            vm.component.end = new Date(oldEndDate.getTime());\n          else {\n            vm.component.delta = delta;\n            oldEndDate = new Date(vm.component.end.getTime());\n          }\n          updateFreeBusy();\n        }\n      }\n    }\n\n    function adjustDueTime() {\n      oldDueDate = new Date(vm.component.due.getTime());\n    }\n\n    function updateFreeBusy() {\n      vm.attendeesEditor.days = getDays();\n      vm.component.updateFreeBusy();\n    }\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .controller('ComponentController', ComponentController)\n    .controller('ComponentEditorController', ComponentEditorController);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  /* jshint validthis: true */\n  'use strict';\n\n  /*\n   * sgCalendarDay - An element that represents a day in the calendar's view\n   * @memberof SOGo.SchedulerUI\n   * @restrict element\n   * @param {string} sgDay - the day of the events to display (YYYYMMDD)\n   * @param {string} sgDayString - the day in ISO8601 format (YYYY-MM-DDTHH:MM+-HH:MM)\n   * @param {number} sgDayNumber - the day index within the calendar's view\n   *\n   * @example:\n\n   <sg-calendar-day\n       sg-day-string=\"2015-11-01T00:00-05:00\"\n       sg-day-number=\"0\"\n       sg-day=\"20151101\">\n     ..\n   </sg-calendar-day-table>\n  */\n  function sgCalendarDay() {\n    return {\n      restrict: 'E',\n      scope: {\n        day: '@sgDay',\n        dayNumber: '@sgDayNumber',\n        dayString: '@sgDayString',\n        calendar: '@sgCalendar'\n      },\n      controller: sgCalendarDayController\n    };\n  }\n\n  /**\n   * @ngInject\n   */\n  sgCalendarDayController.$inject = ['$scope', 'Calendar'];\n  function sgCalendarDayController($scope, Calendar) {\n    // Expose some scope variables to the controller\n    // See the sgCalendarDayTable directive\n    this.day = $scope.day;\n    this.dayNumber = $scope.dayNumber;\n    this.dayString = $scope.dayString;\n    this.calendarData = function() {\n      var pid, index, activeCalendars;\n      if ($scope.calendar) {\n        // A calendar is associated to the day; identify its index among active calendars\n        pid = $scope.calendar;\n        activeCalendars = _.filter(Calendar.$findAll(), { active: 1 });\n        index = _.findIndex(activeCalendars, function(calendar) {\n          return calendar.id == pid;\n        });\n        return { pid: pid, index: index };\n      }\n\n      return null;\n    };\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCalendarDay', sgCalendarDay);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /*\n   * sgCalendarDayBlock - An event block to be displayed in a week\n   * @memberof SOGo.SchedulerUI\n   * @restrict element\n   * @param {object} sgBlock - the event block definition\n   * @param {function} sgClick - the function to call when clicking on a block.\n   *        Two variables are available: clickEvent (the event that triggered the mouse click),\n   *        and clickComponent (a Component object)\n   *\n   * @example:\n\n   <sg-calendar-day-block\n      ng-repeat=\"block in blocks[day]\"\n      sg-block=\"block\"\n      sg-click=\"open(clickEvent, clickComponent)\" />\n  */\n  sgCalendarDayBlock.$inject = ['CalendarSettings'];\n  function sgCalendarDayBlock(CalendarSettings) {\n    return {\n      restrict: 'E',\n      scope: {\n        block: '=sgBlock',\n        clickBlock: '&sgClick'\n      },\n      replace: true,\n      template: template,\n      link: link\n    };\n\n    function template(tElem, tAttrs) {\n      var p = _.has(tAttrs, 'sgCalendarGhost')? '' : '::';\n\n      return [\n        '<div class=\"sg-event\"',\n        //    Add a class while dragging\n        '     ng-class=\"{\\'sg-event--dragging\\': block.dragging}\">',\n        '  <div class=\"eventInside\"',\n        '       ng-click=\"clickBlock({clickEvent: $event, clickComponent: block.component})\">',\n        //   Categories color stripes\n        '    <div class=\"sg-category\" ng-repeat=\"category in '+p+'block.component.categories\"',\n        '         ng-class=\"'+p+'(\\'bg-category\\' + category)\"',\n        '         ng-style=\"'+p+'{ right: ($index * 3) + \\'px\\' }\"></div>',\n        '    <div class=\"text\">',\n        //     Priority\n        '      <span ng-show=\"'+p+'block.component.c_priority\" class=\"sg-priority\">{{'+p+'block.component.c_priority}}</span>',\n        //     Summary\n        '      {{ '+p+'block.component.summary }}',\n        '      <span class=\"icons\">',\n        //       Component is reccurent\n        '        <md-icon ng-if=\"'+p+'block.component.occurrenceId\" class=\"material-icons icon-repeat\"></md-icon>',\n        //       Component has an alarm\n        '        <md-icon ng-if=\"'+p+'block.component.c_nextalarm\" class=\"material-icons icon-alarm\"></md-icon>',\n        //       Component is confidential\n        '        <md-icon ng-if=\"'+p+'block.component.c_classification == 2\" class=\"material-icons icon-visibility-off\"></md-icon>',\n        //       Component is private\n        '        <md-icon ng-if=\"'+p+'block.component.c_classification == 1\" class=\"material-icons icon-vpn-key\"></md-icon>',\n        '      </span>',\n        //     Location\n        '      <div class=\"secondary\" ng-if=\"'+p+'block.component.c_location\">',\n        '        <md-icon>place</md-icon> {{'+p+'block.component.c_location}}',\n        '      </div>',\n        '    </div>',\n        '  </div>',\n        '  <div class=\"ghostStartHour\" ng-if=\"block.startHour\">{{ block.startHour }}</div>',\n        '  <div class=\"ghostEndHour\" ng-if=\"block.endHour\">{{ block.endHour }}</div>',\n        '</div>'\n      ].join('');\n    }\n\n    function link(scope, iElement, attrs) {\n      var pc, left, right;\n\n      if (!_.has(attrs, 'sgCalendarGhost')) {\n\n        // Compute overlapping (2%)\n        pc = 100 / scope.block.siblings;\n        left = scope.block.position * pc;\n        right = 100 - (scope.block.position + 1) * pc;\n        if (pc < 100) {\n          if (left > 0)\n            left -= 2;\n          if (right > 0)\n            right -= 2;\n        }\n\n        // Add some padding (2%)\n        if (left === 0)\n          left = 2;\n        if (right === 0)\n          right = 2;\n\n        // Set position\n        iElement.css('left', left + '%');\n        iElement.css('right', right + '%');\n        if (!scope.block.component || !scope.block.component.c_isallday) {\n          iElement.addClass('starts' + scope.block.start);\n          iElement.addClass('lasts' + scope.block.length);\n        }\n\n        // Add class for user's participation state\n        if (scope.block.userState)\n          iElement.addClass('sg-event--' + scope.block.userState);\n\n        if (scope.block.component) {\n          // Set background color\n          iElement.addClass('bg-folder' + scope.block.component.pid);\n          iElement.addClass('contrast-bdr-folder' + scope.block.component.pid);\n\n          // Add class for transparency\n          if (scope.block.component.c_isopaque === 0)\n            iElement.addClass('sg-event--transparent');\n\n          // Add class for cancelled event\n          if (scope.block.component.c_status === 0)\n            iElement.addClass('sg-event--cancelled');\n        }\n\n      }\n    }\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCalendarDayBlock', sgCalendarDayBlock);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /*\n   * sgCalendarDayTable - Build list of blocks for a specific day\n   * @memberof SOGo.SchedulerUI\n   * @restrict element\n   * @param {object} sgBlocks - the events blocks definitions for the current view\n   * @param {string} sgDay - the day of the events to display\n   * @param {function} sgClick - the function to call when clicking on a block.\n   *        Two variables are available: event (the event that triggered the mouse click),\n   *        and component (a Component object)\n   *\n   * @example:\n\n   <sg-calendar-day-table\n       sg-blocks=\"calendar.blocks\"\n       sg-day=\"20150330\"\n       sg-click=\"open({ event: clickEvent, component: clickComponent })\"/>\n  */\n  function sgCalendarDayTable() {\n    return {\n      restrict: 'E',\n      scope: {\n        blocks: '=sgBlocks',\n        day: '@sgDay',\n        clickBlock: '&sgClick'\n      },\n      template: [\n        '<sg-calendar-day-block',\n        '  class=\"sg-draggable-calendar-block\"',\n        '  ng-repeat=\"block in blocks[day]\"',\n        '  sg-block=\"block\"',\n        '  sg-click=\"clickBlock({event: clickEvent, component: clickComponent})\"/>'\n      ].join('')\n    };\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCalendarDayTable', sgCalendarDayTable);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /*\n   * sgCalendarBlock - Applied to an event ghost block to be displayed while dragging an event block. Each day of the\n   *   calendar's view must have a ghost block.\n   * @memberof SOGo.SchedulerUI\n   * @restrict attribute\n   *\n   * @example:\n\n   <sg-calendar-day-block\n     sg-calendar-ghost\n     sg-block=\"list.component.$ghost\">/\n  */\n  sgCalendarGhost.$inject = ['$rootScope', '$timeout', 'CalendarSettings', 'Calendar', 'Component'];\n  function sgCalendarGhost($rootScope, $timeout, CalendarSettings, Calendar, Component) {\n    return {\n      restrict: 'A',\n      require: ['^sgCalendarDay', '^sgCalendarScrollView'],\n      link: link\n    };\n\n    function link(scope, iElement, attrs, ctrls) {\n      var domElement, calendarDayCtrl, scrollViewCtrl, calendarNumber, originalCalendarNumber;\n\n      domElement = iElement[0];\n      calendarDayCtrl = ctrls[0];\n      scrollViewCtrl = ctrls[1];\n      calendarNumber = -1;\n\n      iElement.addClass('sg-event--ghost md-whiteframe-3dp ng-hide');\n\n      // Listen on drag gestures\n      var deregisterDragStart = $rootScope.$on('calendar:dragstart', initGhost);\n      var deregisterDrag = $rootScope.$on('calendar:drag', updateGhost);\n      var deregisterDragEnd = $rootScope.$on('calendar:dragend', hideGhost);\n\n      // Deregister listeners on destroy\n      scope.$on('$destroy', function() {\n        deregisterDragStart();\n        deregisterDrag();\n        deregisterDragEnd();\n      });\n\n      function initGhost() {\n        var pid, calendarData, userState;\n\n        // Expose ghost block to the scope\n        scope.block = Component.$ghost;\n\n        calendarData = calendarDayCtrl.calendarData();\n        if (calendarData) {\n          // A calendar is associated to the day; this is a special multicolumn day view\n          calendarNumber = calendarData.index;\n          pid = calendarData.pid;\n          originalCalendarNumber = scope.block.pointerHandler.originalCalendar.index;\n        }\n\n        if (!pid)\n          pid = scope.block.component.pid;\n\n        // Add class for user's participation state\n        userState = scope.block.component.blocks[0].userState;\n        if (userState)\n          iElement.addClass('sg-event--' + userState);\n\n        // Set background color\n        iElement.addClass('bg-folder' + pid);\n      }\n\n      function hideGhost() {\n        // Remove background color\n        _.forEachRight(domElement.classList, function(c) {\n          if (/^bg-folder/.test(c))\n            iElement.removeClass(c);\n        });\n        // Hide ghost\n        iElement.addClass('ng-hide');\n      }\n\n      function updateGhost() {\n        // From SOGoEventDragGhostController._updateGhosts\n        var showGhost, isRelative, isAllDay, currentDay,\n            start, duration, durationLeft, maxDuration;\n\n        showGhost = false;\n\n        if (Calendar.$view && Calendar.$view.type == scrollViewCtrl.type) {\n          // The view of the dragging block is the scrolling view of this ghost block\n\n          isRelative   = scrollViewCtrl.type === 'multiday-allday';\n          isAllDay     = scope.block.component.c_isallday;\n          currentDay   = scope.block.pointerHandler.currentEventCoordinates.dayNumber;\n          start        = scope.block.pointerHandler.currentEventCoordinates.start;\n          durationLeft = scope.block.pointerHandler.currentEventCoordinates.duration;\n          maxDuration  = CalendarSettings.EventDragDayLength - start;\n\n          if (angular.isUndefined(durationLeft))\n            return;\n          duration = durationLeft;\n          if (duration > maxDuration)\n            duration = maxDuration;\n\n          if (currentDay > -1 &&                                 // pointer is inside viewport\n              ((calendarNumber < 0 &&                            // day is not associated to a calendar\n                currentDay == calendarDayCtrl.dayNumber) ||      // pointer is inside ghost's day\n               currentDay == calendarNumber &&                   // pointer is inside ghost's calendar\n               (originalCalendarNumber == calendarNumber ||      // still inside original calendar\n                !scope.block.component.isException)              // not an exception, event can be moved to a\n                                                                 // different calendar\n              )) {\n            // This ghost block (day) is the first of the dragging event\n            showGhost = true;\n            if (!isRelative) {\n              if (!isAllDay)\n                // Show start hour and set the vertical position\n                scope.block.startHour = getStartTime(start);\n              // Set the height\n              if (Calendar.$view.quarterHeight) {\n                iElement.css('top', (start * Calendar.$view.quarterHeight) + 'px');\n                iElement.css('height', (duration * Calendar.$view.quarterHeight) + 'px');\n              }\n              else\n                iElement.css('top', Calendar.$view.topOffset + 'px');\n            }\n            iElement.removeClass('fg-folder' + scope.block.component.pid);\n            iElement.removeClass('sg-event--ghost--last');\n            iElement.addClass('sg-event--ghost--first');\n            scope.block.isFirst = true;\n          }\n\n          durationLeft -= duration;\n          currentDay++;\n\n          // Search a subsequent block that matches the current ghost's day\n          while (!showGhost && durationLeft && currentDay <= calendarDayCtrl.dayNumber) {\n            duration = durationLeft;\n            if (duration > CalendarSettings.EventDragDayLength)\n              duration = CalendarSettings.EventDragDayLength;\n            if (currentDay > -1 && currentDay == calendarDayCtrl.dayNumber) {\n              // The dragging event overlaps this current ghost's day\n              showGhost = true;\n              if (!isRelative) {\n                iElement.css('top', Calendar.$view.topOffset + 'px');\n                // Set the height\n                if (Calendar.$view.quarterHeight)\n                  iElement.css('height', (duration * Calendar.$view.quarterHeight) + 'px');\n              }\n              iElement.removeClass('sg-event--ghost--first');\n              iElement.removeClass('sg-event--ghost--last');\n              // Trick for all-day events: set the foreground color to the background color so the event's title\n              // is not visible but the div size remains identical.\n              iElement.addClass('fg-folder' + scope.block.component.pid);\n            }\n            durationLeft -= duration;\n            currentDay++;\n            start = 0;\n          }\n          if (!durationLeft) {\n            // Reached last ghost block\n            if (isRelative) {\n              iElement.addClass('sg-event--ghost--last');\n            }\n            else if (!isAllDay) {\n              // Set the end date\n              scope.block.endHour = getEndTime(start, duration);\n            }\n          }\n        }\n\n        if (showGhost)\n          iElement.removeClass('ng-hide');\n        else\n          iElement.addClass('ng-hide');\n      }\n\n      function quartersToHM(quarters) {\n        var minutes, hours, mins;\n\n        minutes = quarters * 15;\n        hours = Math.floor(minutes / 60);\n        if (hours < 10)\n            hours = \"0\" + hours;\n        mins = minutes % 60;\n        if (mins < 10)\n            mins = \"0\" + mins;\n\n        return \"\" + hours + \":\" + mins;\n      }\n\n      function getStartTime(start) {\n        return quartersToHM(start);\n      }\n\n      function getEndTime(start, duration) {\n        var end = (start + duration) % CalendarSettings.EventDragDayLength;\n        return quartersToHM(end);\n      }\n    }\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCalendarGhost', sgCalendarGhost);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /*\n   * sgCalendarMonthDay - Build list of blocks for a specific day in a month\n   * @memberof SOGo.SchedulerUI\n   * @restrict element\n   * @param {object} sgBlocks - the events blocks definitions for the current view\n   * @param {string} sgDay - the day of the events to display\n   * @param {function} sgClick - the function to call when clicking on a block.\n   *        Two variables are available: event (the event that triggered the mouse click),\n   *        and component (a Component object)\n   *\n   * @example:\n\n   <sg-calendar-monh-day\n      sg-blocks=\"calendar.blocks\"\n      sg-day=\"20150408\"\n       sg-click=\"open({ event: clickEvent, component: clickComponent })\"/>\n  */\n  function sgCalendarMonthDay() {\n    return {\n      restrict: 'E',\n      scope: {\n        blocks: '=sgBlocks',\n        day: '@sgDay',\n        clickBlock: '&sgClick'\n      },\n      template: [\n        '<sg-calendar-month-event',\n        '  class=\"sg-draggable-calendar-block\"',\n        '  ng-repeat=\"block in blocks[day]\"',\n        '  sg-block=\"block\"',\n        '  sg-click=\"clickBlock({event: clickEvent, component: clickComponent})\"/>'\n      ].join('')\n    };\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCalendarMonthDay', sgCalendarMonthDay);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /*\n   * sgCalendarMonthEvent - An event block to be displayed in a month\n   * @memberof SOGo.Common\n   * @restrict element\n   * @param {object} sgBlock - the event block definition\n   * @ngInject\n   * @example:\n\n   <sg-calendar-month-event\n       ng-repeat=\"block in blocks[day]\"\n       sg-block=\"block\"/>\n  */\n  function sgCalendarMonthEvent() {\n    return {\n      restrict: 'E',\n      scope: {\n        block: '=sgBlock',\n        clickBlock: '&sgClick'\n      },\n      replace: true,\n      template: template,\n      link: link\n    };\n\n    function template(tElem, tAttrs) {\n      var p = _.has(tAttrs, 'sgCalendarGhost')? '' : '::';\n\n      return [\n        '<div class=\"sg-event\"',\n        //    Add a class while dragging\n        '     ng-class=\"{\\'sg-event--dragging\\': block.dragging}\"',\n        '     ng-click=\"clickBlock({clickEvent: $event, clickComponent: block.component})\">',\n        //   Categories color stripes\n        '  <div class=\"sg-category\" ng-repeat=\"category in '+p+'block.component.categories\"',\n        '       ng-class=\"'+p+'(\\'bg-category\\' + category)\"',\n        '       ng-style=\"'+p+'{ right: ($index * 3) + \\'px\\' }\"></div>',\n        '  <span class=\"secondary\" ng-if=\"'+p+'(!block.component.c_isallday && block.isFirst)\">{{ '+p+'block.component.startHour }}</span>',\n        //     Priority\n        '  <span ng-show=\"'+p+'block.component.c_priority\" class=\"sg-priority\">{{'+p+'block.component.c_priority}}</span>',\n        // Summary\n        '  {{ '+p+'block.component.summary }}',\n        '  <span class=\"icons\">',\n        //   Component is reccurent\n        '    <md-icon ng-if=\"'+p+'block.component.occurrenceId\" class=\"material-icons icon-repeat\"></md-icon>',\n        //   Component has an alarm\n        '    <md-icon ng-if=\"'+p+'block.component.c_nextalarm\" class=\"material-icons icon-alarm\"></md-icon>',\n        //   Component is confidential\n        '    <md-icon ng-if=\"'+p+'block.component.c_classification == 2\" class=\"material-icons icon-visibility-off\"></md-icon>',\n        //   Component is private\n        '    <md-icon ng-if=\"'+p+'block.component.c_classification == 1\" class=\"material-icons icon-vpn-key\"></md-icon>',\n        '  </span>',\n        '</div>'\n      ].join('');\n    }\n\n    function link(scope, iElement, attrs) {\n      if (!_.has(attrs, 'sgCalendarGhost')) {\n\n        // Add class for user's participation state\n        if (scope.block.userState)\n          iElement.addClass('sg-event--' + scope.block.userState);\n\n        if (scope.block.component) {\n          // Set background color\n          iElement.addClass('bg-folder' + scope.block.component.pid);\n\n          // Add class for transparency\n          if (scope.block.component.c_isopaque === 0)\n            iElement.addClass('sg-event--transparent');\n\n          // Add class for cancelled event\n          if (scope.block.component.c_status === 0)\n            iElement.addClass('sg-event--cancelled');\n        }\n\n      }\n    }\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCalendarMonthEvent', sgCalendarMonthEvent);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  /* jshint validthis: true */\n  'use strict';\n\n  /*\n   * sgCalendarScrollView - scrollable view that contains draggable elements\n   * @memberof SOGo.SchedulerUI\n   * @restrict attribute\n   * @param {string} sgCalendarScrollView - the view type (multiday, multiday-allday, or monthly)\n   *\n   * @example:\n\n   <md-content sg-calendar-scroll-view=\"multiday\">\n     ..\n   </md-content>\n  */\n  sgCalendarScrollView.$inject = ['$rootScope', '$window', '$document', '$q', '$timeout', '$mdGesture', 'Calendar', 'Component', 'Preferences'];\n  function sgCalendarScrollView($rootScope, $window, $document, $q, $timeout, $mdGesture, Calendar, Component, Preferences) {\n    return {\n      restrict: 'A',\n      scope: {\n        type: '@sgCalendarScrollView'\n      },\n      controller: sgCalendarScrollViewController,\n      link: function(scope, element, attrs, controller) {\n        var view, type, isMultiColumn = false;\n\n        view = null;\n        type = scope.type; // multiday, multiday-allday, monthly, unknown?\n        isMultiColumn = (element.attr('sg-view') == 'multicolumndayview');\n\n        // Expose isMultiColumn in the controller\n        // See sgNowLine directive\n        controller.isMultiColumn = isMultiColumn;\n\n        // Update the \"view\" object literal once the Angular template has been transformed\n        $timeout(initView);\n\n        // Deregister listeners when destroying the view\n        scope.$on('$destroy', function() {\n          if (view) {\n            view.$destroy();\n          }\n        });\n\n        function initView() {\n          view = new sgScrollView(element, type);\n\n          if (type != 'monthly')\n            // Scroll to the day start hour defined in the user's defaults\n            Preferences.ready().then(function() {\n              var time, hourCell, quartersOffset;\n              if (Preferences.defaults.SOGoDayStartTime) {\n                time = Preferences.defaults.SOGoDayStartTime.split(':');\n                hourCell = document.getElementById('hour' + parseInt(time[0]));\n                quartersOffset = parseInt(time[1]) * view.quarterHeight;\n                view.element.scrollTop = hourCell.offsetTop + quartersOffset;\n              }\n            });\n\n          // Expose quarter height to the controller\n          // See sgNowLine directive\n          controller.quarterHeight = view.quarterHeight;\n        }\n\n        /**\n         * sgScrollView\n         */\n        function sgScrollView($element, type) {\n          this.$element = $element;\n          this.element = $element[0];\n          this.type = type;\n          this.quarterHeight = this.getQuarterHeight();\n          this.scrollStep = 6 * this.quarterHeight;\n          this.dayNumbers = this.getDayNumbers();\n          this.maxX = this.getMaxColumns();\n\n          // Listen to dragstart and dragend events\n          this.deregisterDragStart = $rootScope.$on('calendar:dragstart', angular.bind(this, this.onDragStart));\n          this.deregisterDragStop = $rootScope.$on('calendar:dragend', angular.bind(this, this.onDragEnd));\n\n          this.bindedUpdateCoordinates = angular.bind(this, this.updateCoordinates);\n          this.bindedUpdateFromPointerHandler = angular.bind(this, this.updateFromPointerHandler);\n\n          // Compute coordinates of view element; recompute it on window resize\n          this.updateCoordinates();\n          angular.element($window).on('resize', this.bindedUpdateCoordinates);\n        }\n\n        sgScrollView.prototype = {\n\n          $destroy: function() {\n            this.deregisterDragStart();\n            this.deregisterDragStop();\n            this.$element.off('mousemove', this.bindedUpdateFromPointerHandler);\n            angular.element($window).off('resize', this.bindedUpdateCoordinates);\n          },\n\n          onDragStart: function() {\n            this.$element.on('mousemove', this.bindedUpdateFromPointerHandler);\n            this.updateCoordinates();\n            this.updateFromPointerHandler();\n          },\n\n          onDragEnd: function() {\n            this.$element.off('mousemove', this.bindedUpdateFromPointerHandler);\n            Calendar.$view = null;\n          },\n\n          getQuarterHeight: function() {\n            var hour0, hour23, height = null;\n\n            hour0 = document.getElementById('hour0');\n            hour23 = document.getElementById('hour23');\n            if (hour0 && hour23)\n              height = ((hour23.offsetTop - hour0.offsetTop) / (23 * 4));\n\n            return height;\n          },\n\n\n          getDayDimensions: function(viewLeft) {\n            var width, height, leftOffset, topOffset, nodes, domRect, tileHeader;\n\n            height = width = leftOffset = topOffset = 0;\n            nodes = this.element.getElementsByClassName('day');\n\n            if (nodes.length > 0) {\n              domRect = nodes[0].getBoundingClientRect();\n              height = domRect.height;\n              width = domRect.width;\n              leftOffset = domRect.left - viewLeft;\n              tileHeader = nodes[0].getElementsByClassName('sg-calendar-tile-header');\n              if (tileHeader.length > 0)\n                topOffset = tileHeader[0].clientHeight;\n            }\n\n            return { height: height, width: width, offset: { left: leftOffset, top: topOffset } };\n          },\n\n\n          getDayNumbers: function() {\n            var viewType = null, days, total, sum;\n\n            days = this.element.getElementsByTagName('sg-calendar-day');\n\n            return _.map(days, function(el, index) {\n              if (isMultiColumn)\n                return index;\n              else\n                return parseInt(el.attributes['sg-day-number'].value);\n            });\n          },\n\n\n          getMaxColumns: function() {\n            var mdGridList, max = 0;\n\n            if (this.type == 'monthly') {\n              mdGridList = this.element.getElementsByTagName('md-grid-list')[0];\n              max = parseInt(mdGridList.attributes['md-cols'].value) - 1;\n            }\n            else {\n              max = this.element.getElementsByClassName('day').length - 1;\n            }\n\n            return max;\n          },\n\n          // View has been resized;\n          // Compute the view's origins (x, y), a day's dimensions and left margin.\n          updateCoordinates: function() {\n            var domRect, dayDimensions;\n\n            domRect = this.element.getBoundingClientRect();\n            dayDimensions = this.getDayDimensions(domRect.left);\n\n            angular.extend(this, {\n              coordinates: {\n                x: domRect.left,\n                y: domRect.top\n              },\n              dayHeight: dayDimensions.height,\n              dayWidth: dayDimensions.width,\n              daysOffset: dayDimensions.offset.left,\n              topOffset: dayDimensions.offset.top\n            });\n          },\n\n\n          // From SOGoScrollController.updateFromPointerHandler\n          updateFromPointerHandler: function() {\n            var pointerHandler, pointerCoordinates, now, scrollY, minY, delta;\n\n            pointerHandler = Component.$ghost.pointerHandler;\n            if (this.coordinates && pointerHandler) {\n              pointerCoordinates = pointerHandler.getContainerBasedCoordinates(this);\n\n              if (pointerCoordinates) {\n                // Pointer is inside view; Adjust scrollbar if necessary\n                Calendar.$view = this;\n                now = new Date().getTime();\n                if (!this.lastScroll || now > this.lastScroll + 100) {\n                  this.lastScroll = now;\n                  scrollY = pointerCoordinates.y - this.scrollStep;\n                  if (scrollY < 0) {\n                    minY = -this.element.scrollTop;\n                    if (scrollY < minY)\n                      scrollY = minY;\n                    this.element.scrollTop += scrollY;\n                  }\n                  else {\n                    scrollY = pointerCoordinates.y + this.scrollStep;\n                    delta = scrollY - this.element.clientHeight;\n                    if (delta > 0) {\n                      this.element.scrollTop += delta;\n                    }\n                  }\n                }\n              }\n            }\n          }\n\n\n        };\n      }\n    };\n  }\n\n  sgCalendarScrollViewController.$inject = ['$scope'];\n  function sgCalendarScrollViewController($scope) {\n    // Expose the view type to the controller\n    // See sgCalendarGhost directive\n    this.type = $scope.type;\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCalendarScrollView', sgCalendarScrollView);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  /* jshint validthis: true */\n  'use strict';\n\n  /*\n   * sgCategoryStylesheet - Add CSS stylesheet for a category's color\n   * @memberof SOGo.SchedulerUI\n   * @restrict attribute\n   * @param {object} ngModel - the object literal describing the category\n   * @example:\n\n    <sg-category-stylesheet\n         ng-repeat=\"category in categories\"\n         ng-model=\"category\" />\n  */\n  function sgCategoryStylesheet() {\n    return {\n      restrict: 'E',\n      require: 'ngModel',\n      scope: {\n        ngModel: '='\n      },\n      replace: true,\n      template: [\n        '<style type=\"text/css\">',\n        /* Background color */\n        '  .bg-category{{ ngModel.id }} {',\n        '    background-color: {{ ngModel.color }} !important;',\n        '  }',\n        /* Border color */\n        '  .bdr-category{{ ngModel.id }} {',\n        '    border-color: {{ ngModel.color }} !important;',\n        '  }',\n        '</style>'\n      ].join('')\n    };\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCategoryStylesheet', sgCategoryStylesheet);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /*\n   * sgDraggableCalendarBlock - Make an element draggable\n   * @memberof SOGo.SchedulerUI\n   * @restrict class or attribute\n   *\n   * @example:\n\n   <div class=\"sg-draggable-calendar-block\"/>\n  */\n  sgDraggableCalendarBlock.$inject = ['$rootScope', '$timeout', '$log', 'Preferences', 'Calendar', 'CalendarSettings', 'Component'];\n  function sgDraggableCalendarBlock($rootScope, $timeout, $log, Preferences, Calendar, CalendarSettings, Component) {\n    return {\n      restrict: 'CA',\n      require: '^sgCalendarDay',\n      link: link\n    };\n\n    function link(scope, element, attrs, calendarDayCtrl) {\n      if (scope.block) {\n        if (scope.block.component.editable && !scope.block.userState) {\n          // Add dragging grips to existing event block\n          initGrips();\n        }\n        else {\n          element.removeClass('sg-draggable-calendar-block');\n          return;\n        }\n      }\n\n      // Start dragging on mousedown\n      element.on('mousedown', onDragDetect);\n\n      // Deregister listeners when removing the element from the DOM\n      scope.$on('$destroy', function() {\n        element.off('mousedown', onDragDetect);\n        element.off('mousemove', onDrag);\n      });\n\n      function initGrips() {\n        var component, dayIndex, blockIndex, isFirstBlock, isLastBlock,\n            dragGrip, leftGrip, rightGrip, topGrip, bottomGrip;\n\n        // Don't show grips for blocks of less than 45 minutes\n        if (scope.block.length < 3) return;\n\n        component = scope.block.component;\n        dayIndex = scope.block.dayIndex;\n        blockIndex = _.findIndex(component.blocks, ['dayIndex', dayIndex]);\n        isFirstBlock = (blockIndex === 0);\n        isLastBlock = (blockIndex === component.blocks.length - 1);\n\n        dragGrip = angular.element('<div class=\"dragGrip\"></div>');\n        dragGrip.addClass('bdr-folder' + component.pid);\n\n        if (component.c_isallday ||\n            element[0].parentNode.tagName === 'SG-CALENDAR-MONTH-DAY') {\n          if (isFirstBlock) {\n            leftGrip = angular.element('<div class=\"dragGrip-left\"></div>').append(dragGrip);\n            element.append(leftGrip);\n          }\n          if (isLastBlock) {\n            rightGrip = angular.element('<div class=\"dragGrip-right\"></div>').append(dragGrip.clone());\n            element.append(rightGrip);\n          }\n        }\n        else {\n          if (isFirstBlock) {\n            topGrip = angular.element('<div class=\"dragGrip-top\"></div>').append(dragGrip);\n            element.append(topGrip);\n          }\n          if (isLastBlock) {\n            bottomGrip = angular.element('<div class=\"dragGrip-bottom\"></div>').append(dragGrip.clone());\n            element.append(bottomGrip);\n          }\n        }\n      }\n\n      function onDragDetect(ev) {\n        var dragMode, pointerHandler, hasVerticalScrollbar, rect, scrollableZone;\n\n        ev.stopPropagation();\n\n        hasVerticalScrollbar = ev.target.scrollHeight > ev.target.clientHeight + 1;\n\n        if (hasVerticalScrollbar) {\n          // Check if mouse click is inside scrollbar\n          rect = ev.target.getBoundingClientRect();\n          scrollableZone = rect.left + rect.width - 18;\n          if (ev.pageX > scrollableZone)\n            return;\n        }\n\n        dragMode = 'move-event';\n\n        if (scope.block && scope.block.component) {\n          // Move or resize existing component\n          if (ev.target.className == 'dragGrip-top' ||\n              ev.target.className == 'dragGrip-left')\n            dragMode = 'change-start';\n          else if (ev.target.className == 'dragGrip-bottom' ||\n                   ev.target.className == 'dragGrip-right' )\n            dragMode = 'change-end';\n        }\n        else {\n          // Create new component from dragging\n          dragMode = 'change-end';\n        }\n\n        // Initialize pointer handler\n        pointerHandler = new SOGoEventDragPointerHandler(dragMode);\n        pointerHandler.initFromEvent(ev);\n\n        // Update Component.$ghost\n        Component.$ghost.pointerHandler = pointerHandler;\n\n        // Stop dragging on the next \"mouseup\"\n        angular.element(document).one('mouseup', onDragEnd);\n\n        // Listen to mousemove and start dragging when mouse has moved from at least 3 pixels\n        angular.element(document).on('mousemove', onDrag);\n      }\n\n      function dragStart(ev) {\n        var block, eventType, isHourCell, isMonthly, startDate, newData, newComponent, pointerHandler, calendarData;\n\n        isHourCell = element.hasClass('clickableHourCell');\n        isMonthly = (element[0].parentNode.tagName == 'SG-CALENDAR-MONTH-DAY') ||\n          element.hasClass('clickableDayCell');\n\n        calendarData = calendarDayCtrl.calendarData();\n\n        if (scope.block && scope.block.component) {\n          // Move or resize existing component\n          block = scope.block;\n        }\n        else {\n          // Create new component from dragging\n          startDate = calendarDayCtrl.dayString.parseDate(Preferences.$mdDateLocaleProvider, '%Y-%m-%e');\n          newData = {\n            type: 'appointment',\n            pid: calendarData? calendarData.pid : Calendar.$defaultCalendar(),\n            summary: l('New Event'),\n            startDate: startDate,\n            isAllDay: isHourCell? 0 : 1\n          };\n          newComponent = new Component(newData);\n          block = {\n            component: newComponent,\n            dayNumber: calendarDayCtrl.dayNumber,\n            length: 0\n          };\n          block.component.blocks = [block];\n        }\n\n        // Determine event type\n        eventType = 'multiday';\n        if (isMonthly)\n          eventType = 'monthly';\n        else if (block.component.c_isallday)\n          eventType = 'multiday-allday';\n\n        // Mark all blocks as being dragged\n        _.forEach(block.component.blocks, function(b) {\n          b.dragging = true;\n        });\n\n        // Update pointer handler\n        pointerHandler = Component.$ghost.pointerHandler;\n        pointerHandler.prepareWithEventType(eventType);\n        pointerHandler.initFromBlock(block);\n        if (calendarData)\n          // When the day is associated to a calendar, the day number becomes the calendar index\n          // among the active calendars\n          pointerHandler.initFromCalendar(calendarData);\n\n        // Update Component.$ghost\n        Component.$ghost.component = block.component;\n\n        $log.debug('emit calendar:dragstart ' + eventType);\n        $rootScope.$emit('calendar:dragstart');\n      }\n\n      function onDrag(ev) {\n        var pointerHandler = Component.$ghost.pointerHandler;\n\n        // Update\n        // - currentCoordinates\n        // - currentViewCoordinates\n        // - currentEventCoordinates\n        $timeout(function() {\n          pointerHandler.updateFromEvent(ev);\n        });\n      }\n\n      function onDragEnd(ev) {\n        var block, pointer;\n\n        block = scope.block;\n        pointer = Component.$ghost.pointerHandler;\n\n        // Deregister mouse events\n        angular.element(document).off('mousemove', onDrag);\n\n        if (pointer.dragHasStarted) {\n          $rootScope.$emit('calendar:dragend');\n          pointer.dragHasStarted = false;\n        }\n\n        // Unmark all blocks as being dragged\n        if (block && block.component)\n          _.forEach(block.component.blocks, function(b) {\n            b.dragging = false;\n          });\n      }\n\n      /**\n       * SOGoCoordinates\n       */\n      function SOGoCoordinates() {\n      }\n\n      SOGoCoordinates.prototype = {\n        x: -1,\n        y: -1,\n\n        getDelta: function SC_getDelta(otherCoordinates) {\n          var delta = new SOGoCoordinates();\n          delta.x = this.x - otherCoordinates.x;\n          delta.y = this.y - otherCoordinates.y;\n\n          if (Calendar.$view) {\n            delta.days = Calendar.$view.dayNumbers[this.x] - Calendar.$view.dayNumbers[otherCoordinates.x];\n          }\n\n          return delta;\n        },\n\n        getDistance: function SC_getDistance(otherCoordinates) {\n          var delta = this.getDelta(otherCoordinates);\n\n          return Math.sqrt(delta.x * delta.x + delta.y * delta.y);\n        },\n\n        clone: function SC_clone() {\n          var coordinates = new SOGoCoordinates();\n          coordinates.x = this.x;\n          coordinates.y = this.y;\n\n          return coordinates;\n        }\n      };\n\n      /**\n       * SOGoEventDragEventCoordinates\n       */\n      function SOGoEventDragEventCoordinates(eventType) {\n        this.setEventType(eventType);\n      }\n\n      SOGoEventDragEventCoordinates.prototype = {\n        dayNumber: -1,\n        weekDay: -1,\n        start: -1,\n        duration: -1,\n\n        eventType: null,\n\n        setEventType: function(eventType) {\n          this.eventType = eventType;\n        },\n\n        initFromBlock: function(block) {\n          var prevDayNumber = -1;\n\n          if (this.eventType === 'monthly') {\n            this.start = 0;\n            this.duration = block.component.blocks.length * CalendarSettings.EventDragDayLength;\n          }\n          else {\n            // Get the start (first quarter) from the event's first block\n            // Compute overall length\n            this.start = block.component.blocks[0].start;\n            this.duration = _.sumBy(block.component.blocks, function(b) {\n              var delta, currentDayNumber;\n\n              currentDayNumber = b.dayNumber;\n              if (prevDayNumber < 0)\n                delta = 0;\n              else\n                delta = currentDayNumber - prevDayNumber - 1;\n              prevDayNumber = currentDayNumber;\n\n              return b.length + delta * CalendarSettings.EventDragDayLength;\n            });\n          }\n        },\n\n        initFromCalendar: function(calendarNumber) {\n          this.dayNumber = calendarNumber;\n        },\n\n        getDelta: function(otherCoordinates) {\n          var delta = new SOGoEventDragEventCoordinates();\n          delta.dayNumber = (this.dayNumber - otherCoordinates.dayNumber);\n          delta.start = (this.start - otherCoordinates.start);\n          delta.duration = (this.duration - otherCoordinates.duration);\n\n          return delta;\n        },\n\n        _quartersToHM: function(quarters) {\n          var minutes = quarters * 15;\n          var hours = Math.floor(minutes / 60);\n          if (hours < 10)\n            hours = \"0\" + hours;\n          var mins = minutes % 60;\n          if (mins < 10)\n            mins = \"0\" + mins;\n\n          return \"\" + hours + \":\" + mins;\n        },\n\n        getStartTime: function() {\n          return this._quartersToHM(this.start);\n        },\n\n        getEndTime: function() {\n          var end = (this.start + this.duration) % CalendarSettings.EventDragDayLength;\n          return this._quartersToHM(end);\n        },\n\n        clone: function() {\n          var coordinates = new SOGoEventDragEventCoordinates();\n          coordinates.dayNumber = this.dayNumber;\n          coordinates.start = this.start;\n          coordinates.duration = this.duration;\n\n          return coordinates;\n        }\n      };\n\n      /**\n       * SOGoEventDragPointerHandler\n       */\n      function SOGoEventDragPointerHandler(dragMode) {\n        this.dragMode = dragMode;\n      }\n\n      SOGoEventDragPointerHandler.prototype = {\n        // Pointer absolute xy coordinates within page\n        originalCoordinates: null,\n        currentCoordinates: null,\n\n        // Pointer relative xy coordinates within view (row-column)\n        originalViewCoordinates: null,\n        currentViewCoordinates: null,\n\n        // Event start-duration coordinates\n        originalEventCoordinates: null,\n        currentEventCoordinates: null,\n\n        originalCalendar: null,\n\n        dragHasStarted: false,\n\n        // Function to return the day and quarter coordinates of the pointer cursor\n        // within the day view\n        getEventViewCoordinates: null,\n\n        initFromBlock: function SEDPH_initFromBlock(block) {\n          this.currentEventCoordinates = new SOGoEventDragEventCoordinates(this.eventType);\n          this.originalEventCoordinates = new SOGoEventDragEventCoordinates(this.eventType);\n          this.originalEventCoordinates.initFromBlock(block);\n        },\n\n        initFromEvent: function SEDPH_initFromEvent(event) {\n          this.currentCoordinates = new SOGoCoordinates();\n          this.updateFromEvent(event);\n          this.originalCoordinates = this.currentCoordinates.clone();\n        },\n\n        initFromCalendar: function SEDPH_initFromCalendar(calendarData) {\n          this.originalCalendar = calendarData;\n          this.currentEventCoordinates.initFromCalendar(calendarData.index);\n          this.originalEventCoordinates.initFromCalendar(calendarData.index);\n        },\n\n        // Method continuously called while dragging\n        updateFromEvent: function SEDPH_updateFromEvent(event) {\n          // Event here is a DOM event, not a calendar event!\n          this.currentCoordinates.x = event.pageX;\n          this.currentCoordinates.y = event.pageY;\n\n          // From SOGoEventDragGhostController.updateFromPointerHandler\n          if (this.dragHasStarted && Calendar.$view) {\n            var newEventCoordinates = this.getEventViewCoordinates(Calendar.$view);\n            if (!this.originalViewCoordinates) {\n              this.originalViewCoordinates = this.getEventViewCoordinates(Calendar.$view, this.originalCoordinates);\n              if (Component.$ghost.component.isNew) {\n                this.setTimeFromQuarters(Component.$ghost.component.start, this.originalViewCoordinates.y);\n                $log.debug('new event start date ' + Component.$ghost.component.start);\n              }\n            }\n            if (!this.currentViewCoordinates ||\n                !newEventCoordinates ||\n                newEventCoordinates.x != this.currentViewCoordinates.x ||\n                newEventCoordinates.y != this.currentViewCoordinates.y) {\n              this.currentViewCoordinates = newEventCoordinates;\n              if (this.originalViewCoordinates) {\n                if (!newEventCoordinates) {\n                  this.currentViewCoordinates = this.originalViewCoordinates.clone();\n                }\n                this.updateEventCoordinates();\n              }\n            }\n          }\n          else if (this.originalCoordinates &&\n                   this.currentCoordinates &&\n                   !this.dragHasStarted) {\n            var distance = this.getDistance();\n            if (distance > 3) {\n              this.dragHasStarted = true;\n              dragStart(event);\n            }\n          }\n        },\n\n        // SOGoEventDragGhostController._updateCoordinates\n        // Extend this.currentCoordinates with start, dayNumber and duration\n        updateEventCoordinates: function SEDGC__updateCoordinates() {\n          var newDuration;\n\n          // Compute delta wrt to position of mouse at dragstart on the day/quarter grid\n          var delta = this.currentViewCoordinates.getDelta(this.originalViewCoordinates);\n          var deltaQuarters = delta.days * CalendarSettings.EventDragDayLength + delta.y;\n          $log.debug('quarters delta ' + deltaQuarters);\n\n          if (angular.isUndefined(this.originalEventCoordinates.start)) {\n            // Creating new appointment from DnD\n            this.originalEventCoordinates.dayNumber = Calendar.$view.dayNumbers[this.originalViewCoordinates.x];\n            this.originalEventCoordinates.start = this.originalViewCoordinates.y;\n          }\n          else if (this.originalEventCoordinates.dayNumber < 0) {\n            this.originalEventCoordinates.dayNumber = Calendar.$view.dayNumbers[scope.block.component.blocks[0].dayIndex];\n          }\n          // if (currentView == \"multicolumndayview\")\n          //   this._updateMulticolumnViewDayNumber_SEDGC();\n          // else\n          this.currentEventCoordinates.dayNumber = this.originalEventCoordinates.dayNumber;\n\n          if (this.dragMode == \"move-event\") {\n            this.currentEventCoordinates.start = this.originalEventCoordinates.start + deltaQuarters;\n            this.currentEventCoordinates.duration = this.originalEventCoordinates.duration;\n          }\n          else {\n            if (this.dragMode == \"change-start\") {\n              newDuration = this.originalEventCoordinates.duration - deltaQuarters;\n              if (newDuration > 0) {\n                this.currentEventCoordinates.start = this.originalEventCoordinates.start + deltaQuarters;\n                this.currentEventCoordinates.duration = newDuration;\n              }\n              else if (newDuration < 0) {\n                this.currentEventCoordinates.start = (this.originalEventCoordinates.start + this.originalEventCoordinates.duration);\n                this.currentEventCoordinates.duration = -newDuration;\n              }\n            }\n            else if (this.dragMode == \"change-end\") {\n              newDuration = this.originalEventCoordinates.duration + deltaQuarters;\n              if (newDuration > 0) {\n                this.currentEventCoordinates.start = this.originalEventCoordinates.start;\n                this.currentEventCoordinates.duration = newDuration;\n              }\n              else if (newDuration < 0) {\n                this.currentEventCoordinates.start = this.originalEventCoordinates.start + newDuration;\n                this.currentEventCoordinates.duration = -newDuration;\n              }\n            }\n          }\n\n          var deltaDays;\n          if (this.currentEventCoordinates.start < 0) {\n            deltaDays = Math.ceil(-this.currentEventCoordinates.start / CalendarSettings.EventDragDayLength);\n            this.currentEventCoordinates.start += deltaDays * CalendarSettings.EventDragDayLength;\n            this.currentEventCoordinates.dayNumber -= deltaDays;\n          }\n          else if (this.currentEventCoordinates.start >= CalendarSettings.EventDragDayLength) {\n            deltaDays = Math.floor(this.currentEventCoordinates.start / CalendarSettings.EventDragDayLength);\n            this.currentEventCoordinates.start -= deltaDays * CalendarSettings.EventDragDayLength;\n            this.currentEventCoordinates.dayNumber += deltaDays;\n          }\n\n          $log.debug('event coordinates ' + JSON.stringify(this.currentEventCoordinates));\n          $rootScope.$emit('calendar:drag');\n        },\n\n        // SOGoEventDragPointerHandler.getContainerBasedCoordinates\n        getContainerBasedCoordinates: function SEDPH_getCBC(view, pointerCoordinates) {\n          var currentCoordinates = pointerCoordinates || this.currentCoordinates;\n          var coordinates = currentCoordinates.getDelta(view.coordinates);\n          var container = view.element;\n\n          if (coordinates.x < view.daysOffset || coordinates.x > container.clientWidth ||\n              coordinates.y < 0 || coordinates.y > container.clientHeight)\n            coordinates = null;\n\n          return coordinates;\n        },\n\n        prepareWithEventType: function SEDPH_prepareWithEventType(eventType) {\n          var methods = { \"multiday\": this.getEventMultiDayViewCoordinates,\n                          \"multiday-allday\": this.getEventMultiDayAllDayViewCoordinates,\n                          \"monthly\": this.getEventMonthlyViewCoordinates,\n                          \"unknown\": null };\n          var method = methods[eventType];\n          this.eventType = eventType;\n          this.getEventViewCoordinates = method;\n        },\n\n        getEventMultiDayViewCoordinates: function SEDPH_gEMultiDayViewC(view, pointerCoordinates) {\n          /* x = day; y = quarter */\n          var coordinates = this.getEventMultiDayAllDayViewCoordinates(view, pointerCoordinates); // get the x coordinate\n          if (coordinates) {\n            var quarterHeight = view.quarterHeight;\n            var pxCoordinates = this.getContainerBasedCoordinates(view, pointerCoordinates);\n            pxCoordinates.y += view.element.scrollTop;\n\n            coordinates.y = Math.floor((pxCoordinates.y - CalendarSettings.EventDragHorizontalOffset) / quarterHeight);\n            var maxY = CalendarSettings.EventDragDayLength - 1;\n            if (coordinates.y < 0)\n              coordinates.y = 0;\n            else if (coordinates.y > maxY)\n              coordinates.y = maxY;\n          }\n\n          return coordinates;\n        },\n        getEventMultiDayAllDayViewCoordinates: function SEDPH_gEMultiDayADVC(view, pointerCoordinates) {\n          /* x = day; y = quarter */\n          var coordinates;\n\n          var pxCoordinates = this.getContainerBasedCoordinates(view, pointerCoordinates);\n          if (pxCoordinates) {\n            coordinates = new SOGoCoordinates();\n\n            var dayWidth = view.dayWidth;\n            var daysOffset = view.daysOffset;\n\n            coordinates.x = Math.floor((pxCoordinates.x - daysOffset) / dayWidth);\n            var minX = 0;\n            var maxX = Calendar.$view.maxX;\n            if (this.dragMode != 'move-event') {\n              var calendarData = calendarDayCtrl.calendarData();\n              if (calendarData)\n                // Resizing an event can't span a different day when in multicolumn view\n                minX = maxX = calendarData.index;\n            }\n            if (coordinates.x < minX)\n              coordinates.x = minX;\n            else if (coordinates.x > maxX)\n              coordinates.x = maxX;\n            coordinates.y = 0;\n          }\n          else {\n            coordinates = null;\n          }\n\n          return coordinates;\n        },\n        getEventMonthlyViewCoordinates: function SEDPH_gEMonthlyViewC(view, pointerCoordinates) {\n          /* x = day; y = quarter */\n          var coordinates;\n\n          var pxCoordinates = this.getContainerBasedCoordinates(view, pointerCoordinates);\n          if (pxCoordinates) {\n            coordinates = new SOGoCoordinates();\n\n            var maxX = view.maxX;\n            var daysTopOffset = 0;\n            var dayWidth = view.dayWidth;\n            var daysOffset = view.daysOffset;\n            var dayHeight = view.dayHeight;\n            var daysY = Math.floor((pxCoordinates.y - daysTopOffset) / dayHeight);\n            if (daysY < 0)\n              daysY = 0;\n\n            coordinates.x = Math.floor((pxCoordinates.x - daysOffset) / dayWidth);\n            if (coordinates.x < 0)\n              coordinates.x = 0;\n            else if (coordinates.x > maxX)\n              coordinates.x = maxX;\n            coordinates.x += (maxX + 1) * daysY;\n            coordinates.y = 0;\n          }\n          else {\n            coordinates = null;\n          }\n\n          return coordinates;\n        },\n\n        getDistance: function SEDPH_getDistance() {\n          return this.currentCoordinates.getDistance(this.originalCoordinates);\n        },\n\n        setTimeFromQuarters: function SEDPH_setTimeFromQuarters(date, quarters) {\n          var hours, minutes;\n          hours = Math.floor(quarters / 4);\n          minutes = (quarters % 4) * 15;\n          date.setHours(hours, minutes);\n        }\n      };\n    }\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgDraggableCalendarBlock', sgDraggableCalendarBlock);\n})();\n\n","/* -*- Mode: js; indent-tabs-mode: nil; js-indent-level: 2 -*- */\n\n(function() {\n  /* jshint validthis: true */\n  'use strict';\n\n  /*\n   * sgNowLine - Now line to be displayed on top of current day\n   * @restrict class\n  */\n  function sgNowLine() {\n    return {\n      restrict: 'C',\n      require: '^^sgCalendarScrollView',\n      link: link,\n      controller: sgNowLineController\n    };\n\n    function link(scope, iElement, iAttr, sgCalendarScrollViewCtrl) {\n      function _getDays() {\n        return iElement.find('sg-calendar-day');\n      }\n      function _getView() {\n        return sgCalendarScrollViewCtrl.quarterHeight;\n      }\n\n      // We need to wait for the view to be compiled\n      var _unwatchView = scope.$watch(_getView, function(quarterHeight) {\n        if (quarterHeight) {\n          _unwatchView(); // self release\n          scope.quarterHeight = quarterHeight;\n          // We need to wait for the days to be compiled\n          var _unwatchDays = scope.$watch(_getDays, function(days) {\n            if (days.length) {\n              _unwatchDays(); // self release\n              scope.days = days;\n              // Draw the line\n              scope.updateLine();\n            }\n          });\n        }\n      });\n    }\n  }\n\n  /**\n   * @ngInject\n   */\n  sgNowLineController.$inject = ['$scope', '$element', '$timeout'];\n  function sgNowLineController($scope, $element, $timeout) {\n    var _this = this, updater,\n        scrollViewCtrl = $element.controller('sgCalendarScrollView');\n\n    $scope.nowDay = null;\n    $scope.lineElement = null;\n    $scope.updateLine = _updateLine;\n\n    $scope.$on('$destroy', function() {\n      if (updater)\n        $timeout.cancel(updater);\n    });\n\n\n    function _updateLine(force) {\n      var now = new Date(), // TODO: adjust to user's timezone\n          nowDay = now.getDayString(),\n          hours = now.getHours(),\n          hourHeight = $scope.quarterHeight * 4,\n          minutes = now.getMinutes(),\n          minuteHeight = $scope.quarterHeight/15,\n          position = parseInt(hours   * hourHeight   +\n                              minutes * minuteHeight -\n                              1);\n\n      if (force || nowDay != $scope.nowDay) {\n        if ($scope.lineElement)\n          $scope.lineElement.remove();\n        $scope.lineElement = _addLine(nowDay, $scope.days);\n        $scope.nowDay = nowDay;\n      }\n\n      if ($scope.lineElement) {\n        // Current day is displayed\n        $scope.lineElement.css('top', position + \"px\");\n        // Update line every minute\n        updater = $timeout(angular.bind(_this, $scope.updateLine), 60000);\n      }\n    }\n\n    function _addLine(nowDay, days) {\n      var $lineElement = angular.element('<sg-now-line>');\n\n      if (scrollViewCtrl.isMultiColumn) {\n        // In multicolumn day view, the line must go over all columns\n        if (days && days[0].attributes['sg-day'].value == nowDay)\n          $element.append($lineElement);\n      }\n      else\n        _.forEach(days, function(dayElement) {\n          if (dayElement.attributes['sg-day'].value == nowDay) {\n            angular.element(dayElement).find('div').eq(0).append($lineElement);\n          }\n        });\n\n      return $lineElement;\n    }\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgNowLine', sgNowLine);\n})();\n"]}